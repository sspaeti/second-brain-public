{
  "/": {
    "title": "Second Brain üß†",
    "content": "\nWelcome to my public [[Second Brain]]! This is a space where I store my notes, ideas, insights, and connections I've made throughout my life. Organized as a [[Zettelkasten]] (or a [[Digital Garden]]), you can explore the various topics that interest me, learn from the content I've gathered, and see how everything is connected.\n\n## Navigation\nThere are multiple ways to navigate my Second Brain:\n1. Use the search bar on the top right or press `cmd+k` (`ctrl+k` on Windows) or click on the Search button (top right) to search for any term.\n2. Click on a note to explore its content, and follow the links and backlinks to dive deeper into related topics.\n3. Interact with the graph at the bottom of the page to visualize connections between notes and click on any node to navigate directly to that note.\n\n## Map of Content (MOC)\nMy Second Brain is continuously growing, and while I have some essential [[Map of Content (MOC)]] starting points listed below, there are many more topics to discover as you explore. Feel free to dive into any of the following areas:\n\n| Category                       | Topics                                                                                                           |\n|--------------------------------|------------------------------------------------------------------------------------------------------------------|\n| [[Personal Knowledge Management (PKM)]] | [[Smart Note Taking]], [[Zettelkasten]], [[Linking Your Thinking (LYT)]], [[Literature Notes]], [[Fleeting Notes]], [[Permanent Notes]] |\n| [[Deep Life]]                      | [[Digital Minimalism]], [[Deep Work]], [[What Makes a Happy Life]], [[Ultradian Rhythm]], [[Routines such as Sports or Meditation]], [[Journaling]], [[Stoic]]         |\n| [[Writing]]                        | [[On Writing]], [[How to Write Well]], [[Writing Effectively]], [[Writers Block]]               |\n| Reading                        | [[How to Read Books]], [[Speed Reading]], [[Reading Books for a Happy Life]], [[Readwise]]                                                 |\n| [[Data Engineering]]*               | [[Data Engineering Approaches]], [[Data Orchestrators]], [[Datafusion]], [[Ballista (Arrow)]], [[ETL is Changing]], [[Data Modelling is Changing]], [[Kubernetes]], [[Managed Data Stacks]], [[Open-source Data Engineering Projects]] |\n| [[Productivity]]                   | [[Getting Things Done (GTD)]], [[Two Minutes Rules]], [[Creativity vs Productivity]]         |\n| [[Digital Garden]]                 | [[Public Second Brain with Quartz]], [[Open-source Obsidian Publish Alternatives]], [[Static Site Generators (SSG)]]     |\n| [[Python]]                         | [[Python and Functional Programming]], [[Python *args and **kwargs]]                                                           |\n| Other Topics                   | [[Minimalism]], [[Location Independent Lifestyle]], [[Education is Changing]], [[Vim]] |\n\n\\**If you're interested in diving deeper into data engineering, visit the [Data Glossary](https://glossary.airbyte.com/), a digital garden I've built focusing on data and data engineering concepts.*\n\nEnjoy exploring my Second Brain, and I hope you find valuable insights and connections that inspire or help you in your journey!\n\n## Stay Updated\nIf you find the content of my Second Brain valuable and want to stay updated, consider subscribing to my [Newsletter](https://list.sspaeti.com/subscription/form), reading [Recent Newsletters](https://brain.sspaeti.com/newsletter/), following the [RSS feed](https://brain.sspaeti.com/index.xml), or seeing the latest updates below in recent notes.\n\n\u003c!--\n\u003cform method=\"post\" action=\"https://list.sspaeti.com/subscription/form\" class=\"listmonk-form\"\u003e\n    \u003cdiv\u003e\n        \u003cinput type=\"hidden\" name=\"nonce\" /\u003e\n        \u003cinput type=\"email\" name=\"email\" required placeholder=\"Subscribe: Add your email here.\" size=\"32\" id=\"mce-EMAIL\" /\u003e\n        \u003cinput id=\"4625c\" type=\"hidden\" name=\"l\" checked value=\"4625c037-fda8-45f7-9a66-47d765c6562b\"/\u003e\n        \u003cinput type=\"submit\" value=\"Subscribe\" /\u003e\n    \u003c/div\u003e\n\u003c/form\u003e\n--\u003e\n",
    "lastmodified": "2023-06-23T10:05:17.748541352+02:00",
    "tags": null
  },
  "/admonition-call-outs": {
    "title": "Admonition (Markdown)",
    "content": "The¬†`admonition`,¬†also known as¬†_call-outs_, are shortcuts baked into most Markdown framework. It's a nice way to include side content without significantly interrupting the reading flow.\n\n\u003e [!example] Example Admonition\n\u003e\n\u003e This is an Admonition that is built into my website framework [[GoHugo]]. It supports 12 different¬†types of admonitions.\n\n\n[[Markdown]] or HTML format in the content is supported.\n- A¬†**note**¬†banner\n- An¬†**abstract**¬†banner\n- An¬†**info**¬†banner\n- and so forth, \n\nA good list of different admonitions on [Extended Shortcodes](https://ublogger.netlify.app/theme-documentation-extended-shortcodes/), which is the theme for my website.\n\n---\nOrigin: [Theme Documentation - Extended Shortcodes |](https://ublogger.netlify.app/theme-documentation-extended-shortcodes/) \nReferences: \nCreated [[2022-05-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.71222167+02:00",
    "tags": null
  },
  "/annual-work-reflection-2022-social": {
    "title": "Annual Work Reflection 2022",
    "content": "\nüéÑ Soon is Christmas, and it's always good to recap at the end of the year. The years always fly by like nothing, but a lot happened in the last year. My main goal is always to be true to myself and learn something new every day (if possible).\n\nI'm proud of what I achieved this year, some of which I would have thought were possible. But many things are possible by slowly keeping going and believing in myself.\n\nüë®üèª‚Äçüéì New skills I learned in 2022:\n- Using vim as my full-time editor üôÉ For people who don't know, it's essentially an editor without menus and mouse functions. The cool thing, I use the vim motions for writing and coding, and it's the best thing that happened to my productivity. I wrote about my [[Personal Knowledge Management Workflow for a Deeper Life]] \n- Solving a Rubik's cube in under 2 minutes (my goal is one minute)  - if you like to learn, I took some notes on [[Rubiks Cube- How to solve it]]\n- Building a true [[Second Brain]] and using it for all parts of my life. It's another game-changer for this year.\n- Switching to a strange-looking Kinesis ergonomic keyboard and relearning typing while switching from the CH layout to the US. This seems small, but relearning muscle memory is quite hard.\n\nüèÜ Some highlights that I achieved this year:\n- I left my comfort zone and started a part-time job as a part-time writer after being a full-time engineer before/.\n * Besides the personal Second Brain, I published a public version with a nice workflow of adding a hashtag #publish to my personal note. At the same time, I redesigned the [Blog](https://www.sspaeti.com) and the [Second Brain](https://brain.sspaeti.com/).\n* I started a connected [Data Glossary](https://glossary.airbyte.com/) from scratch.\n* Data Insights with deep dive into different fields of data engineering. \n\t* [Data Orchestration Trends](https://airbyte.com/blog/data-orchestration-trends), [Data Lake / Lakehouse Guide](https://airbyte.com/blog/data-lake-lakehouse-guide-powered-by-table-formats-delta-lake-iceberg-hudi), [The Rise of the Semantic Layer](https://airbyte.com/blog/the-rise-of-the-semantic-layer-metrics-on-the-fly), [Rust for Data Engineers](https://airbyte.com/blog/rust-for-data-engineering), and [more](https://airbyte.com/blog-authors/simon-spati).\n* Created a new [Open Data Stack Project](https://github.com/airbytehq/open-data-stack/) with hands-on examples open on GitHub.\n* [Guest blog](https://www.databricks.com/blog/2022/07/11/using-airbyte-for-unified-data-integration-into-databricks.html) with Databricks.\n* The first appearance on YouTube [Data Engineer Turns His Hobby Into a Six-Figure Career](https://youtu.be/dNASkBuhPy0).\n* [First live Stream](https://www.youtube.com/live/sa49O_Ho1X4?feature=share) (and Podcast [Spotify](https://open.spotify.com/episode/69D1hHVXNajQpVnByuk7Ky?si=FnAgnadDQLC_3f1_fuNzYw)) with Delta Lake and Denny Lee.\n* Called among the [Top 25 Data Engineering Voices](https://databand.ai/blog/the-top-data-engineering-influencers-on-linkedin/).\n* And many more.\n\nI don't know your take if you have read this far, but hopefully, it inspires and motivates me to write or learn new things. There are a lot of talks about hustling all the time, but it doesn't have to be crazy at work (as this excellent [It Doesn't Have to Be Crazy at Work](https://www.amazon.com/Doesnt-Have-Be-Crazy-Work/dp/0062874780) describes best).  \n\nIt's much more sustainable if you take your time and do things slowly or at your pace. Most of the above grew over a very long period, and now was just a good year where I could convert a lot of it into tangible projects. Find your motivation and purpose, and the rest will come automatically. \n\nWith that, I wish you all a good vacation time and a beautiful Christmas time with family and friends. And thanks for all the support and constructive comments along the way. I am looking forward to a beautiful 2023 with you all.\n\n---\nOrigin: [[Annual Reflection 2022]], [[reflection]]\nReferences: [[üèÜ My Achievements]]\nCreated [[2022-12-20]]\n",
    "lastmodified": "2023-06-23T10:05:17.714253725+02:00",
    "tags": null
  },
  "/april-newsletter-2023": {
    "title": "April Newsletter 2023",
    "content": "\n*Hello friends!*\n\n*Welcome to the new format of my newsletter! I aim to create a more informal space for updates and discussions on Data Engineering and other topics I explore as I create new content. Expect to receive not just updates on new blog posts, but also interesting tidbits from my life and work.*\n\n*This newsletter format will evolve as we go, but my vision includes a blend of data engineering insights, highlights from my [Second Brain](https://brain.sspaeti.com/), and inspiring content I come across. We may get more philosophical as I enjoy [[Stoic|Stoic Philosophy]], [[Deep Life]] and others. [[Writing]], and anything else that I find worth sharing.*\n\n*In this issue, I share a roundup of recent happenings and hope you find something interesting. Please feel free to reply with your thoughts or suggestions, or if you have a topic you'd like me to cover.*\n\n*Excited to connect with you through this new medium!*\n\n## Now\nCurious about what I'm up to? Check out my [Now Page](https://nownownow.com/about) and see my latest updates at [Now](https://now.sspaeti.com). Some highlights may also appear in this newsletter.\n\nRecently, I transitioned my newsletter from Mailchimp to a self-hosted [[Listmonk]] platform. This enables seamless sharing of emails in [[Markdown]], managing subscribers, and integrating with my Second Brain, as opposed to using [[Substack]], [[Ghost]], or similar [[Open Subscription Platforms]].\n\nSince my Second Brain already contains relevant links and ideas, it's incredibly easy to share new insights and background information with just a single click.\n\n### Latest Second Brain Updates\nTake a peek at my latest additions or updates to my Second Brain:\n- [[Computer Desk Setup (Todays Office)]]: Then vs. Now ([Twitter](https://twitter.com/sspaeti/status/1642983355984625719) / [LinkedIn](https://www.linkedin.com/feed/update/urn:li:activity:7049276646209548288/?updateEntityUrn=urn%3Ali%3Afs_updateV2%3A%28urn%3Ali%3Aactivity%3A7049276646209548288%2CFEED_DETAIL%2CEMPTY%2CDEFAULT%2Cfalse%29), [Reddit](https://www.reddit.com/r/battlestations/comments/u1spb6/battlestation_in_the_alps/)).\n- [[Markdown vs Rich Text]]: The critical difference between Markdown and rich text.\n- [[Create a Book on Markdown]]: Examples of people using Markdown for books.\n- [[Open-Source Data Engineering Projects]]: A curated list of Data Engineering open-source projects.\n\nI've also updated the [Entry Page](https://brain.sspaeti.com/#map-of-content-moc) of my second brain, making it more accessible for exploring without a specific topic in mind. [Twitter](https://twitter.com/sspaeti/status/1641729446582394890) / [LinkedIn](https://www.linkedin.com/posts/sspaeti_knowledgemanagement-personalgrowth-secondbrain-activity-7047532033958363136-8nWR?utm_source=share\u0026utm_medium=member_desktop)\n\n## Articles: Latest and Most Popular\nIn addition to the Second Brain updates, I've published a few insightful articles on [Airbyte's Blog](https://airbyte.com/blog-authors/simon-spati) that you might find interesting:\n- **[Exploring Rust for Data Engineering](https://www.sspaeti.com/blog/rust-for-data-engineering/)**: Discover why Rust has become the most loved programming language among data engineers.\n- **[The Open Data Stack: Four Core Tools](https://www.sspaeti.com/blog/open-data-stack-core-tools/)**: Get to know Airbyte, dbt, Dagster, and Metabase‚Äîthe backbone of the open data stack.\n- **[Enterprise MDS: Overcoming Struggles](https://www.sspaeti.com/blog/modern-data-stack-struggle-of-enterprise-adoption/)**: Learn about the challenges faced by enterprise MDS and strategies to overcome them.\n- **[The Emergence of the Semantic Layer](https://www.sspaeti.com/blog/rise-of-semantic-layer-metrics/)**: Explore how a semantic layer translates data into valuable insights for business users.\n- **[Data Orchestration Trends: The Evolution of Data Pipelines](https://sspaeti.com/blog/data-orchestration-trends/)**: Understand the shift from data pipelines to data products in modern data orchestration.\n- **[Finding My Pathless Path](https://www.sspaeti.com/blog/finding-my-pathless-path/)**: Embrace curiosity and create a life true to yourself by discovering your Pathless Path.\n\nIf you haven't already, be sure to check out some of my most popular articles:\n\n- [Building a Data Engineering Project in 20 Minutes](https://www.sspaeti.com/blog/data-engineering-project-in-twenty-minutes/)\n- [Personal Knowledge Management Workflow for a Deeper Life](https://www.sspaeti.com/blog/pkm-workflow-for-a-deeper-life/)\n- [Why Vim Is More than Just an Editor: Vim Language, Motions, and Modes Explained](https://www.sspaeti.com/blog/why-using-neovim-data-engineer-and-writer-2023/)\n\n## Social Media:\nI've been sharing some interesting articles and thoughts on social media. Here are a few of the most popular ones grouped by topic, so you can quickly find the ones that interest you:\n\n### Data Engineering\n- [**Familiar Concepts Rebranded as Innovations**](https://www.reddit.com/r/dataengineering/comments/10lsa27/dont_fall_for_the_hype_a_data_professionals/): A data professional's perspective on not falling for the hype (Reddit) / [LinkedIn](https://www.linkedin.com/feed/update/urn:li:activity:7024373260607713280/)\n- [**Rill Data**: An alternative to dbt magic](https://twitter.com/sspaeti/status/1623753232328626179): Analyzing exported transactions and building analytics dashboards with ease (Twitter)\n- [**Learning Rust with DuckDB**](https://twitter.com/sspaeti/status/1621999575685898244): Converting exported transactions in XLS to CSV and importing them into DuckDB (Twitter)\n- [**Data Modeling**: Unlock the value of your organization's data](https://twitter.com/sspaeti/status/1642871906054578176): Discover your secret weapon (Twitter) / [Flow of Modeling](https://twitter.com/sspaeti/status/1640726354592145408)\n- [**Unlocking the Power of Words**](https://www.linkedin.com/feed/update/urn:li:activity:7028087245702070273/): Crafting well-crafted content (LinkedIn)\n- [**Ballista: The New Apache Spark?**](https://www.linkedin.com/feed/update/urn:li:activity:7033834407169810432/): Explore Ballista for distributed SQL query processing (LinkedIn)\n- [**Dear JSON...**](https://www.linkedin.com/feed/update/urn:li:activity:7039651964325896192/): Frustrations with nested structures (LinkedIn)\n- [**Celebrating Pandas 2.0**](https://twitter.com/sspaeti/status/1632733951151276033): Embracing the new era of data manipulation (Twitter) / [LinkedIn](https://www.linkedin.com/feed/update/urn:li:activity:7038498499365109760/) / [Reddit](https://www.reddit.com/r/datascience/comments/11jzh88/from_numpy_to_arrow_how_pandas_20_is_changing/)\n- [**What is a Data Catalog?**](https://twitter.com/sspaeti/status/1580220858358190081): A quick look into data catalogs (Twitter)\n- [**Data Engineering Concepts**](https://glossary.airbyte.com/): A curated list of definitions, backlinks, and resources (Link) / [Reddit](https://www.reddit.com/r/dataengineering/comments/xojb5f/data_engineering_concepts_definitions_backlinks/) / [Twitter](https://twitter.com/sspaeti/status/1574101833940869125)\n- [**DuckDB Use Cases**](https://twitter.com/sspaeti/status/1581621599064666112): Exploring three practical applications for DuckDB (Twitter)\n\n### Writing and Markdown\n- [**The Elegance of Markdown**](https://twitter.com/sspaeti/status/1643530526903635969): Discover why Markdown is becoming the go-to standard for writing thanks to its fantastic features like Admonition, Mermaid, and Drawings‚Äîall from simple text files (Twitter)\n- [**HackMD: Google Docs for Markdown**](https://twitter.com/sspaeti/status/1640729803178274817): Introducing the VS Code extension for HackMD. Meaning you can use your favorite theme, shortcuts (vim), previews of Mermaid, and all other features from your editor, automatically synced to HackMD. I find this amazing ü§© (Twitter)\n- [**ReadWise: Improving Your Workflow**](https://twitter.com/sspaeti/status/1616371578056462336): Streamline your content consumption and note-taking with [[ReadWise]]. I replaced my RSS feeder with Readwise Reader, combining Instapaper, RSS, web highlights, tweets, books, email, and PDF. All highlights/notes are automatically synced into [[Obsidian]]. (Twitter).\n- [**New Entry Page for My Second Brain**](https://twitter.com/sspaeti/status/1641729446582394890): Introducing the updated interface (Twitter)\n\n### Random, Life\n- [**Double Rainbow**](https://twitter.com/sspaeti/status/1639672623830376450): Capturing a magical moment (Twitter)\n- [**What Makes a Happy Life?**](https://brain.sspaeti.com/what-makes-a-happy-life): Reflecting on the ingredients for happiness\n\n## Coding (Neovim, dotfiles, nerdy stuff)\nI've been having a blast with [[Neovim]], [[Tmux]], and other tools, which you can find in my [dotfiles](https://dotfiles.sspaeti.com/). Here are some articles and threads I've shared recently:\n\n- [**Why Vim Is More than Just an Editor**](https://www.sspaeti.com/blog/why-using-neovim-data-engineer-and-writer-2023/): Unraveling the language, motions, and modes of [[Vim]] (Twitter) / [FreeCodeCamp](https://www.freecodecamp.org/news/vim-language-and-motions-explained/) / [LinkedIn](https://www.linkedin.com/posts/sspaeti_why-vim-is-more-than-just-an-editor-vim-activity-7031704752753123328-iMB6)\n\t- [**Switching from VSCode to Neovim**](https://twitter.com/sspaeti/status/1635924410635780100): Don't miss your favorite plugins with this list of [[Neovim]] alternatives (Twitter)\n- [**The Most Beautiful Theme**](https://www.reddit.com/r/unixporn/comments/vqgu6w/neovimkanagawa_probably_the_most_beautiful_theme/): Admire this stunning theme for Neovim (Reddit)\n- [**Kanagawa Neovim Setup**](https://www.reddit.com/r/unixporn/comments/10qovte/kanagawa_neovim_obsidian_chromebrave_kitty_tmux/): A showcase of a Neovim setup with Obsidian, Chrome/Brave, Kitty, and Tmux (Reddit)\n\n## Books\nI've enjoyed reading these fascinating books lately:\n\n- **[[Moonwalking with Einstein (Joshua Foer)]]**: Dive into the world of memory, forgetting, and the power of our spatial and visual brain\n- **[[The Pathless Path (Paul Millerd)]]**: Redefine your identity beyond conventional work and prioritize values and passions (This book inspired me to write [Finding My Pathless Path](https://www.sspaeti.com/blog/finding-my-pathless-path/))\n- **[[The Extended Mind (Annie Murphy Paul)]]**: Learn to use your senses outside your brain and avoid overthinking\n- **[[The Storyteller (Dave Grohl)]]**: I was surprised how Dave Grohl is a genuine and humble person. He grew up in a poor house and experiences, experienced many things but was so dedicated to what he wanted to achieve in life, being a musician. Reminded me of [[Hell Yeah or No. The power of saying No]]. It also illustrates the importance of serendipity, kindness, and gratitude, while also highlighting the transformative power of parenthood and true love.\n- **[[Fundamentals of Data Engineering - Joe Reis, Matt Housley]]**: A comprehensive guide to learning Data Engineering fundamentals and the state-of-the-art in the field. It doesn't go deep into each specific topic, but it does e a great job explaining generally if you want to start or have a good reference for all things data engineering.\n\n## What's Next?\n\nI hope you enjoyed this update! It turned out longer than I expected, but I wanted to share the highlights with you. The next newsletter will be shorter and focus more on my musings about [[Data Engineering]] and the interesting tips and tricks I discover.\n\nUntil next time, happy reading and exploring!\nSimon\n\n---\nCreated [[2023-04-07]]\n",
    "lastmodified": "2023-06-23T10:05:17.7345626+02:00",
    "tags": null
  },
  "/arc-browser": {
    "title": "Arc Browser",
    "content": "[Arc from The Browser Company](https://arc.net/)\n\n## Feature\n### Zap: Cool new feature to remove elements\n*my [Tweet](https://twitter.com/sspaeti/status/1661996254858031104)*\n\n[YouTube](https://youtu.be/zq-3kfzAFeo) by [[Brandon Boswell]]\n\n#### Reddit\nBefore \n![[Pasted image 20230526091904.png]]\nAfter:\n![[Pasted image 20230526091908.png]]\n\n#### YouTube\nCreate a case by Brandon to lowercase all titles and blur images to not clickbait himself!\n![[Pasted image 20230526091923.png]]\n\n## Twitter\nbefore:\n![[Pasted image 20230526092858.png]]\nafter:\n![[Pasted image 20230526092903.png]]\n\n---\nOrigin: \nReferences: \nCreated [[2023-05-26]]\n",
    "lastmodified": "2023-06-23T10:05:17.721913772+02:00",
    "tags": null
  },
  "/backfill": {
    "title": "Backfill",
    "content": "‚ÄúBackfilling is where you see the difference between a data engineer and a great data engineer.‚Äù ‚Äî [[Christophe Blefari]] on [LinkedIn](https://www.linkedin.com/feed/update/urn:li:activity:6967880438317023233?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A6967880438317023233%2C6967933653993582592%29)\n\n\u003e Given a persistent immutable staging area and pure tasks, in theory it‚Äôs possible to recompute the state of the entire warehouse from scratch (not that you should), and get to the exact same state. Knowing this, the retention policy on derived tables can be shorter, knowing that it‚Äôs possible to backfill historical data at will.\n\n\n## What's a backfill?\n\nA backfill is when you take a data asset that's normally updated incrementally and update historical parts of it.\n\nFor example, you have a table, and each day, you add records to it that correspond to events that happened during that day. Backfilling the table means filling in or overwriting data for days in the past.\n\n![[Pasted image 20230622182240.png]]\n\nWe use the term ‚Äú[[Data Assets]]‚Äù instead of only ‚Äútable‚Äù because not all pipelines operate on tabular data. You might also backfill a set of images that you use for training a vision model. Or backfill a set of ML models.\n\n## Why backfill your data?\n\nYou typically run a backfill if you're in one of these situations:\n\n- Greenfield - you‚Äôve added data assets to your data pipeline\n- Brownfield - one of the assets in your data pipeline has changed\n- Recovering from failure\n\n## Backfills gone wrong\n\nBackfills can go wrong in a few different ways:\n\n- **Targeting the wrong subset**¬†- If you neglect to backfill parts of your data that need to be backfilled, you risk finishing with the false impression that your data is up-to-date. If you backfill parts of your data that don't need to be backfilled, then you've wasted some time and money. If you backfill a data asset without backfilling the data assets derived from it, you risk ending up with your data in an inconsistent and confusing state.\n- **Resource overload**¬†- Backfills can require significant amounts of memory and processing power. This can cause them to overwhelm your system or starve important workloads.\n- **Cost overload**¬†- A large backfill might end up costing much more than expected.\n- **Getting lost in the middle**¬†- If parts of your backfill fail, you can end up in a state where you know something has gone wrong but don‚Äôt know what, and need to restart from the beginning.\n\nTo avoid these issues, it's essential to plan and execute backfills carefully.\n\n---\n\nRead more on the awesome example on [Backfills in Data \u0026 Machine Learning: A Primer](https://dagster.io/blog/backfills-in-ml) by the [[Dagster]] team.\n\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-26]]\n",
    "lastmodified": "2023-06-23T10:05:17.695518193+02:00",
    "tags": null
  },
  "/ballista-arrow": {
    "title": "Ballista (Arrow)",
    "content": "Ballista: Distributed SQL Query Engine, built on Apache Arrow. Competes with [[Apache Spark]]. It's basically a scheduler for  [[DataFusion]] on top of Apache Arrow.\n\nBallista is a distributed compute platform primarily implemented in Rust and powered by Apache Arrow. It is built on an architecture that allows other programming languages to be supported as first-class citizens without paying a penalty for serialization costs.\n\nThe foundational technologies in Ballista are:\n- [[Apache Arrow]]¬†memory model and compute kernels for efficient processing of data.\n- [[Apache Arrow Flight Protocol]]¬†for efficient data transfer between processes.\n- [[Protobuf|Google Protocol Buffers]]¬†for serializing query plans. \n- [[DataFusion]]¬†for query execution.\n\n## How it works\nBallista has a scheduler and an executor process that are standard Rust executables and can be executed directly, but Dockerfiles are provided to build images for use in containerized environments, such as Docker, Docker Compose, and Kubernetes. See the¬†deployment guide¬†for more information\n\n[[SQL]] and [[DataFrame]] queries can be submitted from [[Python]] and Rust, and SQL queries can be submitted via the [[Apache Arrow Flight Protocol]] SQL JDBC driver, supporting your favorite JDBC compliant tools such as DataGrip or tableau. For setup instructions, please see the FlightSQL guide.\n\n## How does Ballista (Arrow-Rust) compare to Apache Spark?\n*from [[Overview ‚Äî Arrow DataFusion Documentation]]* \nAlthough Ballista is largely inspired by Apache Spark, there are some key differences.\n- The choice of [[Rust]] as the main execution language means that memory usage is [[deterministic]] and avoids the overhead of GC pauses.\n- designed from the ground up:\n\t- columnar data, enabling a number of efficiencies such as vectorized processing (SIMD and GPU) and efficient compression. \n\t- Although [[Apache Spark|Spark]] does have some columnar support, it is still **largely row-based today**.\n- The combination of Rust and [[Apache Arrow]] provides excellent **memory efficiency and memory usage can be 5x - 10x** lower than Apache Spark in some cases, which means that more processing can fit on a **single node**, reducing the overhead of distributed compute.\n- The use of Apache Arrow as the memory model and network protocol means that data can be exchanged **between executors in any programming language with minimal serialization overhead**.\n\nAnother great read [[Delta Lake Without Spark (Delta-Rs). Innovation, Cost Savings, and Other Such Matters. - Confessions of a Data Guy]]\n\n## Ballista Roadmap\n\nUnlike written in the docs [[Roadmap#^d7589e]], Ballista was part of [[DataFusion]], but separated now again. [[Andy Grove]], creator of DataFusion and Ballista says ([[2023-02-22]]):\n\u003e Ballista was part of the DataFusion repo and got moved out a while back so that each project could focus on the needs of the user base. DataFusion is a framework for in-process query engines that many products are now building on top of. Ballista is an end-user distributed system (although some companies are also using this as a foundation for new systems).\n\u003e \n\u003e I am hoping that it will soon be pretty seamless to switch between DataFusion and Ballista when using these systems from Python by just changing the imports, but for now they are quite separate systems.\n\n\n## Running Queries\nExample [sqlbench-runners/sqlbench-ballista.py at main ¬∑ sql-benchmarks/sqlbench-runners ¬∑ GitHub](https://github.com/sql-benchmarks/sqlbench-runners/blob/main/ballista-python/sqlbench-ballista.py) with Python.\n\n\n---\nOrigin: [[David Gasquez]] \nReferences: [apache/arrow-ballista](https://github.com/apache/arrow-ballista)\nCreated [[2022-10-20]]\n",
    "lastmodified": "2023-06-23T10:05:17.733973721+02:00",
    "tags": null
  },
  "/change-color-scheme-dark-reader-extension": {
    "title": "Change Color Scheme Dark Reader Extension",
    "content": "\n[Chrome Web Store - Extensions](https://chrome.google.com/webstore/detail/dark-reader/eimadpbcbfnmbkopoojfekhnkhdbieeh?hl=en)\n\nSometimes it's hard to find the Pre-defined schemes. But they are here:\n\n![[Pasted image 20220829153324.png]]\nand then\n![[Pasted image 20220829153339.png]]\n## creating Kanagawa style - own\n![[Pasted image 20221108210400.png]]\n\n\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-29]]\n",
    "lastmodified": "2023-06-23T10:05:17.772884752+02:00",
    "tags": null
  },
  "/checking-out-pr-and-branch-from-existing-pr": {
    "title": "Checking out PR (and branch) from existing PR (git worktree)",
    "content": "\nFirst, we need to configure to fetch PRs. We will add to `.git/config` which is located under `root/config` for [[git worktree]] repos:\n![[Pasted image 20221222110245.png]]\n\nAfter we fetch all PRs and included metadata with a simple `git fetch`. This will fetch lots of metadata for big repos.\n\n## Checkout PR\nAfter we are able to pull PRs from with the prefix `pr/`, which is known by git as the repo for PRs. It will automatically checkout the associated branch.\n```\ngit worktree add simon/20643_docs_dagster pr/20643\n# might be you need to add `origin/pr/20643`\n```\n\n\u003e [!note]\n\u003e I had trouble checking out the branch associated with the PR. I would find and could checkout with `git worktree add simon/\u003cname-i-want\u003e \u003cexisting-branch-name\u003e`, but opened the git history, the commit from the PR wouldn't be there. Checking out the PR instead as explained above, it works like a charm.\n\n\n---\nOrigin: [Checking out GitHub pull requests to a local branch ¬∑ Blag](https://manicminer.io/posts/checking-out-github-pull-requests-to-a-local-branch/)\nReferences: \nCreated [[2022-12-22]]\n",
    "lastmodified": "2023-06-23T10:05:17.698339293+02:00",
    "tags": null
  },
  "/clarity": {
    "title": "Clarity",
    "content": "Clarity comes from having time to think, read and create! The outcome is finding YOUR truth and removing resistance more deeply. \n\nClarity is important in so many places in our life. In [[Writing]], goal setting ([[‚öΩÔ∏è  My One to Two-Year Goals and Objectives]]), [[Data Engineering]], everywhere (see Backlinks below). \n\n\u003e Writing is a laxative for the mind. When you write, your brain can't stop itself from drawing connections between ideas and exploring their implications. Writing slows down your thinking so that you can play with your ideas. This also shines a light on broken logic, which helps you gain **clarity**. [[Writing Handbook by Julian Shapiro]]\n\n\n\u003e [!NOTE] Lifehack\n\u003e üß† Is your mind all around?\n\u003e\n\u003e Take your earphones and go for a long walk in nature. Hit record on any voice-to-text app. Say everything that comes to mind. After, upload it to ChatGPT and ask questions about it. It is magical to have a conversation with your scattered thoughts. [Tweet](https://twitter.com/sspaeti/status/1659528572569092097) #braindump\n\nBacklinks to Clarity:\n```dataview\nLIST \nFROM ([[#]]) OR outgoing([[#]])\nWHERE file.name != this.file.name\nSORT file.name ASC\n```\n\nBut what is it actually?\n![[Write Simply, with Clarity and the Audience in mind#Clarity]]\n\n---\nOrigin: [[AOMW- Writing From Our Deepest Truths and Highest Self with Andrew Thomas]]\nReferences: #publish \nCreated [[2023-01-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.731739165+02:00",
    "tags": null
  },
  "/closed-source-solutions-all-in-one": {
    "title": "Closed-Source Solutions (All-In-One)",
    "content": "\nSolutions:\n- [[Ascend.io]]\n- [[Palantir Foundry]]\n- [[Keboola]]\n- [[Nexla]]\n- [[Rivery]]\n- [5X - Build your own data platform without building anything | Product Hunt](https://www.producthunt.com/posts/5x)\n- [[Microsoft Fabric]]\n\nMDSaaS providers (mentioned by [[Data Platforms The Past. The Evolution of Data Platforms  by Alexandre Beauvois  Alexandre Beauvois  Medium]])\n- [Selfr.io](http://selfr.io/)\n- CanvasApp\n- Octolis\n- [5x.io](http://5x.io/)\n- [Serenytics](https://www.serenytics.com/)\n\nSee also [[Use closed-source if you don't have the developers or the time]] and [[No Code and less code vs Code]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-11-04]]\n",
    "lastmodified": "2023-06-23T10:05:17.696380781+02:00",
    "tags": null
  },
  "/computer-desk-setup-todays-office": {
    "title": "Computer Desk Setup (Todays Office)",
    "content": "\nSwipe through these images to see the progression of my desk setups over time, from side-by-side displays to an ultrawide and portrait combo, and finally to a single 27'' or an extended laptop setup for meetings.\n\nThroughout this journey, I've tried various alignments and configurations, ultimately concluding that the best setup for me is a single screen with separate desktops. I switch between them using these handy shortcuts:\n\nüñ•Ô∏è `Alt+1`: Terminal for coding\nüñ•Ô∏è `Alt+2`: Obsidian for notes, thinking, writing, and my [[Second Brain]]\nüñ•Ô∏è `Alt+3`: Browser for research and browsing needs\nüñ•Ô∏è `Alt+4`: Music, featuring Spotify and Focus@Will for all things auditory\nüñ•Ô∏è `Alt+5`: Collaboration tools like Slack, Asana, Nirvana, and my to-do lists\nüñ•Ô∏è `Alt+6`: Extra (when laptop screen is open): Additional screens for meetings with Zoom, etc.\nüñ•Ô∏è `Alt+7`: Extra (when laptop screen is open)\n\nI've also experimented with various keyboards and mice. Currently, I'm using the [[Kinesis Advantage 2]] and [[My KBDFans DZ65RGB]] as my daily drivers.\n\nWhat is your go to setup after trying different setups?\n\n## Some images\n- [Battlestation in the Alps](https://www.reddit.com/r/battlestations/comments/u1spb6/battlestation_in_the_alps/)\n- [Illustration of switching](https://twitter.com/sspaeti/status/1618951436041330690)\n- [Today's Office while on the Road](https://www.sspaeti.com/blog/the-location-independent-lifestyle/) \n- Screen Setup\n\t- [Workflow setup](https://www.reddit.com/r/unixporn/comments/10qovte/kanagawa_neovim_obsidian_chromebrave_kitty_tmux/?utm_source=share\u0026utm_medium=web2x\u0026context=3)\n\t- [Probably the Most Beautiful Theme](https://www.reddit.com/r/unixporn/comments/vqgu6w/neovimkanagawa_probably_the_most_beautiful_theme/?utm_source=share\u0026utm_medium=web2x\u0026context=3)\n\n## Monitor alignment:\n![[monitor-aligment.png]]\n[Image Source](https://twitter.com/PaulFoxhound/status/1532307456382144512)\n\nWhich one are you? üòâ\n\n---\nOrigin: [Then vs. Now](https://twitter.com/sspaeti/status/1642983355984625719)\nReferences: [[Location Independent Lifestyle]]\nCreated [[2023-04-05]]\n",
    "lastmodified": "2023-06-23T10:05:17.727774974+02:00",
    "tags": null
  },
  "/continuous-notes": {
    "title": "Continuous Notes",
    "content": "\nI believe this is the essence of a [[Second Brain]] and the [[Future of Blogging]] of blogging. Instead of old blogs that hold a wealth of information but get outdated over time, continuous notes are updated frequently and, **instead of losing value, win over time**.\n\n---\nOrigin: [[Future of Blogging]]\nReferences: \nCreated [[2023-06-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.747806556+02:00",
    "tags": null
  },
  "/create-a-book-on-markdown": {
    "title": "Create a Book on Markdown",
    "content": "For creating a Book on top of [[Markdown]], there are some solutions I want to explore here. \n\nThis could be done solely in [[Obsidian]], but there wouldn't be management around chapters, post-processing and many other things that include a book.\n\nThere are that add a such feature, for example, [GitBook](https://www.gitbook.com/) tackles it from the documentation side. But in the same area, there is [[Quartz - Publish Obsidian Vault]] where I build my Second Brain on and all the other [[Static Site Generators (SSG)]] website tools. E.g. my Website is built with [[GoHugo]].\n\nBut there are also others:\n- [[mdBook]]  based on [[Rust]], an example is the [Rust book (documentation)](https://doc.rust-lang.org/book/)\n- Using [[Pandoc]]: [Building books with Markdown using pandoc](https://medium.com/programmers-developers/building-books-with-markdown-using-pandoc-f0d19df7b2ca)\n- [Frictionless Self-Publishing for Tech-Savvy Writers | Softcover.io](https://www.softcover.io/) used by [[Shawn Swyx Wang]]\n\n## Examples of Books Written in Public\n- [MEAP Catalog](https://www.manning.com/meap-catalog)\n- [Beautiful Racket by Matthew Butterick](https://beautifulracket.com/)\n- [GitHub - andkret/Cookbook: The Data Engineering Cookbook](https://github.com/andkret/Cookbook)\n- [Data With Rust](https://datawithrust.com) by [[Karim Jedda]]\n- \"Free Speech\" from Timothy Garton Ash? [origin](https://twitter.com/JPedro_Monteiro/status/1628692022545580032)\n- - [[Nicole van der Hoeven]]: started with Obsidian: [Tweet](https://twitter.com/n_vanderhoeven/status/1631710507794145292)\n\t- [YouTube of starting out](https://youtu.be/NosD77WX7qM) (with [[Obsidian]])\n- [Patterns in C by Adam Tornhill [Leanpub PDF/iPad/Kindle]](https://leanpub.com/patternsinc)\n- [[Julian Shapiro]]'s self published book/guide: [[Writing Handbook by Julian Shapiro]]: [Writing Handbook by Julian Shapiro](https://www.julian.com/guide/write/intro) \n\nMore on [[Self Publish a Book#Success Stories on Self publishing]].\n\nA great analogy of [[Writing in Public]] is the [[Brazilian Soup Opera]].\n\n## Examples of Books in Markdown\n- [[mdBook]] example on [mdBook Documentation (HTML)](https://rust-lang.github.io/mdBook/)\n- [[The Data Engineering Cookbook]] by [[Andreas Kretz]]  on GitHub.\n- [Writing a novel in Markdown - pdworkman.com](https://pdworkman.com/writing-a-novel-in-markdown/) with [[Obsidian]]\n\nRead more on [[Self Publish a Book]].\n\n---\nOrigin: [[Book Proposal- Data Engineering Design Patterns (DEDP)]]\nReferences: \nCreated [[2023-02-20]]\n",
    "lastmodified": "2023-06-23T10:05:17.691208416+02:00",
    "tags": null
  },
  "/creativity-vs-productivity": {
    "title": "Creativity vs Productivity",
    "content": "Creativity and [[Productivity]] are two of the same thing. You can't be creative without being productive. It's a pendulum that goes forth and back.\n\nFor me, these are two different things that I do interchangeably. I chose to be creative, where I try to be productive all the time but do not force it, especially for writing and coding; I experienced its contra effective to be super productive at everything. That's why as [[Tiago Forte]] says, it needs to go forth and back to have the right balance. Fixating on one does not bring you forward. \n\nIt's the best thing I found yet for eliminating [[Writers Block]].\n\nI also experienced it with [[vim]] where I tried to upgrade my productivity until all I do is optimize constantly. But also after a while, I did the same with [[Obsidian]], if I found a good ground, I do not change too much anymore, and I am so much more productive (and also having fun at the same time) than when I wouldn't have invested these initial time that wasn't productive. It reminds me of [[PDE (Personalized Development Environment)]], where fun is also a part of the equation.\n\nAlso, check out [[Pantser]] vs. [[Plotter]] where the difference is outlining beforehand or free flow.\n\n---\nOrigin: exact spot: [YouTube](https://youtu.be/ggLHkAq6JLY?t=1157), [[Confronting my Productivity Guru - Tiago Forte (Transcript)]] \nReferences: \nCreated [[2022-08-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.566001604+02:00",
    "tags": null
  },
  "/data-engineer-job-description-and-skills": {
    "title": "Data engineer job description and skills",
    "content": "If English is the language of business, SQL is the language of¬†data and Python is the language of engineering. While technology disappears often, SQL is still here. This means you need a reliable understanding of:\n\n  * **[[SQL]] to a high level of complexity**\n      * e.g. using \u003ca href=\"https://en.wikipedia.org/wiki/SQL_window_function\" target=\"_blank\" rel=\"noopener\"\u003ewindow\u003c/a\u003e and \u003ca href=\"https://en.wikipedia.org/wiki/Aggregate_function\" target=\"_blank\" rel=\"noopener\"\u003eaggregate\u003c/a\u003e functions, changing the structure of a database with \u003ca href=\"https://en.wikipedia.org/wiki/Data_definition_language\" target=\"_blank\" rel=\"noopener\"\u003eDDL\u003c/a\u003e or changing the data with \u003ca href=\"https://en.wikipedia.org/wiki/Data_manipulation_language\" target=\"_blank\" rel=\"noopener\"\u003eDML\u003c/a\u003e, fine-tuning or reading database \u003ca href=\"https://en.wikipedia.org/wiki/Query_plan\" target=\"_blank\" rel=\"noopener\"\u003eexecution plans\u003c/a\u003e, how \u003ca href=\"https://en.wikipedia.org/wiki/Database_index\" target=\"_blank\" rel=\"noopener\"\u003eindices\u003c/a\u003e\n  * **Data modeling techniques:** \u003ca href=\"https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model\" target=\"_blank\" rel=\"noopener\"\u003eERD\u003c/a\u003es and dimensional modeling\n  * Solid \u003ca href=\"https://en.wikipedia.org/wiki/Extract,_transform,_load\" target=\"_blank\" rel=\"noopener\"\u003eETL\u003c/a\u003e **understanding**\n  * Architectural projections:¬†needs to have a **high-level understanding of most of the tools, platforms, libraries, and other resources** at its disposal\n  * able to connect the dots from source to destination with any **programming language** that does the job best. (Probably Python at the moment)\n\n[Stitchdata.com](https://www.stitchdata.com/resources/reports/the-state-of-data-engineering/) anticipated that as company size increased, so would the focus on scaling-related skills. However, that's not the story the data told. Instead, data engineers at **larger companies tend to be more focused on enterprise skills like ETL, BI, and data warehousing, whereas data engineers at smaller companies focus more on core technologies**:\n\n![[Pasted image 20220827102021.png]]\nSkill differences of data engineers across company sizes\n\n---\nReferences: [[Python]] [[ETL]]\n",
    "lastmodified": "2023-06-23T10:05:17.538362433+02:00",
    "tags": null
  },
  "/data-engineering": {
    "title": "Data Engineering",
    "content": "Data engineering is a term that has shifted over the years from a Database Admins (DBA), ETL Developer, and Business Intelligence Specialist and merged with Software Engineers to a [[Data Engineer]] with the growth of data made his title.\n\nIt's still not well defined, the latest book on [[Fundamentals of Data Engineering - Joe Reis, Matt Housley]] tries and does probably best as of today; it's getting clearer. Besides several boot camps, universities are also starting to get a degree in data engineering like [[Data Science]] did before. Let's start by defining what data engineering is.\n\n## What is Data Engineering\nData engineering is the less famous sibling of data science. Data science is growing like no tomorrow, as does data engineering, but much less heard. Compared to existing roles, it would be a **software engineering plus business intelligence engineer including big data abilities** as the [[Hadoop]] ecosystem, streaming, and computation at scale. \n\nBusiness creates more reporting artifacts, but with more data that needs to be collected, cleaned, and updated near real-time, complexity is expanding daily. With that said, more programmatic skills are required, similar to software engineering. **The emerging language at the moment is [[Python]]** (more [The Tool Language, Python](https://www.sspaeti.com/blog/data-engineering-the-future-of-data-warehousing/#ThetoollanguagePython)) while used in engineering with tools identical to [[Apache Airflow]], [[Dagster]], other [[Data Orchestrators]], and data science with powerful libraries. Today as a BI engineer, you use [[SQL]] for almost everything except when using external data from an FTP server, for example. You would use bash and PowerShell in the nightly batch jobs. But this is no longer sufficient, and because it gets a full-time job to develop and maintain all these requirements and rules (called pipelines), data engineering is needed.\n\n## [[Data Engineering Best Practices]]\n- [Data Engineering Concepts](https://glossary.airbyte.com/term/data-engineering-concepts#:~:text=conce/)\n- [Data Engineering Guides](https://glossary.airbyte.com/term/data-engineering-guides/)\n\n---\n\nLinks:\n- [Data Engineering, the future of Data Warehousing? |](https://www.sspaeti.com/blog/data-engineering-the-future-of-data-warehousing/)\n- [[data-engineering-explained-in-short]]\n\t- [Simon Spaeti's answer to What is data engineering? What does a data engineer do? What are the typical responsibilities of a data engineer? - Quora](https://www.quora.com/What-is-data-engineering-What-does-a-data-engineer-do-What-are-common-responsibilities-of-a-data-engineer/answer/Simon-Spaeti)\n\t- [How to become a data engineer - Quora](https://www.quora.com/How-do-I-become-a-data-engineer)\n- [Data \u0026 Data Engineering ‚Äî the past, present, and future | by Zach Wilson | Medium](https://medium.com/@eczachly/data-data-engineering-the-past-present-and-future-ac3ad5795ddf)\n**- [How to learn data engineering](https://www.blef.fr/learn-data-engineering/)**\n\t- [The Modern Data Stack: Past, Present, and Future](https://www.getdbt.com/blog/future-of-the-modern-data-stack/)\n\t- [[Emerging Architectures for Modern Data Infrastructure - a16z]]\n- [Introduction to Data Engineering - hadoop](https://jheck.gitbook.io/hadoop/introduction-to-data-engineering)\n- [[Fundamentals of Data Engineering - Joe Reis, Matt Housley]]\n- [Data Glossary üß†](https://glossary.airbyte.com/)\n- [[Data Engineering Wiki - Reddit]]\n- [Practical data engineering concepts and skills](https://www.educative.io/blog/practical-data-engineering-skills-and-concepts)\n- [How to learn data engineering](https://www.blef.fr/learn-data-engineering/)\n- [Best of Zach Wilson](https://www.linkedin.com/posts/bigdatabysumit_bigdata-dataengineering-apachespark-activity-7075524835191259136-l6om)\n- [The Evolution of The Data Engineer: A Look at The Past, Present \u0026 Future](https://airbyte.com/blog/data-engineering-past-present-and-future)\n\nIf you are new to data engineering¬†**you should start by reading the holy trinity from Maxime Beauchemin**. He wrote some years ago 3 articles defining the data engineering field.\n-   [The Rise of the Data Engineer](https://medium.com/free-code-camp/the-rise-of-the-data-engineer-91be18f1e603)\n-   [The Downfall of the Data Engineer](https://maximebeauchemin.medium.com/the-downfall-of-the-data-engineer-5bfb701e5d6b)\n-   [Functional Data Engineering ‚Äî a modern paradigm for batch data processing](https://maximebeauchemin.medium.com/functional-data-engineering-a-modern-paradigm-for-batch-data-processing-2327ec32c42a)\n\nBooks:\n- [Data Pipelines Pocket Reference [Book]](https://www.oreilly.com/library/view/data-pipelines-pocket/9781492087823/)\n\n---\nOrigin: \nReferences: [[SQL]] [[The role of a data engineer]] [[Data Engineering]] [[When is a data engineer needed]] [[Data engineer job description and skills]]\nCreated: [[2021-10-11]]\n",
    "lastmodified": "2023-06-23T10:05:17.57306573+02:00",
    "tags": null
  },
  "/data-engineering-approaches": {
    "title": "Data Engineering Approaches",
    "content": "\nBecause I encountered these bottlenecks myself, and more frequently lately, I asked myself,  how can we:\n  * Make BI *easier*?\n  * Transparent for everyone?\n  * Effortless to change or add new data or transformations but still have some [[Data Governance]] and testing?\n  * Fast in ad-hoc queries to explore and slice-and-dice your data?\n  * Have more frequent data loads?\n  * Simplify following the transformations for all data-savvy people and not exclusive for involved BI engineers.\n  * Extend additional machine learning capabilities smoothly?\n\nI'm aware that nowadays a lot is going on, especially around open-source tools and frameworks, data ops, and deployments with container-orchestration systems and the like.\n\nNevertheless, I tried to collect some approaches that helped me make this complex construct more open and ease the overall experience. Some will present themselves as more complicated in the short term, but significantly leaner and less complex over time. You can apply each of them separately, yet the more you use them, the more apparent the flow as a whole will be.\n\n---\nOrigin: [Business Intelligence meets Data Engineering with Emerging Technologies |](https://www.sspaeti.com/blog/business-intelligence-meets-data-engineering/#u-data-engineering-approaches)\nReferences: [[Use a data lake]] [[Use transactional processing]] [[Use less of surrogate keys, instead go back to business keys that everyone understands]] [[Notebooks]] [[Use python (and SQL if possible)]] [[Use open-source tools]] [[Load incremental and Idempotency]] [[Don't do structure changes (ALTER) in traditional DDL manner]] [[Kubernetes|Use a container-orchestration system]] [[Use declarative pipelining instead of imperative]] [[Use data catalogs to have a central metadata store]] [[Use closed-source if you don't have the developers or the time]]\n",
    "lastmodified": "2023-06-23T10:05:17.543938926+02:00",
    "tags": null
  },
  "/data-modelling-is-changing": {
    "title": "Data Modeling is changing",
    "content": "\nSince [[Ralph Kimball]] has written the state-of-the-art book for [[Data Modeling]] called [[The Datawarehouse Toolkit - Ralph Kimball]], data modeling is changing.\n\nEspecially with newer [[Data Engineering Approaches]], tools land the landscape has drastically changed (see [[The 2023 MAD (Machine Learning, Artificial Intelligence \u0026 Data) Landscape]]).\n\nEssentially, you can't change ETL without modeling differently. Here are a few points that have been changed and will further change:\n  * **Further** [[denormalization]] for performance gains is mostly compensated with faster database engines or cloud solutions.\n  * **Maintaining** \u003ca href=\"http://www.kimballgroup.com/1998/05/surrogate-keys/\" target=\"_blank\" rel=\"noopener\"\u003esurrogate keys\u003c/a\u003e in dimensions can be tricky and not human-friendly as we prefer business keys.\n  * With the popularity of document storage and cheap blobs in cloud storage, it is becoming easier to create and develop database **schemas dynamically** without writing \u003ca href=\"https://en.wikipedia.org/wiki/Data_manipulation_language\" target=\"_blank\" rel=\"noopener\"\u003eDML-statements\u003c/a\u003e.\n  * Systematically **snapshotting** dimensions compared to handling complex and maybe contra-intuitive [[Slowly Changing Dimension (Type 2)]] is a way to **simplify track changes** in a DWH. Is it also easy and relatively cheap to denormalize dimension attributes directly on the fact table to keep important information at the moment of the¬†transaction?\n  * [[Conformed dimensions]] and **conformance**, in general, are extremely important in nowadays [[Data Warehouse]]s and data environments. But **to be more collaborative and work on the same objects it is a necessary trade-off to loosen it up**.\n  * Not only are more working on the same project within data warehousing, but also more people from business and other departments **getting more data-savvy than ever before**. In that sense data needs to get more real-time rather than batch processing and precompute calculations, this can be done more ad-hoc with new fast technologies like Spark that **ran complex jobs ad-hoc** and on-demand.\n\nSee more on [[Babies and bathwater- Is Kimball still relevant#What has changed?]].\n\n---\nReferences: [[Education is changing]] [[ETL is changing]]\n",
    "lastmodified": "2023-06-23T10:05:17.549227125+02:00",
    "tags": null
  },
  "/data-orchestrators": {
    "title": "Orchestrators",
    "content": "# Orchestrators\nIf you go one step further, let's say you choose one of the above technologies, you will most probably run into the need to handle intermediate levels in between. For example to prepare, wrangle, clean, copy, etc. the data from one to another system or another format especially if you working with unstructured data as these need to be mingled in a structured way at the end in one or another way. To keep the overview and handle all these challenging tasks, you need an **Orchestrator** and some **cloud-computing frameworks** which I will explain in the two following chapters to complete the full architecture.\n\n\nOrchestrations are doing these things at heart:\n- invokes computation at the right time\n- models the dependencies between computations\n- tracks what computation ran\n\nMaking orchestrators experts on:\n- When stuff happens\n- when stuff is going wrong\n- what it takes to fix the wrong state\n\nTraditional Orchestrators focus on tasks. But newer generations e.g. [[Dagster]] focus on [[Data Assets ^gvdd3tf]] and [[Software-Defined Asset]], which makes scheduling and orchestration much more powerful. For more see [[Dagster#Why it's so powerful]]. It ties in with the [[Modern Data Stack]].\n\n## Tools\n  * [[Apache Airflow]] (created in Airbnb)\n  * [Luigi](https://github.com/spotify/luigi) (created in Spotify)\n  * [Azkaban](https://azkaban.github.io/) (created at LinkedIn)\n  * [Apache Oozie](http://oozie.apache.org/) (for Hadoop systems)\n  * [[Dagster]]\n  * [[Prefect]]\n  - [[Temporal]]\n  - [[Mage AI]] \n  - [[orchest.io]] (connecting [[Notebooks]])\n\nAfter you choose your group and even the technology you want to go for, you want to have an Orchestrator. **This is one of the most critical tasks** that gets forgotten most of the time.\n\nRead more on [Data Orchestration Trends: The Shift From Data Pipelines to Data Products | Airbyte](https://airbyte.com/blog/data-orchestration-trends).\n\n## When to use which tools\n### Evolution of Tools \nfrom [[Data Orchestration Trends- The Shift From Data Pipelines to Data Products]]\n\nTraditionally, orchestrators focused mainly on tasks and operations to reliable schedule and workflow computation in the correct sequence. The best example is the first orchestrator out there,¬†[cron](https://en.wikipedia.org/wiki/Cron). Opposite to crontabs, modern tools need to integrate with the Modern Data Stack.\n\nTo understand the complete picture, let‚Äôs explore where we came from before Airflow and other bespoken orchestrators these days.\n\n1.  In 1987, it started with the¬†**mother of all scheduling**¬†tools,¬†[(Vixie) cron](https://en.wikipedia.org/wiki/Cron)\n2.  to more¬†**graphical drag-and-drop**¬†ETL tools around 2000 such as¬†[Oracle OWB](https://en.wikipedia.org/wiki/Oracle_Warehouse_Builder),¬†[SQL Server Integration Services](https://docs.microsoft.com/en-us/sql/integration-services/sql-server-integration-services?view=sql-server-ver15),¬†[Informatica](https://www.informatica.com/)¬†\n3.  to¬†**simple orchestrators**¬†around 2014 with¬†[Apache Airflow](https://airflow.apache.org/),¬†[Luigi](https://github.com/spotify/luigi),¬†[Oozie](https://oozie.apache.org/)\n4.  to¬†**modern orchestrators**¬†around 2019 such as¬†[Prefect](https://www.prefect.io/),¬†[Kedro](https://github.com/quantumblacklabs/kedro),¬†[Dagster](https://github.com/dagster-io/dagster/), or¬†[Temporal](https://github.com/temporalio/temporal)\n\nIf you are curious and want to see the complete list of tools and frameworks, I suggest you check out the¬†[Awesome Pipeline List](https://github.com/pditommaso/awesome-pipeline#pipeline-frameworks--libraries)¬†on GitHub.\n\n### Which tool\nAs of [[2022-09-21]]:\n- [[Apache Airflow|Airflow]] when you need a task scheduling only (no data awareness)\n- **[[Dagster]]**¬†when you foresee higher-level data engineering problems. Dagster has more abstractions as they grew from first principles with a holistic view in mind from the¬†[very beginning](https://dagster.io/blog/introducing-dagster). They focus heavily on data integrity, testing, idempotency, data assets, etc.\n* **[[Prefect]]**¬†if you need a fast and dynamic modern orchestration with a straightforward way to scale out. They recently revamped the prefect core as¬†[Prefect 2.0](https://www.prefect.io/blog/introducing-prefect-2-0/)¬†with a new second-generation orchestration engine called¬†[Orion](https://www.prefect.io/blog/announcing-prefect-orion/). It has several abstractions that make it a swiss army knife for general task management.\n\t* With the new engine Orion they build in Prefect 2.0, they're very similar to [[Temporal]] and supports fast low latency application orchestration\n\t\nOr said others in this [Tweet](https://twitter.com/sspaeti/status/1580850623029075969) - I'd use:\n- airflow for plain task-scheduling\n- prefect fast, low-latency [[imperative]] scheduling\n- dagster for [[data-aware]] pipelines when you want best-in-class, but opinionated support\n\nAlso heard from Nick in the podcast [Re-Bundling The Data Stack With Data Orchestration And Software Defined Assets Using Dagster | Data Engineering Podcast](https://www.dataengineeringpodcast.com/dagster-software-defined-assets-data-orchestration-episode-309/).\n\n---\nReferences: [[Python]] [[What is an Orchestrator]] [[Why you need an Orchestrator]] [[Apache Airflow]]\n",
    "lastmodified": "2023-06-23T10:05:17.557557093+02:00",
    "tags": null
  },
  "/datafusion": {
    "title": "Data Fusion",
    "content": "# Data Fusion\nDataFusion is an extensible query execution framework, written in Rust, that uses [[Apache Arrow]] as its in-memory format.\n\nDataFusion supports both an SQL and a DataFrame API for building logical query plans as well as a query optimizer and execution engine capable of parallel execution against partitioned data sources (CSV and Parquet) using threads.\n\nDataFusion also supports distributed query execution via the [[Ballista (Arrow)]] crate.\n\n## Use Cases\nDataFusion can be used without modification as an embedded SQL engine or can be customized and used as a foundation for building new systems. Here are some examples of systems built using DataFusion:\n\n- Specialized Analytical Database systems such as¬†[CeresDB](https://github.com/CeresDB/ceresdb)¬†and more general spark like system such a¬†[[Ballista (Arrow)]]\n- New query language engines such as¬†[prql-query](https://github.com/prql/prql-query)([[PRQL]])¬†and accelerators such as¬†[VegaFusion](https://vegafusion.io/ \"if you know of another project, please submit a PR to add a link!\")\n- Research platform for new Database Systems, such as¬†[Flock](https://github.com/flock-lab/flock)\n- SQL support to another library, such as¬†[dask sql](https://github.com/dask-contrib/dask-sql)\n- Streaming data platforms such as¬†[Synnada](https://synnada.ai/)\n- Tools for reading / sorting / transcoding Parquet, CSV, AVRO, and JSON files such as¬†[qv](https://github.com/timvw/qv)\n- A faster [[Apache Spark|Spark]] runtime replacement (blaze-rs)\n\nBy using DataFusion, the projects are freed to focus on their specific features, and avoid reimplementing general (but still necessary) features such as an expression representation, standard optimizations, execution plans, file format support, etc.\n\n## Why DataFusion?\n\n- _High Performance_: Leveraging Rust and Arrow's memory model, DataFusion achieves very high performance\n- _Easy to Connect_: Being part of the Apache Arrow ecosystem (Arrow, [[Apache Parquet]] and Flight), DataFusion works well with the rest of the big data ecosystem\n- _Easy to Embed_: Allowing extension at almost any point in its design, DataFusion can be tailored for your specific usecase\n- _High Quality_: Extensively tested, both by itself and with the rest of the Arrow ecosystem, DataFusion can be used as the foundation for production systems.\n\n## Comparisons with other projects\nHere is a comparison with similar projects that may help understand when DataFusion might be be suitable and unsuitable for your needs:\n\n- [[DuckDB]]¬†is an open source, in process analytic database. Like DataFusion, it supports very fast execution, both from its custom file format and directly from parquet files. Unlike DataFusion, it is written in C/C++ and it is primarily used directly by users as a serverless database and query system rather than as a library for building such database systems.\n- [[Polars]]: Polars is one of the fastest DataFrame libraries at the time of writing. Like DataFusion, it is also written in Rust and uses the Apache Arrow memory model, but unlike DataFusion it does not provide SQL nor as many extension points.\n- [[Facebook Velox]]¬†is an execution engine. Like DataFusion, Velox aims to provide a reusable foundation for building database-like systems. Unlike DataFusion, it is written in C/C++ and does not include a SQL frontend or planning /optimization framework.\n- [[DataBend]]¬†is a complete database system. Like DataFusion it is also written in Rust and utilizes the Apache Arrow memory model, but unlike DataFusion it targets end-users rather than developers of other database systems.\n\n---\nOrigin: \nReferences: [[ROAPI]] [[Apache Arrow]] [[Rust]]\nCreated: [[2021-10-14]]\n",
    "lastmodified": "2023-06-23T10:05:17.525805898+02:00",
    "tags": null
  },
  "/deep-life": {
    "title": "Deep Life",
    "content": "Deep life, and productivity on their own do not work. [[Cal Newport]].\n\n**Besides a sound [[Personal Knowledge Management (PKM)]], a place to store all your knowledge and handle your to-dos, much more is needed for a fulfilled life**. Most of them happen inside my PKM system. That's why it's strongly connected with a deep life, which helped me keep grounded and to have a better meaningful life, similar to what the PKM system does to me.\n\nA word to the term *Deep Life*. I heard it in the [latest Tim Ferriss Podcast](https://tim.blog/2022/02/02/cal-newport/) with [[Cal Newport]], one of the leading people in the productivity space. He talked about Deep Life and explained what he thinks about it as of today. With my already written chapters at that time, I found that it perfectly fits his description. But without further ado, let's get into each of them and see how they connect to my PKM system and other parts of my life.\n\n## [[Stoic]]\n## [[Journaling]]\n### Digital vs Paper (see [[Journaling#Digital vs Paper]])\n## [[Routines such as Sports or Meditation]]\n## [[Stop reading News]]\n## [[Reading Books for a Happy Life]]\n## [[What Makes a Happy Life]]\n## [[Digital Minimalism]]\n\nMore on [[Personal Knowledge Management Workflow for a Deeper Life]].\n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]]\nReferences: [[Deep Work]] \nCreated [[2022-08-01]]\n",
    "lastmodified": "2023-06-23T10:05:17.544598305+02:00",
    "tags": null
  },
  "/deep-work": {
    "title": "Deep Work",
    "content": "# Deep Work\nOr also called *flow*. Introduced in the book [[Deep Work (Cal Newport)]].\n\nTODO: Definiton of flow/deep work.\n\n## How I get into Deep Work (*Flow*)\n\n1. Journal before going to bed what 1-2 tasks you must/want to achieve tomorrow. \n2. Go to bed early (at night, you usually don't achieve much anyhow)\n3. Have a good sleep\n4. Get up before the kids :) (don't turn on the phone). \n5. Make your bed. \n6. Later take a walk in nature after lunch. \n7. Change environment/room if stuck.\n\nMusic: [focusatwill.com](https://focusatwill.com). \nBooks: Everything from [[Cal Newport]].\n\nOthers:\n- Clear some time in your calendar.\n- Get rid of any distractions: Turn off notifications, close Slack, and put your phone out of reach.¬†  \n- Clear your space and your mind. Put on concentration music, and get rid of any clutter around.¬†  \n- Get to work on a specific task, taking periodic short breaks.\n- Deeper: Acknowledge your fears [[Andrew Thomas]] in [[The Ideas of Choices]]\n- [[Two Minutes Rules]] to do it for at least two minutes\n- [[Meditation]] or doing nothing for 5 minutes\n\n---\nOrigin: [Flow state can be an incredibly productive (and enjoyable) mindset - Matthew Darwin on LinkedIn](https://www.linkedin.com/feed/update/urn:li:activity:6963480809844445184/)\nReferences: \nCreated [[2022-08-11]]\n",
    "lastmodified": "2023-06-23T10:05:17.542668877+02:00",
    "tags": null
  },
  "/default-path": {
    "title": "Default Path",
    "content": "\nThe default path is a ‚Äúscript‚Äù of decisions and accomplishments needed to be seen as a successful adult. For example `good grades -\u003e good job -\u003e own a home -\u003e have a family`\n\nThe [[Pathless Path]] on the other hand, is experimenting on your own to find a life you want to live vs ‚Äúgetting ahead‚Äù on a script others follow ‚Äì¬†embracing uncertainty \u0026 discomfort vs planning/conforming.\n\nPeople follow the default path to be seen as ‚Äúsuccessful‚Äù¬†(e.g. career, great job)¬†and¬†**avoid the uncertainty \u0026 overwhelm**¬†that comes with figuring what they really want in life.\n\nRead more in the book [[The Pathless Path (Paul Millerd)]].\n\n---\nOrigin: \nReferences: \nCreated [[2023-02-23]]\n",
    "lastmodified": "2023-06-23T10:05:17.720831098+02:00",
    "tags": null
  },
  "/digital-garden": {
    "title": "Digital Garden",
    "content": "Synonym for [[Permanent Notes]] or [[Evergreen Notes]] (from [[Taxonomy of note types]]):\n\u003e  Evergreen / Permanent Notes. These are my long-running notes that will end up to my Zettelkasten core with my own words. Here I basically separated the literature notes into separate notes and ideas to follow the zettelkasten principle and link them together\n\nThe below analogy categorizes the different gardens out there. The Digital Garden is essentially a public [[Second Brain]], that has unpolished loosely organized notes, published on personal websites that evolve over time as a personal knowledge base.\n![[Garden Evolution.png]]\n[Source](https://maggieappleton.com/ai-dark-forest)\n\n---\n\nAwesome write-up in [A Brief History \u0026 Ethos of the Digital Garden](https://maggieappleton.com/garden-history).\n\n\n![[Pasted image 20220518175446.png]]\n\n\nAnother good one content-wise is [Personal Wiki / Digital Garden](https://strikingloo.github.io/wiki/) with lots of information about [[Personal Knowledge Management (PKM)]] but made with a Wiki instead of Linking [[Linking Your Thinking (LYT)]] by [[Nick Milo]]. Another one is [Networked Thought](https://jzhao.xyz/posts/networked-thought/).\n\n---\nOrigin: [A Brief History \u0026 Ethos of the Digital Garden](https://maggieappleton.com/garden-history) \nReferences: \nCreated [[2022-05-18]]\n",
    "lastmodified": "2023-06-23T10:05:17.565326141+02:00",
    "tags": null
  },
  "/digital-minimalism": {
    "title": "Digital Minimalism",
    "content": "The elephant in the room is today‚Äôs distractions, such as¬†**social media apps that the most advanced technology companies make and Neuroscientists to make you¬†[addicted](https://www.ted.com/talks/tristan_harris_how_a_handful_of_tech_companies_control_billions_of_minds_every_day)**. In¬†[[Digital Minimalism (Cal Newport)]],¬†[[Cal Newport]]¬†suggests that deleting all social media apps is already a good start as all companies will track you through the app. Instead, use the browser, they will have less or no GPS information when you open the app, cannot send you to push notifications, etc. You are already addicted, as hard as you want to tell yourself otherwise.\n\nAnother way to get out of the loop is a¬†[30 day sabbatical from social media](https://www.calnewport.com/blog/2016/09/21/quit-social-media/). To get back to you and see what you truly miss. Instead of scrolling through Instagram whenever you wait 2 seconds, maybe you can do it once a week Friday evening with a glass of wine. Wouldn‚Äôt that sound amazing?\n\nBesides the book, follow Cal Newport on his¬†[website](https://www.calnewport.com/)¬†or read more on¬†[[Slow Productivity]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.551089428+02:00",
    "tags": null
  },
  "/education-is-changing": {
    "title": "Education is changing",
    "content": "Facebook, Airbnb, and other companies taking a step into so-called \"Data Camps or Data University\" to educate internal employees in respect of data to get more data savvy.\n\n## Ways of Learning: University, Live-coding, etc.\nA nice way of \"learning\" is Rust. They have huge learning material see [Learn Rust](https://www.rust-lang.org/learn), but especially the [Rust Book](https://doc.rust-lang.org/book/) is very popular. We could do an Airbyte Book.\n\n---\nReferences: \n",
    "lastmodified": "2023-06-23T10:05:17.561171782+02:00",
    "tags": null
  },
  "/email": {
    "title": "Email",
    "content": "A big part of everyone is email. Although I argue against email and instead propose¬†[a way we (should) communicate](https://sspaeti.com/blog/email-and-the-way-we-should-communicate-at-work/), it‚Äôs still a big part of work or other areas of life. Unfortunately, it‚Äôs like an empty to-do list for everyone else to add tasks, making it dangerous. The GTD method from above¬†**integrates email into the workflow by going through your email in the weekly reviews and adding essential emails to your to-do list**. I do that by forwarding the email to Nirvana which adds them automatically to my inbox.\n\nEmail Client\n\nI use an email client called¬†[Hey](https://hey.com/), which integrates many aspects discussed here already by itself that it sorts out almost all meaningless emails out of my¬†[imbox](https://www.hey.com/features/the-imbox/).\n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]]\nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.530068882+02:00",
    "tags": null
  },
  "/etl-is-changing": {
    "title": "ETL is changing",
    "content": "Furthermore, the way we do ETL is changing as well, as [[Maxime Beauchemin]], data engineer at Airbnb quotes: \n\u003e _Product know-how on **platforms like Informatica, IBM Datastage, Cognos, AbInitio or Microsoft SSIS isn‚Äôt common amongst modern data engineers**, and being replaced by more generic software engineering skills along with understanding of programmatic or configuration driven platforms like Airflow, Oozie, Azkabhan or Luigi. It‚Äôs also fairly common for engineers to develop and manage their own job orchestrator/scheduler.\n\n He is also saying that **code is the best abstraction there is for software** rather than using drag-and-drop tools (ETL-tools). Most important what I see as well, is that the **transformation logic is of a higher need and shouldn't be locked away exclusively for BI developers**.\n\n---\nReferences: [[ETL]] [[Business Intelligence Engineer vs Data Engineer]] \n",
    "lastmodified": "2023-06-23T10:05:17.545742145+02:00",
    "tags": null
  },
  "/evidence": {
    "title": "Evidence - SQL with Markdown",
    "content": "[[Business Intelligence]] for Modern Data Teams ([[Modern Data Stack]]). Beautiful reports synced to your data with just [[SQL]] and [[Markdown]].\n\nRun live SQL from markdown. Evidence supports [[Google BigQuery]], [[Snowflake]], and [[Postgres]] - with more to come.\n\nIt needs a server to render the SQL. It's like Jekyll or [[GoHugo]] for SQL analysts. Still hope it could integrate with [[Obsidian]].\n\n## Use Case\nDemo Evidence with [GitHub](https://github.com/go-go-golems/sqleton) to generate reports: [Demo](https://share.descript.com/view/ppBx1MZB174)\n\nfrom [Evidence.dev ‚Äì Business Intelligence as Code | Hacker News](https://news.ycombinator.com/item?id=35645464) by [[Manuel Odendahl]]\n\n---\nOrigin: [Folding Data #31](https://app.hey.com/topics/607631165) [Evidence](https://evidence.dev/)\nReferences:\nCreated [[2022-04-20]]\n",
    "lastmodified": "2023-06-23T10:05:17.542856753+02:00",
    "tags": null
  },
  "/find-good-data-sets-or-sources": {
    "title": "Find good Data Sets or Sources",
    "content": "Data sets are always useful for data engineering projects. Here are some listed that can help find one.\n\n## Data Sets\nSome that offer great datasets:\n- Kaggle Datasets: Kaggle is a platform for data science and machine learning competitions, and it hosts a wide variety of datasets. You can find datasets on various topics, such as finance, sports, healthcare, and more. Browse through their dataset collection at https://www.kaggle.com/datasets.\n- [Google Dataset Search](https://datasetsearch.research.google.com/) \n\t- they are now ([[2023-03-05]]) included in default serach [Datasets at your fingertips in Google Search ‚Äì Google AI Blog](https://ai.googleblog.com/2023/02/datasets-at-your-fingertips-in-google.html)\n- If you need a big one, the New York Taxi is a famous one. They recently added the much better apache parquet format (but CSV is still there as well): \n\t- https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page\n- less relevant for you, but here in Switzerland we have some open-data endeavors that try to open-source all data, e.g. \n\t- CH: [[Open Data Swiss]]\n\t- US: data.gov: The US government's open data repository contains datasets from various agencies and organizations. The datasets cover a wide range of topics, including agriculture, climate, education, energy, and more. Browse the datasets at https://www.data.gov/.\n- The Seattle Data Guy also has great resources, e.g. here he suggests 5 of them: [5 Data Sources for Your Data Engineering Projects - Data Engineering Portfolio Part (1/5) - YouTube](https://youtu.be/LJkVvNWlO0g).\n- Weekly newsletter of useful/curious datasets: [Data Is Plural](https://www.data-is-plural.com/)\n- UCI Machine Learning Repository: The UCI Machine Learning Repository is a collection of databases, domain theories, and data generators used by the machine learning community for research purposes. It contains datasets related to various domains, including text, image, and time-series data. Visit the repository at https://archive.ics.uci.edu/ml/index.php.\n- Awesome Public Datasets: This is a GitHub repository that contains a curated list of high-quality public datasets on various topics, such as agriculture, biology, climate, economics, education, and more. You can find the list at https://github.com/awesomedata/awesome-public-datasets.\n- [FiveThirtyEight](https://fivethirtyeight.com/): FiveThirtyEight is a website that focuses on opinion poll analysis, politics, economics, and sports blogging\n- [CERN Open Data Portal](https://opendata.cern.ch/)\n\n## APIs\n- [public-apis/public-apis: A collective list of free APIs](https://github.com/public-apis/public-apis)\n- [spark-joy/README.md at master ¬∑ sw-yx/spark-joy ¬∑ GitHub](https://github.com/sw-yx/spark-joy/blob/master/README.md#mock-apis)\n\n\n## Source of People:\n![[People of Data Engineering]]\n\n\nRelated are good [[Open-Source Data Engineering Projects]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-05-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.547902242+02:00",
    "tags": null
  },
  "/fleeting-notes": {
    "title": "Fleeting Notes",
    "content": "Fleeting notes are quick, informal notes on any thought or idea that pops your mind. They don‚Äôt need to be highly organized and shouldn‚Äôt be. They are not meant to capture a picture in full detail but serve as reminders of what is in your head.\n\nFleeting Notes live primarily in my üì¨ inbox and could be random thoughts, hilights from [[ReadWise]], copy-pastes of books, anything.\n\nFleeting Notes are connected with [[Literature Notes]] and will result in self-written and polished [[Permanent Notes]].\n\n---\nReferences: [[Zettelkasten]]\nLast Modified: 2021-10-16\n",
    "lastmodified": "2023-06-23T10:05:17.550426216+02:00",
    "tags": null
  },
  "/folder-structure-para": {
    "title": "Folder Structure P.A.R.A.",
    "content": "\nThe only folders you need are four:\n![[Pasted image 20211001063307.png]]\n\n* A **project** is ‚Äúa series of tasks linked to a goal, with a deadline.‚Äù\n\nExamples include: Complete app mockup; Develop project plan; Execute business development campaign; Write blog post; Finalize product specifications; Attend conference\n\n* An **area of responsibility** is ‚Äúa sphere of activity with a standard to be maintained over time.‚Äù\n\nExamples include: Health; Finances, Professional Development; Travel; Hobbies; Friends; Apartment; Car; Productivity; Direct reports; Product Development; Writing\n\n* A **resource** is ‚Äúa topic or theme of ongoing interest.‚Äù\n\nExamples include: habit formation; project management; transhumanism; coffee; music; gardening; online marketing; SEO; interior design; architecture; note-taking\n\n* *Archives** include ‚Äúinactive items from the other three categories.‚Äù\n\nExamples include: projects that have been completed or become inactive; areas that you are no longer committed to maintaining; resources that you are no longer interested in\n\n## Areas vs Projects\n![[Pasted image 20211001070523.png]]\n\n\n## Projects vs Goals\nEach Project must have a **clear goal** and an **end time**. This helps me to organise it correctly\n\n![[Pasted image 20211001070857.png]]\n\nHobbies and dreams must not be in projects and goals! They are good to have, but not here.\n\n* **define your projects apart from any particular program or tool**. You** will always need to use multiple programs to complete projects. You may use a centralized platform like Basecamp, Asana, Jira, or Zoho**, but technology is advancing too quickly on too many fronts for any one company to do every single function best.\n* formulate your [[Project List]] and then replicate that list across every single tool you use, now and in the future. I recommend doing so down to the exact same spelling, punctuation, and capitalization, so that your transitions between programs are as seamless as possible.\n\n## Levels\n* use only **four levels deep** (using Evernote as an example, the levels would be: application \u003e stacks \u003e notebooks \u003e notes).\n\t* The number four has been called ‚Äúmagic‚Äù due to [research](https://www.ncbi.nlm.nih.gov/pubmed/11515286) indicating it seems to be the natural limit of all sorts of cognitive processes [[magical number 4 in short-term memory]]\n\n![[Pasted image 20211001072158.png]]\n\n## Actionable vs non-actionable\n **between actionable and non-actionable information**\n![[Pasted image 20211001072329.png]]\n\nSource: https://fortelabs.co/blog/para/ or the book [The PARA Method](https://www.buildingasecondbrain.com/para).\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.517154094+02:00",
    "tags": null
  },
  "/fonts": {
    "title": "Fonts",
    "content": "I have a love for nice fonts.\n\n## Reading and Writing Fonts\n- [Atkinson Hyperlegible](https://brailleinstitute.org/freefont) (mentioned [Your favourite fonts choice and why? thread - Share \u0026 showcase - Obsidian Forum](https://forum.obsidian.md/t/your-favourite-fonts-choice-and-why-thread/18129/5?u=sspaeti) )\n- [iA Writer Quattro](https://github.com/iaolo/iA-Fonts/tree/8548eea983611993db2d6f65bd3ae1609f62dcbd) \n- [Inter](https://fonts.google.com/specimen/Inter) - Default of [[Obsidian]] and used also at [[Airbyte]] website\n- [[Fonts - DYSLEXIA]] which makes reading easier for people with problems (from [[Tobias Sch√§uble]])\n- Piazzolla, serif; from [How to treat monospace alike fonts in a tech blog? - Pimp my Type](https://pimpmytype.com/review-tech-blog/)\n\t- [Piazzolla Type System](https://piazzolla.huertatipografica.com/) \n\t\nAtkinson Hyperlegible vs Piazzolla:\n![[Pasted image 20221022164222.png]]\n\nUpdated fonts in [[Obsidian]]:\n![[Pasted image 20221015212239.png]]\n\n## Programming Fonts\nHere are some tips for programming (from [[15 Best Programming Fonts for Better Coding]]):\n- Clear and easy-to-read characters to reduce eye strain when spending hours looking at hundreds of lines of code.\n- Makes a clear distinction between commonly-confused characters such as the letter ‚ÄúO‚Äù and the number ‚Äú0‚Äù or the lowercase ‚ÄúL‚Äù and the number ‚Äú1‚Äù.\n- Ligatures or extra whitespace for commonly-used symbols in popular programming languages ‚Äì not for everyone, but others love it.\n- Fonts with multiple variations on how certain characters are handled are great, so you can pick and choose exactly the version you prefer.\n\nTesting out fonts: [Programming Fonts - Test Drive](https://www.programmingfonts.org/).\n\n### Open Source Favorites\n- [Iosevka](https://github.com/be5invis/Iosevka) - My current one, 14.7k start on GitHub üò≥\n- [Source Code Pro for Powerline](https://kinsta.com/blog/best-programming-fonts/#4-source-code-pro) - Adobe open source\n- [Cascadia Code](https://kinsta.com/blog/best-programming-fonts/#9-cascadia-code) - default font for the Windows Terminal and Visual Studio\n- [Anonymous Pro for Powerline](https://www.marksimonson.com/fonts/view/anonymous-pro) - I like\n\t- Four styles: Regular, Italic, Bold, and Bold Italic.\n\t- Fixed width design.\n\t- Various computer keyboard symbols.\n\t- DOS box-drawing characters.\n\t- Extended language support for most Latin-based Western and Central European languages, as well as Greek and Cyrillic.\n\nSome comparisons while testing:\n![[Pasted image 20221018104849.png]]\nA nice [summary](https://forum.obsidian.md/t/your-favourite-fonts-choice-and-why-thread/18129/6?u=sspaeti) that has similar preferences that are similar to mine:\n\t\n\u003e [!summary]  Some of my favourite monospace / coding fonts [Link](https://forum.obsidian.md/t/your-favourite-fonts-choice-and-why-thread/18129/6?u=sspaeti)\n\u003e - [Cascadia Code¬†81](https://devblogs.microsoft.com/commandline/cascadia-code/)¬†‚Üê What I use in my terminal\n\u003e - [JetBrains Mono¬†63](https://www.jetbrains.com/lp/mono/)¬†‚Üê What I use in VS Code and other editors\n\u003e - [Iosevka¬†128](https://typeof.net/Iosevka/)¬†‚Üê Fantastically comprehensive and space efficient\n\u003e - [Anonymous Pro¬†57](https://fonts.google.com/specimen/Anonymous+Pro)¬†‚Üê A classic, but no ligatures\n\n### Payed\n- [Berkeley Mono](https://berkeleygraphics.com/typefaces/berkeley-mono/) (origin: [This Tweet](https://twitter.com/fatih/status/1650779476496723969/photo/1))\n- [Gintronic](https://markfromberg.com/index.php?/projects/gintronic/) so far one of my favorite\n\n![[Pasted image 20221015212258.png]]\n\n## Customize\nA webapp to customize certain parts of the fonts: [Iosevka Customizer](https://typeof.net/Iosevka/customizer).\n\n\n\n\n## Integrate into Website\n\nMore on [[Fonts on Websites]].\n\n---\nOrigin: \nReferences: [[Writing]], [[New Tabs in Obsidian with version 1.0]]\nCreated [[2022-10-15]]\n",
    "lastmodified": "2023-06-23T10:05:17.742712691+02:00",
    "tags": null
  },
  "/for-real-productivity-less-is-truly-more": {
    "title": "For Real Productivity, Less Is Truly More",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article4.6bc1851654a0.png)\n\n## Metadata\n- Author: [[hbr.org]]\n- Full Title: For Real Productivity, Less Is Truly More\n- Category: #articles #publish \n- URL: https://hbr.org/2010/05/for-real-productivity-less-is\n\n## Highlights\n- While it‚Äôs much less well known, Kleitman also observed that our bodies operate by the same 90 minute rhythm during the day. When we‚Äôre awake, we move from higher to lower alertness every 90 minutes. Other researchers have called this our ‚Äúultradian rhythm.‚Äù\n# For Real Productivity, Less Is Truly More\n\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article4.6bc1851654a0.png)\n\n## Metadata\n- Author: [[hbr.org]]\n- Full Title: For Real Productivity, Less Is Truly More\n- Category: #articles\n- URL: https://hbr.org/2010/05/for-real-productivity-less-is\n\n## Highlights\n- While it‚Äôs much less well known, Kleitman also observed that our bodies operate by the same 90 minute rhythm during the day. When we‚Äôre awake, we move from higher to lower alertness every 90 minutes. Other researchers have called this our ‚Äúultradian rhythm.‚Äù\n# For Real Productivity, Less Is Truly More\n\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article4.6bc1851654a0.png)\n\n## Metadata\n- Author: [[hbr.org]]\n- Full Title: For Real Productivity, Less Is Truly More\n- Category: #articles\n- URL: https://hbr.org/2010/05/for-real-productivity-less-is\n\n## Highlights\n- While it‚Äôs much less well known, Kleitman also observed that our bodies operate by the same 90 minute rhythm during the day. When we‚Äôre awake, we move from higher to lower alertness every 90 minutes. Other researchers have called this our ‚Äúultradian rhythm.‚Äù\n",
    "lastmodified": "2023-06-23T10:05:17.592957561+02:00",
    "tags": null
  },
  "/free-images-for-content": {
    "title": "Free Images for Content (Stock Images)",
    "content": "Find the right pictures.\n\n## Free:\n- https://www.pexels.com - [Free Stock Photo \u0026 Video License - Pexels](https://www.pexels.com/license/)\n\t- What is allowed? üëå\n\t\t- All photos and videos on Pexels are free to use.\n\t\t- Attribution is not required. Giving credit to the photographer or Pexels is not necessary but always appreciated.\n\t\t- You can modify the photos and videos from Pexels. Be creative and edit them as you like.\n\t- What is not allowed? üëé\n\t\t- Identifiable people may not appear in a bad light or in a way that is offensive.\n\t\t- Don't sell unaltered copies of a photo or video, e.g. as a poster, print or on a physical product without modifying it first.\n\t\t- Don't imply endorsement of your product by people or brands on the imagery.\n\t\t- Don't redistribute or sell the photos and videos on other stock photo or wallpaper platforms.\n- https://unsplash.com\n\n## Payed:\n- [www.shutterstock.com](http://www.shutterstock.com)\n\n## AI\n\n - [AI-powered stock photos | StockAI](https://www.stockai.com/)\n - Profile image\n\t - [Avatar AI](https://avatarai.me/) by [[levelsio]] -  Create Your AI Avatars, AI Profile Pictures, AI Photography, Pet Portraits, Dating Photos, Couples Photoshoot, LinkedIn Professional Profile Photos with Artificial Intelligence using Stable Diffusion and Dreambooth\n\t - [AI Profile Picture Generator | For humans, dogs and cats](https://www.profilepicture.ai/)\n - [Interior AI Free](https://interiorai.com/) -  Interior Design Ideas and Virtual Staging App using Artifical Intelligence\n---\nOrigin: \nReferences: [[Blogging]] [[Writing]]\nCreated [[2022-08-22]]\n",
    "lastmodified": "2023-06-23T10:05:17.568955788+02:00",
    "tags": null
  },
  "/future-of-blogging": {
    "title": "Future of Blogging",
    "content": "\nI think personal [[Second Brain]] below is the future of blogging. Notes or [[Zettel]]s are updated constantly, evolving, and hosted on plain [[Markdown]] files. No lock-in into a platform that will be gone in 2-3 years, as I experienced many times throughout my career. \n\nüëâüèª Check out other first movers: [[Other Public Second Brains]].\n\n![[Pasted image 20230527101848.png]]\nExample of a Second Brain called [[Data Glossary üß†]]. See the [Website](https://glossary.airbyte.com/), open on [GitHub](https://github.com/airbytehq/glossary).\n\nI'm a big Markdown fan. In [[Markdown vs Rich Text]], you see the vast advantages over rich tech such as using Google Docs, [[WordPress]], or [[Webflow]] and or just using other [[Open Subscription Platforms]] like [[Substack]], [[Medium]]. These lock you in, the same as additional [[Note Taking App]]s do that do not base on Markdown. Obsidian55 is so powerful, and many people are betting on it, as the notes will be future-proof [[Plaintext Files]].\n\n\n## Want to build one yourself?\nI documented the steps in detail on [[Public Second Brain with Quartz]].\n\nAlso start [[Smart Note Taking]], which is the fundamentals of each blog post, and convert it into [[Continuous Notes]].\n\n---\nOrigin: [My Tweet](https://twitter.com/sspaeti/status/1662372396546809856)\nReferences: [[Blogging]]\nCreated [[2023-05-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.711445374+02:00",
    "tags": null
  },
  "/getting-things-done-gtd": {
    "title": "Getting Things Done (GTD)",
    "content": "Up until now, we managed ideas and knowledge, which enlarges the [[Second Brain]] and how to link our thoughts. Besides this,¬†**much anxiety and stress come from not being on top of your tasks, jobs, things you might want to do, ideas, and lists you want to read**. The to-dos you put yourself somewhere on a post-it, a todo app, or anywhere else. I also tried to incorporate to-dos in my note-taking apps but never succeeded. It works best for me when having a dedicated tool and workflow.\n\nTo prove that, I tried all possible apps there is out there from¬†[Wunderlist](https://en.wikipedia.org/wiki/Wunderlist),¬†[Remember the Milk](https://www.rememberthemilk.com/),¬†[Any.do](https://www.any.do/),¬†[Todoist](https://todoist.com/),¬†[Trello](https://trello.com/), Simple List,¬†[Google Tasks](https://play.google.com/store/apps/details?id=com.google.android.apps.tasks\u0026hl=en\u0026gl=US)¬†to¬†[Microsoft Todo](https://todo.microsoft.com/). But none of them did the trick BECAUSE they missed the deeper methodology or framework. So what worked, you might ask? The book by¬†[Getting Things Done by David Allen](https://www.amazon.com/Getting-Things-Done-David-Allen-audiobook/dp/B01B6WSK5C/)¬†had it all and clicked for me. To start with, you can follow these two simple steps:\n\n-   asking yourself:¬†**What‚Äôs the next action?**\n-   **finish**¬†every task you can do¬†**within 2 minutes**¬†immediately\n\n[![/blog/pkm-workflow-for-a-deeper-life/GTD-getting-things-done-workflow.png](https://sspaeti.com/blog/pkm-workflow-for-a-deeper-life/GTD-getting-things-done-workflow.png \"/blog/pkm-workflow-for-a-deeper-life/GTD-getting-things-done-workflow.png\")](https://sspaeti.com/blog/pkm-workflow-for-a-deeper-life/GTD-getting-things-done-workflow.png \"/blog/pkm-workflow-for-a-deeper-life/GTD-getting-things-done-workflow.png\")\nOverview of the steps in the GTD Workflow |¬†[Lifehack](https://www.lifehack.org/articles/lifehack/gtd-workflow-chart.html)\n\nAnother big one was the¬†**separation between adding a task to an Inbox versus reviewing each task**¬†and asking the above next action question. This way, during capturing, I could focus on saving the tasks as quickly as possible, and in the reviewing face, I‚Äôd use a different part of my brain to make more profound thoughts on how to accomplish it or directly do it if lesser than 2 minutes. This differentiation many of us ignore, and we add tasks such as ‚Äúdo tax‚Äù and ‚Äúchange tires‚Äù. Instead, we could add actionable tasks such as ‚Äúcall accountant for a date‚Äù, ‚Äúcollect payslip‚Äù, or ‚Äúcall garage for appointment‚Äù.\n\nAs you can see, they are multiple times less stressful, and we can do it quickly, whereas the first one usually stays in our todo-apps for months and stresses us out every day.\n\nThere are other critical points such as¬†**putting the next action into different¬†_lists_¬†such as ‚ÄúNext, waiting, scheduled or someday/maybe‚Äù**. By adding tags such as #calls #atcomputer and others, you have a powerful way to filter all your tasks by the physical location where you can do them all in a row. There are more such filters, such as adding an energy level (low, medium, high) to pick tasks on a low energy phase or maybe a hard one in the morning after a good sleep. These are assigned to a project and categorised further into personal/work, which helps quickly find the relevant tasks.\n\nIn an app such as¬†[[NirvanaHQ]], this looks something like this:  \n\n[![/blog/pkm-workflow-for-a-deeper-life/nirvanahq-creating-todo.png](https://sspaeti.com/blog/pkm-workflow-for-a-deeper-life/nirvanahq-creating-todo.png \"/blog/pkm-workflow-for-a-deeper-life/nirvanahq-creating-todo.png\")](https://sspaeti.com/blog/pkm-workflow-for-a-deeper-life/nirvanahq-creating-todo.png \"/blog/pkm-workflow-for-a-deeper-life/nirvanahq-creating-todo.png\")\nProperties when creating a new Todo in Nirvana | Image by the Author\n\nThere‚Äôs much more to the GTD method. For example, the five steps, the first¬†_capturing_¬†to the fifth¬†_engaging_, and how to integrate the higher-level goals into the system. I suggest reading the [[Getting Things Done - David Allen]]¬†as it can make a big difference in your life.\n\nI found that above mentioned NirvanaHQ implements the method the best way for me. There is no distraction as it hasn‚Äôt calendar integrations, no image upload, or no fancy emojis. I used¬†[Todoist](https://sspaeti.com/blog/pkm-workflow-for-a-deeper-life/todoist.com)¬†last and tried to implement the GTD method until I switched for the same reasons mentioned in¬†[My thoughts on changing to Nirvana](https://noisydeadlines.net/gtd-journey-my-thoughts-on-switching-to-nirvana).\n\nThe more human and overall goal is to put everything into an external system as your brain doesn‚Äôt do well storing/remembering things. By writing everything down, you will feel relieved.¬†**The challenge is to keep your system up-to-date so that the brain trusts it**. That you won‚Äôt think: ‚ÄúOh, I need to remember this because the system is not trustworthy‚Äù.\n\n\u003e [!info] Trigger Events\n\u003e The Calendar itself can hold to-dos. Instead of cluttering your todo app with tasks a long time in the future. Put them in the calendar when it‚Äôs important and add them when they trigger at a specific time. The key is to have a trusted calendar same as the todo app.\n\n\u003e [!note] Six Horizons of Focus\n\u003e Another one is to integrate [[The 6 Horizons of Focus]]¬†into your projects and to-dos. Which makes sure your 2-3 and 5-year long-term goals are respected, and you always have them in the back of your mind and to-dos.j\n\nAnother related term called [[Done, and Gets Things Smart]] is worthwile to check out.\n\n---\nOrigin: \nReferences: \nCreated [[2022-04-06]]\n",
    "lastmodified": "2023-06-23T10:05:17.693557347+02:00",
    "tags": null
  },
  "/github-copilot": {
    "title": "GitHub Copilot",
    "content": "The excellent tech can write not only code but also auto-complete comments. It uses GitHub repos for inspiration but can adapt to 1 bio or input params with GT3 (or similar?) and adjust names according to your comments or needs.\n\nIt essentially replaces Googling and searching on StackOverflow. It's also perfect to learn a new language as you do not need to know anything; you add comments if you don't know.\n\n---\nOrigin: [YouTube Video](https://youtu.be/Xw_qbJp52cY), [GitHub Copilot](https://copilot.github.com/)\nReferences: \nCreated [[2022-08-23]]\n",
    "lastmodified": "2023-06-23T10:05:17.568627286+02:00",
    "tags": null
  },
  "/goatcounter": {
    "title": "GoatCounter",
    "content": "Easy web analytics. No tracking of personal data.\n\nGoatCounter is an open-source web analytics platform available as a free donation-supported hosted service or self-hosted app. It aims to offer easy-to-use and meaningful privacy-friendly web analytics as an alternative to [[Google Analytics]], [[Matomo]], or [[Umami]].\n\nMore on [Why GoatCounter was made](https://www.goatcounter.com/why).\n\n---\nOrigin: \nReferences: [GitHub repo](https://github.com/arp242/goatcounter)\nCreated [[2023-06-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.725913838+02:00",
    "tags": null
  },
  "/hackmd": {
    "title": "HackMD",
    "content": "[[Google Docs]] for [[Markdown]]. Effective team collaboration.\n\n[HackMD](https://hackmd.io/)¬†is a real-time, multi-platform collaborative Markdown editor. You can use HackMD to write notes with other people on your computer, tablet, or phone. HackMD provides a variety of document templates and allows users to push documents to GitHub. You can import and export documents from Dropbox, Google Drive, and GitHub gists.\n\n### Features\n- Collaboration\n- Markdown\n\n### Formats\nHackMD supports CommonMark and other markup syntax, such as:\n-   MathJax for formulas\n-   Mermaid and Graphviz for UML diagrams\n-   Vega-lite for data visualizations\n\n\n---\nOrigin: \nReferences: \nCreated [[2023-04-10]]\n",
    "lastmodified": "2023-06-23T10:05:17.723379781+02:00",
    "tags": null
  },
  "/halmak": {
    "title": "Halmak",
    "content": "This is created with an [[Machine Learning]] algorithm to use least amount of key travel. So 73% you would write english you are using the finges laying on the home row already.\n\n![[Pasted image 20221021155948.png]]\n\n--\u003e Beautiful, but unfortunately not optimized for [[vim]]. I think [[Dvorak]] seems to be suited better.   \n## Features\n-   Build based on the real world hand movements analysis\n-   Nearly maximal possible typing efficiency\n-   Very low overall fingers movement distance\n-   Very low same finger / same hand usage overheads\n-   Very low overall horizontal hands movement\n-   Highly symmetrical design that accounts for individual fingers strength\n-   Designed with the modern, web based English in mind\n\n[GitHub - MadRabbit/halmak: The final version of the AI designed keyboard layout](https://github.com/MadRabbit/halmak)\n\n---\nOrigin: \nReferences: \nCreated [[2022-10-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.735835357+02:00",
    "tags": null
  },
  "/how-to-build-a-second-brain": {
    "title": "The Building a Second Brain methodology will teach you how to:",
    "content": "# The Building a Second Brain methodology will teach you how to:\n\n1. **Consistently move your projects and goals to completion** by organizing ahd accessing your knowledge in a results-oriented way\n2. **Transform your personal knowledge into income**, taking advantage of a rapidly growing knowledge economy\n3. **Uncover** **unexpected patterns and connections** between ideas\n4. **Reduce stress and ‚Äúinformation overload‚Äù** by expertly curating and managing your personal information stream\n5. **Develop valuable expertise, specialized knowledge, and the skills** to deploy it in a new job, career, or business\n6. **Cultivate a collection of valuable knowledge** and insights over time without having to follow rigid, time-consuming rules\n7. **Unlock the full value of the wealth of learning resources all around you**, such as online courses, webinars, books, articles, forums, and podcasts\n\nMost important take aways:\n\n* ## B) Organize your content by project\n  * Instead of organizing your files primarily by topic (for example, web design or psychology), which is time-consuming and mentally taxing, organize them according to _the projects you are actively working on_. This ensures that you are consuming information with a purpose ‚Äì to advance your projects and goals ‚Äì and only at a time and place where you‚Äôll be able to put it to use.\n* ## C) Keep only what resonates\n* ## A) Design notes for your future self\n* ## C) Organize opportunistically, a little bit at a time\n\nBlog post: https://fortelabs.co/blog/basboverview/\nPodcast: https://open.spotify.com/show/40O0Lbp5ockSt0qSogo6q1\nYouTube - How to structure use: https://youtu.be/uqVx22lo9_4\n\n---\nOrigin: \nReferences: \nCreated [[2022-03-25]]\n",
    "lastmodified": "2023-06-23T10:05:17.516174047+02:00",
    "tags": null
  },
  "/how-to-not-be-terrible-at-writing": {
    "title": "How to not be terrible at writing",
    "content": "by [[Justin Gage]]\n\nWriting should be fun and feel natural. Yes!:\nLike code, writing should feel like a sort of flow ‚Äì but it takes time to get there\n\nWriting is very mood dependent; if you‚Äôre not feeling it, forcing it probably won‚Äôt help (but if you only wait for the perfect moment, it won‚Äôt get written)\n\n\n## How to write well and do other stuff good too\n1.  INTENTIONALITY ABOUT YOUR AUDIENCE AND GOAL\n\t1. Good posts are created for specific people and aim to get them to think or feel a specific thing\n2.  TELL A STORY\n\t1. Good posts tell a story, they don‚Äôt spit facts\n3.  ORGANIZATION\n\t1. Good posts are clearly organized and follow a linear progression of detail\n4.  VISUAL CUES\n\t1. Good posts use diagrams, lists, bold, and italic to convey emotion and break things up visually\n5.  THE RIGHT AMOUNT OF DETAIL\n\t1. \t1. Good posts pick the perfect level of depth for the audience and goal\n## Be intentional about your audience and goal\n- A piece of content can only be effective for ONE audience ‚Äì you can‚Äôt speak to multiple people at once\n\t-   E.g. CFO vs. VP of Product\n\t-    E.g. Data Scientist vs. Marketer \n- E.g.\n\t- Audience: Data Science teams considering whether PyMC3 fits their use case \n\t- Thoughts and feelings: I now understand PyMC3‚Äôs strengths and weaknesses and can talk more intelligently about whether it makes sense for this project\n-  AT THE TOP OF EVERY POST:\n\t- Who is the audience?\n\t- What do I want them to think or feel after reading this?\n\n## Organization: structure and assumptions\n\n- Ordering and organization are implied but legible\n- All pedagogy assumes expertise\n- Build an outline in advance\n- Create clear section headers ‚Äì more important than you think\n\n## And for heaven‚Äôs sake, write! write! write!\n\n- Be bad, it‚Äôs OK\n- The only way to get better at writing is to write (shocker)\n- Write\n- Write some more\n- Then also write more after that\n- write\n\n\n---\nOrigin:  [How to not be terrible at writing - Google Pr√§sentationen](https://docs.google.com/presentation/d/1-O3Woc3TpE8fG-HYWSAUa7sHcQp1NgrWNmE3lBIn60U/edit?_hsmi=230607130\u0026_hsenc=p2ANqtz-8dQd0gNh-vw8S59dcfhkI4H1jgF1x46bQdE9Kzao7o-p3vpajadWo5LDPxnCkmpivVL0ugM_nYL3kvapqCnqTZe-szqA#slide=id.g15e6e598ae9_12_0) and the youtube video [How to not be a terrible writer](https://www.youtube.com/live/_Qx8PYrVFNU?feature=share)\nReferences: \nCreated [[2022-10-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.685020795+02:00",
    "tags": null
  },
  "/how-to-read-books": {
    "title": "How to Read Books",
    "content": "Tactical technique with skipping and choosing books on [How to Read Faster](https://youtu.be/KJ2Lvi9kG2Q) by [[Mark Manson]]:\n1. Quiet the inner monologue\n2. Read with your finger\n3. Stop reading books you hate\n\t1. the point of reading is for you, don't feel bad if you skip chapters or you don't finish\n4. Schedule time to read\n5. Read more than one book at a time\n\nPurely reading faster can be done with [[Speed Reading]] techniques.\n\n## Remember What You Read\nMark is not highlighting or taking notes. He acts on the books. That requires reading the right book at the right time. That's why reading multiple books makes sense; you can put away if the book doesn't interest you or doesn't make sense for now and pick it up later when it makes sense. \n\nBut I disagree with not taking any notes, with taking minor notes, or better [[Ideas]] that you had during reading (for my case listening), and you put that in a [[Second Brain]] for later when you need it; that's invaluable. He mentioned that our brain remembers, but that is only true now, not for the next two years, two months, or even a week after I forgot. \n\nSo it's worth taking notes, but to his point, not making it like school and highlighting every page takes away the fun of reading! But with a second brain, you just put a sentence of something you never heard, and then later, if you find it, or during the weekly routine, you connect it to existing ideas within your second brain, and you couldn't believe how many new ideas or insights I got from these. It's how I learn and have fun with books.\n\n---\nOrigin: \nReferences: [[Reading Books for a Happy Life]]\nCreated [[2023-03-31]]\n",
    "lastmodified": "2023-06-23T10:05:17.552561521+02:00",
    "tags": null
  },
  "/how-to-write-well": {
    "title": "How to Write Well?",
    "content": "It's hard, it's painful as Stephen mentions in [[On Writing - Stephen King]] (especially [[On Writing - Stephen King#GOOD WRITING]]) and [[The Elements of Style - William Strunk Jr]].\n\nWriting when you have some notes and starting is the hard part. Starting out there is lots of enthusiasm, but after a while when this goes away, it's tough.\n\nIt's easiest to postpone or do other things. \n\nWhat I try to do is to turn off the Wifi and turn off the phone and force myself for two hours on writing straight (go to a library/outside when you can). It's so painful, and it doesn't matter the quality of the writing. It will be bad. But just that in a second phase you can go through and cut out the bad and leave the good.\n\nAs many say, just write on, some days you write poor some days better. Don't worry you will filter them out later.\n\n\u003e When I spend a lot of time optimizing an article, and I can see the changes and how the article improves with each edit, that makes me happy every time and is just a magical moment as you never know how it will end up before you do the hard work.\n\nIt's also very much connected to [[Atomic Habits - James Clear]] and [[Optimize My Sleep]] where you have a good mind and maybe you get up early to write first thing in the morning without distraction!\n\n## How to not be terrible\nFocus on the Audience and tell a story, here are some pointers on [[How to not be terrible at writing]]:\n![[Pasted image 20221021065715.png]]\nTakeaways:\n- Always think who is your **audience**, you can write to them with more specific\n- **[[Storytelling]]**: Do things like \"Imagine you are a DE at a large company\"\n\n\u003e \"Write like you talk\" embodies a polite fiction that sometimes confuses people. What if someone talks in monosyllabic grunts, like some teenagers do? A more precise version would be \"write like someone who talks well talks.\" [[Paul Graham ]] in [Tweet](https://twitter.com/paulg/status/1615657168732291074)\n\n## Tools\n- [[Grammarly]] for checking Grammar\n- [[ChatGPT]] and other AI to brainstorm, fix errors, and ask for missing content. Never let it generate the text, always submit your text with each request.\n- [Hemingway Editor](https://hemingwayapp.com/) highlights long parts and makes it enjoyable for the readers\n![[hemingwayapp.png]]\n\n---\n\nMore on:\n- [[How to get a Better Writer]] \n- [[Writing Handbook by Julian Shapiro]] \n- [[Writing Advice From A16z's Andrew Chen]].\n- [[10 Years of Professional Blogging ‚Äì What I‚Äôve Learned at Andrewchen]] \n- Showing by example: [[How to Write Better Stories in 4 Easy Steps]]\n- [The Developer Voice Guide: How To Write Articles Engineers Want To Read](https://medium.com/@adipolak/the-developer-voice-guide-how-to-write-articles-engineers-want-to-read-446cdd1f0866)\n\n---\nOrigin: [[Writing]]\nReferences: \nCreated [[2022-08-19]]\n",
    "lastmodified": "2023-06-23T10:05:17.779061748+02:00",
    "tags": null
  },
  "/ide": {
    "title": "IDE",
    "content": "IDEs are Developer Environments such as [[VSCode]], PyCharm, [[vim]], etc.\n\nAn alternative term that comes from the [[Neovim]] community is called [[PDE (Personalized Development Environment)]].\n\nIn [[Browser]] IDE's:\n- [[Github Codespaces]] \n- [[replit]]\n- [[Stackblitz]]\n- [[CodeSandbox]]\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-05]]\n",
    "lastmodified": "2023-06-23T10:05:17.54078824+02:00",
    "tags": null
  },
  "/if-you-have-writers-block-maybe-you-should-stop-lying": {
    "title": "If You Have Writer's Block, Maybe You Should Stop Lying",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article1.be68295a7e40.png)\n\n## Metadata\n- Author: [[sashachapin.substack.com]]\n- Full Title: If You Have Writer's Block, Maybe You Should Stop Lying\n- Category: #articles #publish \n- URL: https://sashachapin.substack.com/p/if-you-have-writers-block-maybe-you\n\n## Highlights\n- But it‚Äôs difficult, because, on some level, you know that you‚Äôre lying, or, at least, that your words lack conviction. And that is an ugly place to be\n- I find that this is an overlooked source of writing difficulty. I find that people often believe they have a writing technique problem, when, actually, what they have is a sincerity problem. They think that writing is onerous, when, actually, they mean that writing as if they‚Äôre someone else is onerous.\n# If You Have Writer's Block, Maybe You Should Stop Lying\n\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article1.be68295a7e40.png)\n\n## Metadata\n- Author: [[sashachapin.substack.com]]\n- Full Title: If You Have Writer's Block, Maybe You Should Stop Lying\n- Category: #articles\n- URL: https://sashachapin.substack.com/p/if-you-have-writers-block-maybe-you\n\n## Highlights\n- But it‚Äôs difficult, because, on some level, you know that you‚Äôre lying, or, at least, that your words lack conviction. And that is an ugly place to be\n- I find that this is an overlooked source of writing difficulty. I find that people often believe they have a writing technique problem, when, actually, what they have is a sincerity problem. They think that writing is onerous, when, actually, they mean that writing as if they‚Äôre someone else is onerous.\n# If You Have Writer's Block, Maybe You Should Stop Lying\n\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article1.be68295a7e40.png)\n\n## Metadata\n- Author: [[sashachapin.substack.com]]\n- Full Title: If You Have Writer's Block, Maybe You Should Stop Lying\n- Category: #articles\n- URL: https://sashachapin.substack.com/p/if-you-have-writers-block-maybe-you\n\n## Highlights\n- But it‚Äôs difficult, because, on some level, you know that you‚Äôre lying, or, at least, that your words lack conviction. And that is an ugly place to be\n- I find that this is an overlooked source of writing difficulty. I find that people often believe they have a writing technique problem, when, actually, what they have is a sincerity problem. They think that writing is onerous, when, actually, they mean that writing as if they‚Äôre someone else is onerous.\n",
    "lastmodified": "2023-06-23T10:05:17.619942727+02:00",
    "tags": null
  },
  "/integrate-openai-into-obsidian": {
    "title": "Integrate OpenAI into Obsidian",
    "content": "\n[[OpenAI (GPT-3)]] is a powerful AI that can write whole articles, see [Data Nets](https://airbyte.com/blog/data-nets) (fully written by AI). It's the same AI backbone [[GPT-3]] that is used for [[GitHub Copilot]].\n\nWouldn't it be nice to use the inside of [[Obsidian]]? Luckily there are two plugins and one that works for my needs.\n- [Obsidian Ava](https://github.com/louis030195/obsidian-ava)\n- [Text Generator](https://github.com/nhaouari/obsidian-textgenerator-plugin)\n\nI liked the integration better of Ava and gave it a try. And it's superb as you select text and apply a Template, and voila, OpenAI will generate the text.\n\nHere a small [demonstrations](https://youtu.be/ogpSjyU-KLs) how it looks like:\n{{\u003c youtube ogpSjyU-KLs \u003e}}\n\n## How to install\nCheck the instructions on [GitHub](https://github.com/louis030195/obsidian-ava). But essentially you need to create an account on [OpenAI API](https://beta.openai.com/playground), and create secret key under [View API Keys](https://beta.openai.com/account/api-keys). Copy these and add to your pluging in Obsidian.\n![[Pasted image 20221124105012.png]]\n*It also supports [[Stable Diffusion]] to generate image, which I haven't used yet*\n\n## Set up the Template\nWith the [Templater](https://github.com/SilentVoid13/Templater) plugin you need to add a script, I had to call it `completeSelection.js` and added this code (see GitHub for the latest):\n```js\nconst completeSelection = async () =\u003e {\n    document.body.style.cursor = \"wait\";\n    const msg = window.getSelection().toString();\n    const response = await app.plugins.plugins[\"ava\"].openai.createCompletion({\n        \"model\": \"text-davinci-002\",\n        \"prompt\": msg,\n        \"temperature\": 0.7,\n        \"max_tokens\": msg.length + 100,\n        \"top_p\": 1,\n        \"frequency_penalty\": 0,\n        \"presence_penalty\": 0\n    })\n    document.body.style.cursor = \"default\";\n    return `${msg}${response.data.choices[0].text}`;\n\n}\nmodule.exports = completeSelection;\n```\n\nSet the location you put this JavaScript:\n![[Pasted image 20221124105048.png]]\n\nNow create a new Markdown note which you move to your Templater folder that contains nothing else than:\n```templater\n\u003c% tp.user.completeSelection() %\u003e\n```\n\nNow you are all set and can use it.\n\n## How to use it?\nYou select a text, and activate a template with Templater either via `cmd+p` and search for `Templater: Open Insert Template modal` or add a shortcut to it (I have `cmd+t`) and the AI will do his job.\n\n### Example with `text-davinci-002`\n![[Pasted image 20221124104516.png]]\n![[Pasted image 20221129105144.png]]\n\n### Example with `text-davinci-003`\nAfter the upgrade [[2022-11-29]] to `text-davinci-003`, I added the exact same questions:\n\n\u003e Vim is an incredibly powerful text editor that is used by experienced developers and system administrators. It is incredibly fast, has a large number of features, and is highly customizable. Learning Vim can help you become a more efficient programmer and system administrator, enabling you to work faster and with fewer mistakes. It can also help you become more familiar with the command line, which is an essential skill for many development and sysadmin tasks.\n\nWhy is OpenAI the future?\n\n\u003e OpenAI is the future because of its potential to revolutionize the way we interact with technology. Its focus on artificial general intelligence (AGI) research and development will allow machines to learn and think in ways that are similar to humans, potentially enabling them to solve complex problems and create new solutions. OpenAI's focus on ethical AI use, as well as its commitment to making its technology accessible to everyone, also gives it an advantage over other tech companies. By making its technology available to the public, OpenAI will help to ensure that the AI revolution is an inclusive one, rather than an exclusive one that only benefits\n\nSee also a video on this [Tweet](https://twitter.com/sspaeti/status/1595718693887086592).\n\n---\nOrigin: \nReferences: \nCreated [[2022-11-24]]\n",
    "lastmodified": "2023-06-23T10:05:17.530965596+02:00",
    "tags": null
  },
  "/introduction-to-git-integration": {
    "title": "Introduction to git integration",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/media/uploaded_book_covers/profile_302367/logo-ms-social.png)\n\n## Metadata\n- Author: [[mberdugo]]\n- Full Title: Introduction to git integration\n- Category: #articles #publish \n- URL: https://learn.microsoft.com/en-us/fabric/cicd/git-integration/intro-to-git-integration\n\n## Highlights\n- Supported items\n  The following items are currently supported:\n  ‚Ä¢ Reports (except paginated reports)\n  ‚Ä¢ Datasets (except push datasets, live connections, and model v1) ([View Highlight](https://read.readwise.io/read/01h166vezpazqdj003z6p1ds9k))\n    - Note: [[Power BI]] git integration, only reports and datasets are supported. others are ignored. I wonder how long until you can check in all, or if that will happen at all? At least a good step into the right direction\n- If the workspace or git directory has unsupported items, it can still be connected, but the unsupported items are ignored. They aren‚Äôt saved or synced, but they‚Äôre not deleted either. They appear in the source control pan but you can't commit or update them. ([View Highlight](https://read.readwise.io/read/01h166x1n0bxqse1vky9epsa1q))\n## New highlights added May 24, 2023 at 11:41 AM\n- [](https://learn.microsoft.com/en-us/fabric/cicd/git-integration/intro-to-git-integration#considerations-and-limitations)Considerations and limitations\n  ‚Ä¢ Currently, only [Git in Azure Repos](https://learn.microsoft.com/en-us/azure/devops/user-guide/code-with-git) is supported. ([View Highlight](https://read.readwise.io/read/01h16dasdq38kray7sredxx40c))\n",
    "lastmodified": "2023-06-23T10:05:17.594888365+02:00",
    "tags": null
  },
  "/journaling": {
    "title": "Journaling",
    "content": "Another one that goes hand in hand with [[Stoic]] is¬†[Journaling](https://www.urmc.rochester.edu/encyclopedia/content.aspx?ContentID=4552\u0026ContentTypeID=1). It grounds me similarly to meditating. I always heard on the¬†[[Tim Ferriss]] [Podcast](https://tim.blog/)¬†that ‚Äúsuccessful‚Äù people meditate and journal a lot. I never understood the term journaling until I started it myself.\n\nWhat helped me get started was the instructions by Derek with the idea of¬†_[Thought On](https://sive.rs/dj)_¬†files. By doing all journaling digitally in a¬†[plain text](https://sive.rs/plaintext)¬†file and creating a separate one. Therefore I can read at a glance what I journaled, pondered, and thought off last time, can reflect on it, and go deeper. Sometimes the previous journal entry is from years back, and of course, I do not remember, but giving me tons of insights as these are my thoughts. It‚Äôs a little like time travel back and talking to myself back then.\n\nBesides the thought of journaling, I also do¬†[dailies](https://thomasgriffin.com/how-to-journal-daily/#:~:text=Daily%20journaling%20is%20the%20act,daily%20journaling%20being%20surprisingly%20simple.)¬†whenever I have time. In these, I usually dump whatever is stuck in my head right now and offload it to my journal and then ask questions about it. Why do I feel like this, or what can I change to feel better, and so on.\n\nEvery two or three months, I reflect on all levels where I have a bunch of questions (I use the [[üîÉ  Reflection Template]]¬†by [[Zowie from Systematic Mastery]]) about all kinds of things which takes me about 30 minutes and more.\n\nAnother way is to start with¬†[11 curated questions](https://www.curatedquestions.com/tim-ferriss-tribe-of-mentors#:~:text=It%20could%20be%20a%20few,time%2C%20energy%2C%20etc)¬†Tim Ferriss asked everyone in the book [[Tribe of Mentor (Tim Ferriss)]]¬†and see what you come up with.\n\n## Digital vs Paper\nWriting is therapy! I usually write as much as possible on my laptop because I can type as fast as I think. At the same time, my handwriting can‚Äôt keep up with my thinking speed. There is no slowing down and forgetting ideas or thoughts. On the other hand, I can reformat, re-arrange, add, and delete, which will help my thinking process which wouldn‚Äôt happen in my brain. The advantage of pen and paper is that I use different muscles and brain activities when I write, which helps me think differently. I usually use them when I need to outline my blog post, if I‚Äôm stuck or distracted on something, or if I go out in nature and only bring my physical journal.\n\nAlso, when writing journals or other ideas within my second brain, I can start connecting them. Improving my thoughts over time and generally refind easily and read them, whereas, on paper, notebooks get lost over time, and finding the right things when needed is very hard.\n\nRead more on [Journaling to Find Myself Again](https://blog.foster.co/superbad-and-line-drawings-journaling-to-find-myself-again/):\n\u003e One day, DJ read some of her old journal entries and had a \"cosmic\" realization: she was in a toxic romantic relationship that she needed to get out of. She started writing to process her emotions and construct a path back to herself, her perspective, and a new beginning.\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.780556883+02:00",
    "tags": null
  },
  "/kubernetes": {
    "title": "Kubernetes - DevOps Engine",
    "content": "# Kubernetes - DevOps Engine\nIt‚Äôs a platform that allows you to run and orchestrate container workloads. [Kubernetes](https://stackoverflow.blog/2020/05/29/why-kubernetes-getting-so-popular/) has become the de-facto standard** for your cloud-native apps to (auto-)¬†[scale-out](https://stackoverflow.com/a/11715598/5246670) and deploys your open-source zoo fast, cloud-provider-independent. No lock-in here. You could use [open-shift](https://www.openshift.com)¬†or¬†[OKD](https://www.okd.io/). With the latest version, they¬†added the¬†\u003ca href=\"https://operatorhub.io/\"\u003eOperatorHub\u003c/a\u003e which you can install as of today 182 items with just a few clicks. Also, check out [[Managed Data Stacks]] which were created to mitigate exactly that.\n\nSome more reasons for Kubernetes are the **move from infrastructure as code** towards **infrastructure as data**, specifically as¬†[[YAML]]. All the resources in Kubernetes that include Pods, Configurations, Deployments, Volumes, etc., can simply be expressed in a YAML file. Developers quickly write applications that run across multiple operating environments. Costs can be reduced by scaling down (even to zero with, e.g. [Knative][63]) and also by using plain python or other programming languages instead of paying for a service on Azure, AWS, or Google Cloud. Its management makes it easy through its modularity and abstraction, also with the use of Containers ([[Docker]] or [Rocket][65]), you can monitor all your applications in one place.\n\nTo get hands-on with Kubernetes you can install [Docker Desktop](https://www.docker.com/products/docker-desktop) with Kubernetes included. All of [my examples](http://code.sspaeti.com) are built on top of it and run on any cloud as well as locally.¬†For a more sophisticated set-up in terms of Apache Spark, I suggest reading the blog post from [Data Mechanics](https://www.datamechanics.co/) about [Setting up, Managing \u0026 Monitoring Spark on Kubernetes](https://www.datamechanics.co/blog-post/setting-up-managing-monitoring-spark-on-kubernetes). If you are more of a video guy, [An introduction to Apache Spark on Kubernetes](https://youtu.be/qcvNZvFZIP4?t=31) contains the same content but adds still even on top of it.\n\nAs said above, if setting up Kubernetes is too hard, there are [[Managed Data Stacks]], where you can choose existing open-source tools to pick from.\n\n---\nReferences: [[YAML]]\n",
    "lastmodified": "2023-06-23T10:05:17.53131264+02:00",
    "tags": null
  },
  "/learning-data-engineering": {
    "title": "Learning Data Engineering",
    "content": "\nBootcamps:\n- [Pipeline Academy - Data Engineering Coding Bootcamp in Berlin](https://www.dataengineering.academy/)\n- [Data Engineering Bootcamp ‚Äì Take your data engineering career to the next level](https://dataengineercamp.com)\n- [[EcZachly Inc's Bootcamp]] by [[Zach Wilson]]\n- [Learn Data Engineering with Courses \u0026 Coaching | Learn Data](https://learndataengineering.com/) by [[Andreas Kretz]]\n\n\n---\nOrigin: \nReferences: \nCreated [[2023-05-15]]\n",
    "lastmodified": "2023-06-23T10:05:17.716146861+02:00",
    "tags": null
  },
  "/linking-your-thinking-lyt": {
    "title": "Linking Your Thinking (LYT)",
    "content": "Build a personal system to manage your knowledge: The Linking Your Thinking Workshop is an online workshop that will teach, train, and support you in building a [[Personal Knowledge Management (PKM)]] system you can trust.\n\nMade by [[Nick Milo]].\n\n---\nOrigin: [[Digital Garden]]\nReferences: https://www.linkingyourthinking.com/\nCreated [[2022-08-13]]\n",
    "lastmodified": "2023-06-23T10:05:17.52988884+02:00",
    "tags": null
  },
  "/listmonk": {
    "title": "Listmonk",
    "content": "\nSelf-hosted newsletter and mailing list manager. Performance and features packed into a single binary. Free and open source.\n\nMy new [[Newsletter]] is published with Listmonk on [list.sspaeti.com](https://list.sspaeti.com/subscription/form). So far I used [[Mailchimp]]. I also liked [[Buttondown]], unfortunately, it costs 9$ for above 100 subscribers.\n\nBy using open source Listmonk, I have the sending emails and collecting and unsubscribing from a newsletter, which I needed. But I had to deploy it myself. I used [[Railway.app]].\n\n---\nOrigin: [[Newsletter]]\nReferences: [listmonk - Free and open source self-hosted newsletter, mailing list manager, and transactional mails](https://listmonk.app/)\nCreated [[2023-04-09]]\n",
    "lastmodified": "2023-06-23T10:05:17.701930399+02:00",
    "tags": null
  },
  "/literature-notes": {
    "title": "Literature Notes",
    "content": "The second is [[Literature Notes]]. [[Niklas Luhmann]] would write them down on index cards with the bibliographic details on the back. Each of them contains the main point he didn‚Äôt want to forget or that he thought he could use in his own writing. The bibliographic details are the `üåç Wiki üìÇ Files` where my [[Reference Wiki Notes]] are stored.\n\nAhrens offers four guidelines for creating literature notes:\n- Be extremely selective in what you decide to keep\n- Keep the overall note as short as possible\n- Use your own words, instead of copying quotes verbatim\n- Write down the bibliographic details on the source.\n\nNext follows polished and written in my own words to [[Permanent Notes]].\n\n---\nOrigin: \nReferences: [[Zettelkasten]] \nCreated [[2021-10-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.548832664+02:00",
    "tags": null
  },
  "/location-independent-lifestyle": {
    "title": "Location Independent Lifestyle?",
    "content": "Firstly, what is location-independent work or a nomadic lifestyle? I would describe it as not being tied to a particular location for any reason. And why would you want this? There are several answers besides the obvious you travel the world, learn from other cultures, and meet amazing people. \n\nFor me, it is also about productivity when on the road I get into deep focus. While having a delicious coffee, I can get things done for 2-3 hours. Additionally, I get natural breaks during traveling or sightseeing in a city and use them when I get stuck. With that, I also get this awesome feeling that probably many of us perceived when having this perfect day with seeing many new things, but even managed to work a couple of hours although sometimes it is more and sometimes less.\n\nSome pictures when I was enjoying the independent lifestyle on [Today‚Äôs Office ‚Äì The Location Independent Lifestyle](https://www.sspaeti.com/blog/the-location-independent-lifestyle/).\n\n---\nOrigin: [[Today‚Äôs Office ‚Äì The Location Independent Lifestyle]]\nReferences: \nCreated [[2023-02-15]]\n",
    "lastmodified": "2023-06-23T10:05:17.736230526+02:00",
    "tags": null
  },
  "/managed-data-stacks": {
    "title": "Managed Data Stacks",
    "content": "\nManaged DevOps for your [[Modern Data Stack]], navigating around [[Kubernetes]] and Cluster management. I think of it as lego blocks, that can be stacked together.\n\n## Tools\nDifferent services or solutions that stack different open-source tools together:\n\n- [[Restack]]\n- [[Plural]]\n- [[Stackable]]\n- [[Y42]] \n- [5x](https://5x.co/)\n- [Mozart Data](https://www.mozartdata.com/)\n\nAnother list of managed Data Stacks can be found on [Managed Data Stack Modern Data Stack.xyz](https://www.moderndatastack.xyz/companies/managed-data-stack).\n\n---\nOrigin: \nReferences: \nCreated [[2022-09-09]]\n",
    "lastmodified": "2023-06-23T10:05:17.738544791+02:00",
    "tags": null
  },
  "/map-of-content-moc": {
    "title": "Map of Content (MOC)",
    "content": "As mentioned in the [[Taxonomy of note types]], the icon üó∫ indicates a Map of Content, MOC in short.\n\nThese are meant to cluster the Zettelkasten notes into more prominent clusters, connecting the more significant ideas rather than individual notes.\n\n---\nOrigin: \nReferences: \nCreated [[2022-03-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.703038655+02:00",
    "tags": null
  },
  "/markdown": {
    "title": "Markdown",
    "content": "As written by Derek [Write plain text files | Derek Sivers](https://sive.rs/plaintext) and summarised in my \n[[Personal Knowledge Management Workflow for a Deeper Life]].\n\nMarkdown has excellent features, such as [[Admonition (Call-outs)]]s. \n\n## Tools / Editors\nTools to write [[Obsidian]]-like graph networks open-sourced: [[Open-Source Obsidian Publish Alternatives]]\n\n[[Static Site Generators (SSG)]]'s:\n- [[GoHugo]]\n\nClosed Source:\n- [[Obsidian]]\n\t- Example of public [[Data Engineering]] Wiki with Obsidian: [[Data Engineering Wiki - Reddit]]\n- [[Roam]]\n- Simple: [Typora](https://typora.io/)\nCollaborative Markdown tools:\n- [[HackMD - Collaborative Markdown]]\n\n- [[Twitter]] to Markdown: [[the.rip]]\n\n## What's the Difference between Markdown and Rich Text?\nSee on [[Markdown vs Rich Text]].\n\n---\nOrigin: \nReferences: [[GoHugo]]\nCreated [[2022-06-18]]\n",
    "lastmodified": "2023-06-23T10:05:17.531888185+02:00",
    "tags": null
  },
  "/markdown-vs-rich-text": {
    "title": "Markdown vs. Rich Text",
    "content": "[[Markdown]] is getting the de facto standard for content writing. It has many excellent features such as [[Admonition (Call-outs)]], [[Mermaid]], and Drawings, all with essential text files.\n\nBut to paint the bigger picture and the¬†**critical difference between markdown and [[Rich Text]]**: Markdown stores the style inside the content (`**`=bold, `##` headings, etc.), and with rich text, it's stored within the tool (Google Docs, Webflow, etc.).\n\n![[Pasted image 20230424143659.png]]\n```mermaid\ngraph TB\nA[Google Docs] --\u003e B[Rich Text Formatting]\nA --\u003e C[Platform Lock-in]\nA --\u003e D[Limited Automation]\nA --\u003e E[Difficult Version Control]\n\nB --\u003e N[Transfer Formatting Issues]\nD --\u003e O[Manual Content Management]\n```\n\nYou never know if you will lose formatting, links, and other things when copying from another tool (Docs to Weflow or others). E.g., ChatGPT can read/write Markdown perfectly, but you'd lose formatting, links, code, etc. when copying it from Google Docs/rich text editors forth and back. Many more advantages come out of the box with markdown. \n\nAs it stores¬†_content_¬†as text/code. E.g., you can run **automation** on top of your content, such as adding a sign-up form for a newsletter, and dynamic updates based on how many categories your blog may have; you can do CI/CD before workflow before publishing. The sky is the limit.\n\nCompared to locking it into a rich text editor such as Webflow, or Google Docs, where you need to manually go in and click through 100 blog posts or Documents (if you find them) whenever you want to change something across all posts or update the content, it is hard. \n\nMarkdown has also included¬†[[Admonition (Call-outs)]] and¬†[Mermaid](https://ublogger.netlify.app/theme-documentation-extended-shortcodes/#5-mermaid)¬†(flow diagrams, charts, ...) charts, drawings ([[ExaliDraw]]); see an excellent list¬†[here](https://ublogger.netlify.app/theme-documentation-extended-shortcodes/). That's why markdown is getting the standard everywhere you look for content platforms.\n\nThere are also downsides, such as needing to be more intuitive initially. However, tools like [[Obsidian]] and others hide special characters and turn them into formattings when viewing it, storing it as markdown. This way, you get the best of both worlds.\n\n![[Pasted image 20230424143755.png]]\n```mermaid\ngraph LR\nF[Markdown] --\u003e G[Lightweight Text-based Formatting]\nF --\u003e H[No Platform Lock-in]\nF --\u003e I[Greater Automation Potential]\nF --\u003e J[Version Control with Git]\nF --\u003e K[Integration with ChatGPT]\nF --\u003e L[Intuitive Tools like Obsidian]\nF --\u003e M[Admonition, Mermaid, Drawings]\n```\n\n## Example of Markdown (Obsidian) vs. Rich Text (Google Docs)\n\n### Obsidian\nWith Obsidian based on Markdown, I have access to my [Second Brain](https://brain.sspaeti.com/) with forward/backlinks to any note or article. Integration with images, text-based diagrams with [[Mermaid]], text-based images with [[Exaclidraw]], [Canvas](https://obsidian.md/canvas). \n\nIntegration with Plugins such as [[ReadWise]] syncing my highlights and notes I read, [[Obsidian Dataview]] to use Notes as databases, [[Admonition (Call-outs)]] to write nice in-side comments without distracting the reading flow, Templates, and many [more](https://obsidian.md/plugins). \n\nEverything is based on simple text files. \n![[Rich-text-vs-markdown.png]]\n\n### Google Docs\n\n![[google-docs-editing.png]]\n- The image here is an image, where's as above its text ([[Mermaid]])\n\n\n---\nOrigin: \nReferences: \nCreated [[2023-03-28]]\n",
    "lastmodified": "2023-06-23T10:05:17.564550886+02:00",
    "tags": null
  },
  "/maxime-beauchemin": {
    "title": "Maxime Beauchemin",
    "content": "\n# Maxime Beauchemin\nCreator of [[Apache Airflow]] and [[Apache Superset]]. \n\nStarted as [[Business Intelligence]] Engineer and is working now at [[Preset]] (Superset as a Service).\n\nStarter of [[idempotency]] and [[Functional Data Engineering]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-07]]\n",
    "lastmodified": "2023-06-23T10:05:17.633314351+02:00",
    "tags": null
  },
  "/microsoft-fabric": {
    "title": "Microsoft Fabric",
    "content": "New announcement [[2023-05-23]] about the single place of MS; it's like a [[Databricks]] replica, except for the tools in [[Azure]] without needing to go into Azure (see more below). See the announcement [Introducing Microsoft Fabric and Copilot in Microsoft Power BI](https://powerbi.microsoft.com/en-us/blog/introducing-microsoft-fabric-and-copilot-in-microsoft-power-bi/).\n\nThey also announced the integration into git for some Power BI artifacts ([[Introduction to git integration]]). But it's not there yet as they exclude most of the things. It will probably take a long time until they are ready, as usually, MS products have lots of visuals inside the files as well (same as in the [[SSAS]] builder where all is XML with lots of IDs)\n\n## Features\n*[Can cross-cloud data analytics be easy? | Microsoft Fabric - YouTube](https://youtu.be/oxMUJT3p9f4)*\n\n![[Pasted image 20230524085034.png]]\n\nThese features are possible due to an open [[Data Lake Table Format]] like [[Delta Lake]], which they packaged into [[MS OneLake]], with more security and integration (lineage, etc.) on top of it. Similar to what Databricks is doing with notebooks and [[Data Lakehouse|Lakehouse]].\n![[Pasted image 20230524085125.png]]\n\nYou can combine different Query languages and computes. I know they use spark under the hood to wrap up, but for T-SQL, they might use a serverless SQL server, or Analysis Services, depending on what you need.\n![[Pasted image 20230524085527.png]]\n\n\n### Comments Simon Whiteley Video\n*See more from [[Simon Whiteley]] on [Advancing Fabric - What is Microsoft Fabric? - YouTube](https://youtu.be/LkjRy2HRrks).*\n\nSome comments and notes:\n- it's a sass service on top of Synapse, power Bi and more integrated with a new name, which is fabric\n- what is different is the communication: They talk about Fabric the same way they talk about [[Excel|MS Excel]].\n- Spark in [[MS Synapse]] is now called [[Synapse Data Engineering]]\n\n![[Pasted image 20230524095340.png]]\n\n- His comment: it looks all nice: but will it be seamlessly integrated?\n\t- In synapse everything was stored in different formats, a little SQL, a little delta, etc. The fantastic news is, that in Fabric, everything is [[Delta Lake]]!\n\t\t- even if you write [[T-SQL]] and store the table, that will be a delta table.\n\n\u003e ![[Pasted image 20230524095355.png]]\n\n- There is no Azure, there is only SQL, Delta, and Spark. If logging into Fabric, you log into Power BI. It's a software as a service, not AZURE. Wow!\n\n![[Pasted image 20230524094900.png]]\n\n## Lakehouse reference\n\nMicrosoft Fabric is basically a [[Data Lakehouse|Lakehouse]] implementation by Microsoft. Others who have their own are Databricks with Delta, and [[Onehouse]] has theirs with Hudi calling it [[OneTable]]. [[Dremio]] is also building one on Iceberg, and Snowflake is getting more open with Apache Iceberg.\n\n\n## Declarative Metrics or Business Logic\n\u003e [!question]\n\u003e\n\u003e I wonder, where is the business logic stored within Power BI, or is there a [[Semantic Layer]]? --\u003e [Tweet](https://twitter.com/sspaeti/status/1661266300939763714)\n\n\u003e [[Simon Whiteley]]: \n\u003e Yeah, that'll be your Power BI models most likely. You could have logical layers in either Lakehouse or Warehouse artifacts, but your metrics will be Power BI measures directly on top of the Delta Table objects.\n\n[[Thomas Gremm]] on [LinkedIn](https://www.linkedin.com/feed/update/urn:li:ugcPost:7066802138902867968?commentUrn=urn%3Ali%3Acomment%3A%28ugcPost%3A7066802138902867968%2C7067025345438183425%29\u0026replyUrn=urn%3Ali%3Acomment%3A%28ugcPost%3A7066802138902867968%2C7067058143784001537%29\u0026dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287067025345438183425%2Curn%3Ali%3AugcPost%3A7066802138902867968%29\u0026dashReplyUrn=urn%3Ali%3Afsd_comment%3A%287067058143784001537%2Curn%3Ali%3AugcPost%3A7066802138902867968%29):\n\u003e Mostly, in the transformations of the ETL/ELT jobs/dataflows/pipelines between the Delta tables, similar like in the [[Medallion Architecture]] known on the Databricks side.\n\u003e The business logic spreads over certain products (Factory, Data Engineering, Synapse DWH etc.) in certain code (Spark, T-SQL, KQL)\n\u003e \n\u003e You can also put business logic into PowerBI data models (like DAX measures, calculation groups etc.), but then it should be handled like a Data mart.\n\u003e \n\u003e The truth should be persisted in the Delta tables (with Parquet as underlying), which is analogous to the Gold layer in the Medallion architecture in Databrick's logic (=the well-structured business presentation layer).\n\nMaybe [[Tabular Model Definition Language (TMDL)]] is any good, it's human readable.\n\n---\nOrigin: \nReferences: [Power BI](https://fabric.microsoft.com/)\nCreated [[2023-05-24]]\n",
    "lastmodified": "2023-06-23T10:05:17.741796644+02:00",
    "tags": null
  },
  "/minimalism": {
    "title": "Minimalism",
    "content": "A lifestyle I admire. Not really crazy to have only 15 items or so, but that is before you buy something that you need to sell. Or that you have more money to buy quality things that you enjoy and use more instead of buying new things all the time.\n\nThe essence of minimalism is:\n\u003e How might your life be better with less?\n\nSee more on my recent article about minimalism: [[Personal Knowledge Management Workflow for a Deeper Life#How it started Minimalism]]\n\nRelated is also [[Minimalism Visualizations]] or [[Digital Minimalism]].\n\n---\nOrigin: [Minimalism: A Documentary About the Important Things (2015) - IMDb](https://www.imdb.com/title/tt3810760/) \nReferences: \nCreated \n",
    "lastmodified": "2023-06-23T10:05:17.534319617+02:00",
    "tags": null
  },
  "/ms-onelake": {
    "title": "MS OneLake",
    "content": "\n# MS OneLake\n\nAnnounced with [[Microsoft Fabric]] [[2023-05-23]] and it's basically a wrapper around [[Delta Lake]] (for now). But they can also read from different Cloud providers such as AWS or Azure.\n\nSee some more in [[Microsoft Fabric#Features]].\n\n---\nOrigin: [Can cross-cloud data analytics be easy? | Microsoft Fabric - YouTube](https://youtu.be/oxMUJT3p9f4)\nReferences: \nCreated [[2023-05-24]]\n",
    "lastmodified": "2023-06-23T10:05:17.700779017+02:00",
    "tags": null
  },
  "/neovim": {
    "title": "Neovim",
    "content": "Text editor evolved from the old [[vim]]. People call it not [[IDE]], such as [[VSCode]] or similar, but [[PDE (Personalized Development Environment)]].\n\nI use Neovim with [[Tmux]] for everything I can. I have mentioned it in [[Personal Knowledge Management Workflow for a Deeper Life]], how it gives me clarity for writing, especially [[Vim Language (and Motions)]], a modular way of editing text that came with vim but can be found through plugins on any other IDE as well.\n\nSee also [Why Vim Is More than Just an Editor ‚Äì Vim Language, Motions, and Modes Explained |](https://www.sspaeti.com/blog/why-using-neovim-data-engineer-and-writer-2023/), where I wrote 3000 words about why I still use Neovim in the modern world of editors.\n\n---\nOrigin: \nReferences: \nCreated [[2023-04-10]]\n",
    "lastmodified": "2023-06-23T10:05:17.731927083+02:00",
    "tags": null
  },
  "/new-tabs-in-obsidian-with-version-1.0": {
    "title": "New Tabs in Obsidian with version 1.0",
    "content": "\n[Obsidian 1.0](https://forum.obsidian.md/t/obsidian-release-v1-0-0/44873) was released this week ([[2022-10-15]]). \n\nThe `Sliding Panes (Andy Matuschak Mode)` plugin is now a core of Obsidian and is called `Stacked Tabs`.\n\nBesides panes, we also got `tabs`. Tabs are like a tab in [[vim]] that can hold several panes (buffers in vim). This allows me to stack a tab (maybe the one I'm writing in) and the tab with many panes for reference. Tabs can also be stacked below and above, making them more flexible.\n\nThe design is much slicker, and it is faster. It all together looks and feels good and stable.\n\nHere is an example of how it looks with my own Kanagawa Design:\n![[Pasted image 20221015195254.png]]\n\nThe zoom level has been arranged, and the unlinked and linked backlinks are now in line with the zoom (it was something that was off before).\n\n---\nOrigin: \nReferences: \nCreated [[2022-10-15]]\n",
    "lastmodified": "2023-06-23T10:05:17.716839365+02:00",
    "tags": null
  },
  "/newsletter": {
    "title": "Newsletter SELECT Insights",
    "content": "\n## About this Newsletter\n\nWelcome to SELECT Insights, your curated and `DISTINCT` üòâ gateway into the data ecosystem and the thought-provoking ideas that I'm currently exploring.\n\nWhy subscribe? *[--\u003e Subscribe here \u003c--](https://subscribe.sspaeti.com/)*\n\n\u003c!-- \u003cform method=\"post\" action=\"https://list.sspaeti.com/subscription/form\" class=\"listmonk-form\"\u003e --\u003e\n\u003c!--     \u003cdiv\u003e --\u003e\n\u003c!--         \u003cinput type=\"hidden\" name=\"nonce\" /\u003e --\u003e\n\u003c!--         \u003cinput type=\"email\" name=\"email\" required placeholder=\"Subscribe: Add your email here.\" size=\"32\" id=\"mce-EMAIL\" /\u003e --\u003e\n\u003c!--         \u003cinput id=\"4625c\" type=\"hidden\" name=\"l\" checked value=\"4625c037-fda8-45f7-9a66-47d765c6562b\"/\u003e --\u003e\n\u003c!--         \u003cinput type=\"submit\" value=\"Subscribe\" /\u003e --\u003e\n\u003c!--     \u003c/div\u003e --\u003e\n\u003c!-- \u003c/form\u003e --\u003e\n\nMy mission is to distill the most relevant content into digestible, unique insights delivered straight to your inbox.\n\nHere's a preview of what you can expect:\n-   **SELECT Topic**: I kick things off with a thought-provoking topic, ranging from the intricacies of data engineering to the fascinating charm of everyday life experiences.\n-   **UPDATE Engineering**: In this section, I'll share the latest in data engineering tools, techniques, and coding snippets, ensuring you stay abreast of the exciting shifts in this landscape.\n-   **JOIN Perspectives**: This section is a melting pot of my blogging journey, inspiring reads, stimulating discussions, and personal anecdotes. It's where nerdy interests like neovim, dotfiles, and coding intersect with broader perspectives.\n-   **FETCH Socials**: In this segment, I handpick the cream of the crop from the social media landscape, delivering engaging content across a diverse range of topics.\n-   **SCAN Books**: Here, I'll share insights from my latest reads, spanning various genres and subject matters, offering you the opportunity to discover new horizons through the power of the written word.\n\nI deeply value your time and your inbox. That's why SELECT Insights is designed to be inspirational, fresh, and succinct. Does it sound intriguing? Subscribe above.\n\n\u003e [!note] SELECT Insights\n\u003e \n\u003e The name is a playful nod to SQL, underlining my commitment to curating the most engaging and valuable content from the ever-expanding sea of news and information.\n\nBelow you will find the summary of previeously sent Newsletter and link to each of them.\n\n---\n\n## June Edition\n\nRead: [[SELECT Insights - Bundling with Microsoft Fabric and Orchestration]]\n\n\u003e Data Orchestration is increasingly significant in the data engineering ecosystem. Despite its importance, there's a concerning trend of orchestrator unbundling across multiple tools, causing fragmentation. Key developments include Dagster's $33 million Series B funding and Microsoft's launch of Microsoft Fabric. \n\u003e Microsoft provides robust no-code solutions but lacks an open-source orchestrator‚Äîa gap potentially filled by the Open Data Stack. \n\u003e Discussions at Stephen Bailey's Symposium suggest orchestrators need to emphasize speed, simplicity, data ingestion, actions, integration, and controlled chaos. Data Engineering should be viewed as a collaborative field, not a single job role.\n\n## April Edition\nDive in to read the full update on [[April Newsletter 2023]].\n\n\u003e Welcome to the first-ever newsletter ‚Äì a uniquely curated blend of topics and updates. This edition serves as a mixed bag of the latest from my Second Brain, recent strides in data engineering, nuggets on writing and Markdown, as well as a peek into the geeky world of coding with neovim, dotfiles, and more. We'll also meander through interesting life happenings and dive into some engaging books that have enriched my recent readings.\n\n\n\n",
    "lastmodified": "2023-06-23T10:05:17.682619238+02:00",
    "tags": null
  },
  "/niklas-luhmann": {
    "title": "Niklas Luhmann",
    "content": "Creator of [[Zettelkasten]]. Lots about him in [[Smart Note Taking]]\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-14]]\n",
    "lastmodified": "2023-06-23T10:05:17.630285416+02:00",
    "tags": null
  },
  "/note-taking-app": {
    "title": "Note Taking App / Tool",
    "content": "\nAs of [[2022-10-14]]:\n![[Pasted image 20221014142213.png]]\n\n## Tools:\n- [[Obsidian]]\n- [[Notion]]\n- [[Tana]]\n- [[OneNote]]\n- [Logseq](https://logseq.com/)\n- [Capacities](https://capacities.io/)\n- [[Roam]]\n- [[Evernote]]\n- [[Joplin]]\n- [[Google Keep]]\n- [[Milanote]]\n- [[Neovim]] // [[vim]] // Terminal solutions\n\t- [[Brain- A Zettelkasten software for terminal users]]\n\t- Zettelkasten with vim: [GitHub - renerocksai/telekasten.nvim](https://github.com/renerocksai/telekasten.nvim)I\n\t- [zk: A plain text note-taking assistant](https://github.com/mickael-menu/zk)\t\n\t- [[VimWiki]] addon for managing notes \n\n---\nOrigin: [https://twitter.com/fortelabs/status/1579232715299205120/photo/1](https://twitter.com/fortelabs/status/1579232715299205120/photo/1)\nReferences: \nCreated [[2022-10-14]]\n",
    "lastmodified": "2023-06-23T10:05:17.747668055+02:00",
    "tags": null
  },
  "/notebooks": {
    "title": "Use notebooks to open up the data silos",
    "content": "Data Notebooks popularized by Jupyter Notebooks are the centralized [[IDE]] inside a browser for doing collaborative work.\n\nSome notebooks that exist today in different evolutions:\n1. Notebooks that are popularized and in heavy use today.\n\t- [[Jupyter Notebook]] / JupyterHub\n\t\t- Automation on top of Jupyter notebooks: [[Naas]]\n\t- [[Zeppelin]]\n\t- [[Databricks Notebook]]\n- Newer versions of Jupyter Notebooks with more integrated features and powerful cloud behind\n\t- [[Deepnote]] \n\t- [[Hex 2.0]] \n\t- [[replit]]\n\t- [[Mage AI]]\n\t- [[Count.co]]\n\t- [[Enso - Insights for Data Science]]\n - [[Spreadsheets]] (new category and more similar to notebooks as they can run python and JS inside cells as well)\n\nWith **notebooks** **everyone has access to the data, can explore and write analytics with all the advanced statistical and data science libraries**. It's straightforward to set-up, no need to install a local environment or [IDE][37], it works with your browser of choice. You can spread your visualisations by quickly sharing a link. You can also work together in the same notebook. With integrated markdowns, you explain the whole story and thought-process behind the numbers to people naturally.\n\n**The** **downside of notebooks is that your code will be duplicated and scattered around the place**. A little bit like everyone having their own [[Excel]]s, everyone will start their own notebooks (but of course different data-wise, as the data is stored centrally). I suggest you set strict and clear rules or governance around the notebooks and starting to integrating stable notebooks into your common data pipelines.\n\nFor a fast and smooth transition, you should have a look at [[Papermill]] which allows you to parameterise, execute and analyse notebooks. Even **a step further is to use [[Dagster]] and either use the notebooks as a step of your pipeline** (dagster integrates with papermill) **or incorporate it into your pipeline fully** with dedicated [solids][40]. This way, you avoid code duplication and reusing solids.\n\nSee also [[Machine Learning part ‚Äì Jupyter Notebook]].\n\n## Orchestrating\nNotebooks can be orchestrated with [[Papermill]] (included in [[Dagster]]), or newer tools such as [[orchest.io]] and others([[Data Orchestrators]].\n\n [35]: https://zeppelin.apache.org/\n [36]: https://docs.databricks.com/notebooks/index.html\n [37]: https://en.wikipedia.org/wiki/Integrated_development_environment\n [40]: https://docs.dagster.io/concepts/solids-pipelines/solids\n\n---\nOrigin: [‚ÄúUse notebooks to open up the data silos.‚Äù](https://www.sspaeti.com/blog/business-intelligence-meets-data-engineering/#8220use-notebooks-to-open-up-the-data-silos8221),  [Machine Learning part ‚Äì Jupyter Notebook](https://www.sspaeti.com/blog/data-engineering-project-in-twenty-minutes/#machine-learning-part--jupyter-notebook)\nReferences: [[Dagster]] [[Jupyter Notebook]] [[Databricks]] \nCreated [[2023-02-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.549847379+02:00",
    "tags": null
  },
  "/obsidian": {
    "title": "Obsidian",
    "content": "# Obsidian\n[Obsidian](https://obsidian.md/) is a [[Second Brain]] and note taking app. It is a powerful and extensible knowledge base that works on top of your local folder of plain text files.\n\nObsidian is a wrapper around your folders and Markdown files, including one single folder called¬†`.obsidian`¬†in your root. That‚Äôs it! In case you like to use another editor such as¬†[[vim]],¬†[[VSCode]]¬†or just any other¬†[Text Editor](https://en.wikipedia.org/wiki/List_of_text_editors)¬†you might have, open all your files individually. Or, in case you want to open all notes in one go, use open Obsidian.\n\n## Price and Features\n\nLet‚Äôs get this out of the way, Obsidian is entirely free! You can add two¬†[paid features](https://obsidian.md/pricing), 1. if you want to use their integrated sync tool or 2. if you want to share your notes, including the fancy graph and outline view.\n\nBut yeah, as it is plain text stored on your hard drive, you can use Dropbox, Google Drive or any other sync tool! As I‚Äôm using¬†[Sync.com](https://www.sync.com/)¬†with end-to-end encryption for all my files, it does not work nicely on my mobile. That‚Äôs why I added Obsidian Sync. I could have added it to Dropbox, but I didn‚Äôt want to give them my most private notes.\n\nIf you want to check out all the other features, see the complete list at¬†[Obsidian.md](https://obsidian.md/)¬†or find more customisation with¬†[25 core](https://help.obsidian.md/Plugins/List+of+plugins)¬†and¬†[329 community plugins](https://obsidian.md/plugins), 60+ themes, plus custom styling, you can tweak Obsidian to work and look exactly how you want it.\n\nSome community plugins do a single thing extremely well, like¬†[Calendar](https://github.com/liamcain/obsidian-calendar-plugin)¬†and¬†[Kanban](https://github.com/mgmeyers/obsidian-kanban). Others unlock endless possibilities:¬†[Dataview](https://github.com/blacksmithgu/obsidian-dataview)¬†and¬†[Templater](https://github.com/SilentVoid13/Templater)¬†are great examples.\n\nSee more on [How to Take Notes in 2021? |](https://www.sspaeti.com/blog/how-to-take-notes-in-2021/).\n\n## [[Why Obsidian]]\n\n## Plugins\n- [[Obsidian Dataview]]\n- [[Obsidian Canvas]]\n- [[Obsidian Plugins]]\n- [[Obsidian Hotkeys]]\n\nsuper explainer:\n- [Optimal Note Taking Framework for all subjects using Obsidian - YouTube](https://youtu.be/LyOIvoHtRCM)\n---\nOrigin: \nReferences: [[Second Brain]]\nCreated \n",
    "lastmodified": "2023-06-23T10:05:17.514588579+02:00",
    "tags": null
  },
  "/on-writing": {
    "title": "On Writing",
    "content": "Write the lessons learned. The mesmerizing content is the content shared, whether there is a return or not. \n\nYou can either buy someone's attention, or you can earn it. If you earn it, it's vastly deeper. You put good stuff out to the cosmos; usually, it will return good stuff. [[The more you share the more you get]]\n \nSharing what you learn it's a source of energy, not hard work you want to avoid. \n \nAs an old saying goes, if you want to learn something, you should try teaching it. \n\n---\nOrigin: [[Out-Teach Your Competition]]\nReferences: [[Writing]]\nCreated [[2022-11-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.682881115+02:00",
    "tags": null
  },
  "/onetable": {
    "title": "OneTable",
    "content": "\nToday [[2023-02-02]] [[Onehouse]] announced Onetable. Onehouse customers can now query their [[Apache Hudi]] tables as [[Delta Lake]]  and [[Apache Iceberg]] unlocking native accelerations \u0026 advanced features inside Databricks and snowflake.\n\nMore on [Announcing Onetable](https://www.onehouse.ai/blog/onetable-hudi-delta-iceberg).\n\n## Summary\n\nOnehouse customers can now query their Hudi tables as an Apache Iceberg and/or Delta Lake table unlocking native performance optimizations from popular cloud query engines to cutting edge open source projects.\n\nAt the base of a data platform's hierarchy of needs sits the fundamental need to ingest, store, manage, and transform data. Onehouse provides this foundational data infrastructure as a service to ingest and manage data in our customers lakes. As these data lakes continue to grow in terms of size and variety within an organization, it becomes imperative to decouple your foundational data infrastructure and compute engines that process data. Different teams can leverage specialized compute frameworks, e.g. Apache Flink (Stream Processing), Ray (Machine Learning), or Dask (Python data processing), to solve the problems important to their organization. Decoupling allows developers to use one or more of these frameworks on a single instance of their data stored in an open format without the tedium of copying it into another service where compute and storage are tightly coupled. Apache Hudi, Apache Iceberg, and Delta Lake have emerged as the leading open-source projects providing this decoupled storage layer with a powerful set of primitives that provide transaction and metadata (popularly referred to as table formats) layers in cloud storage, around open file formats like Apache Parquet.\n\n---\nOrigin: [https://twitter.com/semanticbeeng/status/1661277942490513409](https://twitter.com/semanticbeeng/status/1661277942490513409)\nReferences: \nCreated [[2023-05-24]]\n",
    "lastmodified": "2023-06-23T10:05:17.692701133+02:00",
    "tags": null
  },
  "/open-source-data-engineering-projects": {
    "title": "Open-Source Data Engineering Projects",
    "content": "\nThis note is for data engineers and developers. Here are some open-source data engineering projects that you can explore:\n\n## My Projects\n- [Real estate dagster pipeline](https://github.com/sspaeti-com/practical-data-engineering): A practical data engineering project for processing real estate data. Accompanied by a blog article: [Building a Data Engineering Project in 20 Minutes](https://www.sspaeti.com/blog/data-engineering-project-in-twenty-minutes/).\n- [Open Data Stack Projects](https://github.com/airbytehq/open-data-stack/): Examples of end-to-end data engineering projects using the [[Open Data Stack]] (e.g. [dbt, Airbyte, Dagster, Metabase/Rill](https://airbyte.com/tutorials/configure-airbyte-with-python-dagster)).\n- [Airbyte Monitoring with dbt and Metabase](https://airbyte.com/blog/airbyte-monitoring-with-dbt-and-metabase): Monitoring Airbyte with dbt and Metabase. The relevant GitHub link can be found [here](https://github.com/airbytehq/open-data-stack/blob/main/visualization/metabase/metabase.db.mv.db).\n\n## Other Projects\n- [ELT with Dagster](https://github.com/kotekaman/elt-with-dagster): An ELT (Extract, Load, Transform) project using Dagster.\n- [Data Engineering Project for Beginners - Batch edition](https://www.startdataengineering.com/post/data-engineering-project-for-beginners-batch-edition/): A beginner-friendly data engineering project focusing on batch processing.\n- [HashtagCashtag](https://github.com/shafiab/HashtagCashtag): A project related to analyzing hashtags and cashtags.\n- [Github Data Analytics](https://hoffa.medium.com/400-000-github-repositories-1-billion-files-14-terabytes-of-code-spaces-or-tabs-7cfe0b5dd7fd#.qm2s97y25): Analyzing GitHub repositories with a large amount of code.\n- [Crawling For Inflation](https://hoffa.medium.com/400-000-github-repositories-1-billion-files-14-terabytes-of-code-spaces-or-tabs-7cfe0b5dd7fd#.qm2s97y25): A project focused on crawling data for analyzing inflation.\n- [Data Engineer Roadmaps as Projects Funnel](https://github.com/mehd-io/de-roadmap-projects-funnel) by [[Mehdi Ouazza]]: Roadmaps for data engineers presented as projects.\n- [New Generation Opensource Data Stack Demo](https://github.com/zsvoboda/ngods-stocks): A demonstration of the new generation open-source data stack using Iceberg, Spark, Trino, and Dagster. Accompanied by an article: [Modern, open-source data stack demo](https://blog.devgenius.io/modern-data-stack-demo-5d75dcdfba50), calling the modern data stack [[ngods (new generation open-source data stack)]].\n- [RustCheatersDataPipeline](https://github.com/jacob1421/RustCheatersDataPipeline): A data pipeline that scrapes Rust cheater Steam profiles.\n- [Monte Carlo simulation of the NBA season](https://github.com/matsonj/nba-monte-carlo): A project leveraging meltano, dbt, duckdb, and superset to simulate the NBA season. Accompanied by a blog article: [Modern Data Stack in a Box with DuckDB](https://duckdb.org/2023/10/12/modern-data-stack-in-a-box.html).\n- [Tinkering around with a bunch of open source data tools](https://github.com/davidgasquez/open-source-data-stack): Exploring various open-source data tools.\n- [Build a poor man‚Äôs data lake from scratch with DuckDB](https://dagster.io/blog/duckdb-data-lake#-the-limitations-of-duckdb): A tutorial on building a data lake from scratch using DuckDB.\n- [Repo for orienting dbt users to the Dagster asset framework](https://github.com/stkbailey/dagster-jaffle-shop): A repository to introduce dbt users to the Dagster asset framework.\n- [Stock Market Real-Time Data Analysis Using Kafka](https://youtu.be/KerNf0NANMo): An end-to-end data engineering project utilizing Kafka for real-time stock market data analysis. Accompanied by the GitHub repository: [stock-market-kafka-data-engineering-project](https://github.com/darshilparmar/stock-market-kafka-data-engineering-project).\n- [LinkedIn post](https://www.linkedin.com/feed/update/activity:7012604955215740928): A LinkedIn post related to data engineering projects.\n- [Building blocks for Apache Airflow](https://registry.astronomer.io/): A collection of building blocks for [[Apache Airflow]] available in the Astronomer Registry.\n- [Example end-to-end data engineering project](https://github.com/damklis/DataEngineeringProject): An example project showcasing end-to-end data engineering.\n- [Fake Star Detector](https://github.com/dagster-io/fake-star-detector): A project utilizing Dagster to detect fake stars.\n- [Demo data stack using Dagster, Airbyte, and dbt](https://github.com/cogitovirus/gcs-modern-data-stack): A demo data stack using Dagster, Airbyte, and dbt.\n- [Data Engineering Practice Problems](https://github.com/danielbeach/data-engineering-practice): Practice problems for data engineering.\n- [News ETL CAPSTONE project for Data Engineering Bootcamp](https://github.com/mddan/news_etl): A news ETL (Extract, Transform, Load) project serving as a capstone project for a Data Engineering Bootcamp.\n- [Shopify ETL](https://github.com/VincentFaust/willowsspoon): An ETL project specifically designed for Shopify.\n\n## GitHub Lists\n- [DE projects](https://github.com/stars/sspaeti/lists/de-projects): A curated list of data engineering projects by [sspaeti](https://github.com/sspaeti/).\n- [Awesome List of Open-Source Data Engineering Projects](https://github.com/gunnarmorling/awesome-opensource-data-engineering): An awesome list of open-source data engineering projects by Gunnar Morling.\n\n## Platforms or Framework\n- [YETL](https://github.com/sibytes/yetl): Yet Another (Spark) ETL Framework.\n- [Bridge Four ](https://github.com/chollinger93/bridgefour): A a simple, functional, effectful, single-leader, multi-worker, distributed compute system optimized for embarrassingly parallel workloads.\n \n## Articles\n- [Big Data Pipeline Recipe](https://itnext.io/big-data-pipeline-recipe-c416c1782908?gi=435c23ba2b6c): A recipe for building big data pipelines.\n\n## Youtube\n- [5 Data Engineering Projects Ideas To Put On Your Resume](https://www.youtube.com/watch?v=385mKftVr3I\u0026ab_channel=SeattleDataGuy): A video suggesting five data engineering project ideas that can enhance your resume.\n- [How To Start A Data Engineering Project - With Data Engineering Project Ideas](https://www.youtube.com/watch?v=WpN47Jddo7I\u0026ab_channel=SeattleDataGuy): A video guide on how to start a data engineering project along with project ideas.\n\n## Bootcamps\n\nRefer to the article on [[Learning Data Engineering]] for information on relevant bootcamps.\n\nFor additional resources, check out [[Find good Data Sets or Sources]] and [[Open-Source ML Projects]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-02]]\n",
    "lastmodified": "2023-06-23T10:05:17.559531605+02:00",
    "tags": null
  },
  "/open-source-obsidian-publish-alternatives": {
    "title": "Open-Source Obsidian Publish Alternatives",
    "content": "\nAs [[Obsidian]] Publish is great but expensive, I'm interested in an open-source solution that I can integrate into my blog.\n\nHere are some examples:\n**- [[Quartz - Publish Obsidian Vault]] (seem to be the best with [[GoHugo]] integration!)**\n- [[Obsidian Digital Garden]]\n- [[Mindstone]]\n- [[Foam VSCode Extension|Foam VSCode Extension]]\n- Free Obsidian Plugin that can share directly [obsius-obsidian-plugin: Easily publish notes to the web](https://github.com/jonstodle/obsius-obsidian-plugin)\n- [[Graph Share]]\n- [pubsidian](https://github.com/yoursamlan/pubsidian)\n\nGood combination with a Glossary entry page such as shown here by Secoda: [75+ Data Terms: Modern Data Definitions Glossary](https://www.secoda.co/glossary).\n\nI implemented my [[Public Second Brain with Quartz]] on [brain.sspaeti.com](https://brain.sspaeti.com).\n\n---\nOrigin: \nReferences: [[Zettelkasten]]\nCreated [[2022-05-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.733609219+02:00",
    "tags": null
  },
  "/open-subscription-platforms": {
    "title": "Open Subscription Platforms",
    "content": "\nHere you see all platforms that exists as open:  **[Open Subscription Platforms](https://opensubscriptionplatforms.com/)**, and which one are not.\n- [[Substack]]\n- [[Ghost]]\n- [[Medium]]\n- [[Buttondown]] for Emails only\n- [Hashnode](https://hashnode.com/)\n- many more\n\nOthers, self-made are [[Static Site Generators (SSG)]], e.g. [[GoHugo]] where I build my second brain and website.\n\n---\nOrigin: [[Building an Independent Creator Business with Subscriptions]]\nReferences: \nCreated [[2023-02-14]]\n",
    "lastmodified": "2023-06-23T10:05:17.713694763+02:00",
    "tags": null
  },
  "/other-public-second-brains": {
    "title": "Other Public Second Brains",
    "content": "Besides what a [[Second Brain]] is and my [[Public Second Brain with Quartz]].\n\nHere are some other good ones:\n- [Andy Matuschak](https://notes.andymatuschak.org/)\n- [Strikingloo - Luciano Strika](https://strikingloo.github.io/wiki/)\n- [David Gasquez](https://publish.obsidian.md/davidgasquez)\n- [Brandon Boswell](https://brandonkboswell.com/)\n- [jzhao.xyz](https://jzhao.xyz/) (Founder of [[Quartz - Publish Obsidian Vault]])\n- [Neocortex - Yigit Colakoglu](https://wiki.yigit.run/) \n- [Eat Sleep Data](https://eatsleepdata.com/)\n- [Fulcra - Ryan J. A. Murphy](https://fulcra.design/)\n- [Pelayo Arbu√©s](https://pelayoarbues.github.io/)\n- [Data Glossary üß†](https://glossary.airbyte.com/)\n- [Dr. Mario's üß†](https://brain.drmario.tech/pages/About-EN)\n- [TfT Hacker](https://tfthacker.com/)\n- [The Integral Guide to Well-Being](https://integralguide.com/)\n- [Swyx's Second Brain](https://publish.obsidian.md/swyx/README)\n- [mnml's vault](https://publish.obsidian.md/manuel/)\n- [Fork My Brain](https://notes.nicolevanderhoeven.com)\n\n\n\nCollective lists:\n- [Quartz Showcases](https://quartz.jzhao.xyz/notes/showcase/)\n- [Personal Handbooks - David Gasquez](https://publish.obsidian.md/davidgasquez/Personal+Handbooks)\n\n---\nOrigin: \nReferences: \nCreated [[2022-09-24]]\n",
    "lastmodified": "2023-06-23T10:05:17.68949103+02:00",
    "tags": null
  },
  "/out-teach-your-competition": {
    "title": "Out-Teach Your Competition",
    "content": "\nSparked [[On Writing]] .\n\n## Notes\n- we don't share when others don't have something to learn from\n\t- It's vastly different if you share something people learn, or if you put out because you need to. See [[Out-Teach Your Competition]].\n\t- you have two option: either j\n\t- David shares that the philosophy of out-teaching the competition is in their DNA. \n- most bigger unicor companies, their approaches doesn;t apply to many companies.  \n\t- But what Basecamp share is reaching many more as theres just more comapnies that can relay to what they are sayin ‚Äî basically in the same shoes\n- basically they love sharing it eventough it's not perfect. it's [[Learn in Public]]\n- they don't like *content marketing*. Because they have to push stuff on a schedule. Basecamp don't share if they don't have anything to say\n\t- also sometimes people listeing to [[David Heinemeier Hansson (DHH)]] and [[Jason Fried]] and sign up 10 years later. How can you justify this? That applies a lot to how we write ([[Writing]]) at [[Airbyte]]. \n\t- Why you won‚Äôt normally find the 'good stuff' in content marketing.\n- You can either buy someone's attention or you can earn it. [[David Heinemeier Hansson (DHH)]]\n\t- Now, on the bigger point though, this is actually good for business in the sense that you can **either buy someone's attention or you can earn it**.\n\t- ... it's just so much deeper.\n\t- you put good stuff to the universe \n\t- it's a source of engergy\n\t\t- And I would do it whether there was a return or not a return.\n\t- old adage that if you really wanna learn something, you should try teaching it\n\t- [[Sharing is caring]]\n\t\n---\nOrigin: [Out-Teach Your Competition - Rework (podcast) | Listen Notes](https://www.listennotes.com/podcasts/rework/out-teach-your-competition-NPQFeGgXS-i/)\nReferences: \nCreated [[2022-11-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.717130492+02:00",
    "tags": null
  },
  "/pathless-path": {
    "title": "Pathless Path",
    "content": "Pathless Path is from the book [[The Pathless Path (Paul Millerd)]].\n\nThe [[Pathless Path]] is experimenting on your own to find a life you want to live vs. ‚Äúgetting ahead‚Äù on a script others follow ‚Äì¬†**embracing uncertainty \u0026 discomfort**. Whereas the opposite, the [[Default Path]] follows the planning/conforming path.\n\nThe book and the term Pathless Path inspired me to write my own story about my life, [Finding My Pathless Path](https://www.sspaeti.com/blog/finding-my-pathless-path/).\n\n\u003e [!NOTE] I went out of comfort early on [My Pathless Path](https://www.sspaeti.com/blog/finding-my-pathless-path/)\n\u003e - worked on been (instead of everyone on SO)\n\u003e - applied for a job there\n\u003e - went to Australia for 15 weeks by myself\n\u003e - lived by myself 22? opposed in a WG as everyone else\n\u003e - after 4 years get again out of comfort being a consultant 4 years\n\u003e - doing a study on the side while working as a consultant 90%\n\u003e - after going to a foreign country, living there by myself\n\u003e - applying for a job in English\n\u003e - changing job to be a writer and 100% remote\n\n\n---\nOrigin: \nReferences: \nCreated [[2023-02-26]]\n",
    "lastmodified": "2023-06-23T10:05:17.722247732+02:00",
    "tags": null
  },
  "/pde-personalized-development-environment": {
    "title": "PDE (Personalized Development Environment)",
    "content": "It's a term that [[TJDeVries]] brought up with [[Neovim]] instead of only measuring speed. And also because [[IDE]] is not the right word as [[vim]] is not really an IDE. [[Neovim]] is a text editor but can do much more, even more than [[VSCode]] in certain use cases with [[LSP (Language Server Protocol)]] and [[Treesitter]].\n\n---\nOrigin: [PDE: A different take on editing code - YouTube](https://youtu.be/QMVIJhC9Veg)\nReferences: \nCreated [[2022-08-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.544332762+02:00",
    "tags": null
  },
  "/people-of-data-engineering": {
    "title": "People of Data Engineering",
    "content": "\nA list of the people of [[Data Engineering]].\n\n* **[[Dipankar Mazumdar]]**: Dremio - Apache Iceberg\n* **[[Maxime Beauchemin]]**: Father of Data Engineering\n* **[[Mehdi Ouazza]]**: Awesome written content, also now on YouTube. Creator of [Data Creators Club](https://datacreators.club/).\n* **[[Benjamin Rogojan]]**: Seattle Data Guy\n* **[[Ananth Packkildurai]]**: Functional Data Engineering, Creator of dataengineeringweekly.com.\n* **[[Zach Wilson]]**: Data Engineering Challenges at Hyperscale\n* **[[Marc Lamberti]]**: Airflow\n* **[[Wes McKinney]]**: Pandas / Arrow \n* [[Andy Grove]]: Apache Arrow PMC. Creator of [[DataFusion]] \u0026 [[Ballista (Arrow)]] query engines)\n* [[ThePrimeagen]]: Rust, Netflix, programming, Neovim\n* **[[Nick Schrock]]**: Dagster, data orchestration\n* **[[Denny Lee]]**: Delta Lake, Rust, OSS\n* **[[Simon Whiteley]]**: Databricks, Data Engineering), popular [YouTube](https://www.youtube.com/@AdvancingAnalytics)\n* **[[Matt Turck]]**: Creator of [MAD landscape](https://mad.firstmark.com/)\n* **[[Jacek Laskowski]]**: **ApacheSpark** DeltaLake Databricks ApacheKafka KafkaStreams ksqlDB\n* **[[Matt Housley]]**: Creator of Fundamentals of data engineering\n* **[[Joe Reis]]**: Creator of Fundamentals of data engineering\n* **[[Erik Bernhardsson]]**: Building a simple version of Kubernetes [Modal](https://modal.com/)\n* **[[Matei Zaharia]]**: Chief Technologist at Databricks\n* **[[Adi Polak]]**: Author of Scaling Machine Learning with Spark\n* **[[Andy Petrella]]**: Writing on Data Observability\n* **[[Peter Marshall]]**: Druid Advocate\n* [Alexey Grigorev](https://www.linkedin.com/in/ACoAAAW0LKEBXPrPQ9kGjzloHkzNwHOFxLiHcBU): Manages [DataTalksClub](https://www.linkedin.com/company/datatalks-club/) which has a blog, zoom camps and GitHub tutorials  \n* **[[Joseph M.]]**: Lots of great how-tos and projects on [Start Data Engineering](https://www.startdataengineering.com/)\n* [[Chris Riccomini]]: Essays on tech, data, and streaming  \n* [[Christophe Blefari]]: A combination of aggregate newsletters and one-off articles on data engineering  \n* **[[Itai Yaffe]]**: Druid use cases: Streaming with delta lake and Druid\n* **[[Wayne Eckerson]]**: Author, keynote speaker, and consultant [Eckerson Group - Data Analytics Consulting Research](https://www.eckerson.com/)\n* **[[Andreas Kretz]]**: Creator of [[The Data Engineering Cookbook]]\n* **[[Tobias Macey]]**: Data engineering podcast\n* **[[Darshil Parmar]]**: Popular [youtube](https://www.youtube.com/c/DarshilParmar)\n* **[[Michael Kahan]]**: Popular [YouTube](https://www.youtube.com/@KahanDataSolutions) and Content on DE\n* **Matt Weingarten**: Data Engineer at Disney Streaming Services. Previously at Facebook and Nielsen.\n* **[[Robert Sahlin]]**: Data Platform Lead at Mathem | Google Cloud Champion Innovator. Writes about Data Engineering with Google Cloud\n* **J√©r√©my Ravenel**: [[Naas]], building a data platform that enables anyone with minimal technical knowledge to turn Jupyter Notebooks into powerful automation, analytical, and AI\n- [[Chad Sanderson]]: Data products, contracts, and captivating articles  \n- [[Sarah Krasnik]]: Great for infra and solutions insights  \n- [[Daniel Beach]]: Broad range of data engineering topics  \n- [[Benn Stancil]]: Prolific writer on his [blogs](https://benn.substack.com/), and they usually start with it Friday, let's fight...  \n- [[Barr Moses]]: Great articles on [[Data Observability]].\n* **[[Thalia Barrera]]**: Excellent post on date engineering\n* **[[Stephen Bailey]]**: Exploring the world of data and its adjacencies at [Data People Etc. | Stephen Bailey | Substack](https://stkbailey.substack.com/)\n* **[[Shane Gibson]]**: Data modeling, in data for 30 years. Not technical, but about agile and data modeling.\n* **[[Petr Janda]]**: Awesome blogs on [petr@substack | Petr Janda | Substack](https://petrjanda.substack.com/) now working on [[Synq]]\n* **[[Jonathan Neo]]**: Creator of [Data Engineering Bootcamp](https://dataengineercamp.com/)\n- [Simon Sp√§ti (myself :)](https://www.ssp.sh/): Lots of open-source data engineering \n\nSee more on [Data Creators Club](https://datacreators.club/), [[List of RSS feeds for Data Engineering]], as well as [[Open-Source Data Engineering Projects]].\n\n---\nOrigin: \nReferences: \nCreated [[2023-04-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.729706986+02:00",
    "tags": null
  },
  "/permanent-notes": {
    "title": "Permanent Notes",
    "content": "Permanent notes are the third type of note in the [[Zettelkasten]] system, and make up the long-term knowledge that gives the slip-box its value. This step starts with looking through the first two kinds of notes that you‚Äôve created: [[Fleeting Notes]] and [[Literature Notes]]. [[S√∂nke Ahrens]] recommends doing this about once a day before you completely forget what they contain.\n\nAs you go through them, think about how they relate to your research, current thinking, or interests. **The goal is not just to collect ideas, but to develop arguments and discussions over time.** If you need help jogging your memory, simply look at the existing topics in your slip-box, since it already contains only things that interest you. Ask me a few questions to turn fleeting and literature notes into permanent notes:\n- How does the new information contradict, correct, support, or add to what I already know?\n- How can I combine ideas to generate something new?\n- What questions are triggered by these new ideas?\n- As answers to these questions come to mind, write down each new idea, comment, or thought on its own note. If writing on paper, only write on one side, so you can quickly review your notes without having to flip them over.\n\nThis is my long-term knowledge in my own words called [[Zettelkasten]] or [[Evergreen Notes]].\n- Keep it short and succinct ([[Derek Sivers]]!). \n- Make sure only one idea at a time, otherwise break them apart and make several out of them.\n- Reference my wikis and literature notes (üóÉ/üìñ)\n- Connect related topics expressively\n- **Write these permanent notes as if you are writing for someone else**\n\n‚ùóÔ∏è Once this step is done: **Throw away (or delete) the fleeting notes f**rom step one and file the literature notes from step two into your bibliographic Zettelkasten.\n\nAn awesome explanation that elaborates more on permanent notes are [How often are you making permanent notes? ‚Äî Zettelkasten Forum](https://forum.zettelkasten.de/discussion/comment/8035/#Comment_8035).\n\n---\nReferences: [[Zettelkasten]] [[üí° Resources/üóÉ Zettelkasten/üå≥ Zettelkasten/Fleeting Notes]] [[Reference Wiki Notes]]\nCreated [[Reflection - 2021-10-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.535717917+02:00",
    "tags": null
  },
  "/personal-knowledge-management-pkm": {
    "title": "Personal Knowledge Management (PKM)",
    "content": "The PKM workflow to capture knowledge and todo‚Äôs is essential for any human, developer,j or knowledge worker. It should reduce stress and improve your quality of life in a way you wouldn‚Äôt believe before you had one.\n\n## [[Smart Note Taking]]\n## [[Second Brain]]\n## [[Zettelkasten]]\n## [[Getting Things Done (GTD)]]\n## [[Email]]\n\nSee more on [[Personal Knowledge Management Workflow for a Deeper Life]].\n\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-13]]\n",
    "lastmodified": "2023-06-23T10:05:17.537439094+02:00",
    "tags": null
  },
  "/personal-knowledge-management-workflow-for-a-deeper-life": {
    "title": "Personal Knowledge Management Workflow for a Deeper Life - As a Computer Scientist",
    "content": "\n![[Pasted image 20220330163737.png]]\n\nWith burnout and mental stress at every level of our lives, I find my [[Personal Knowledge Management (PKM)]] system even more valuable. As a human, I forget lots of things. As a dad, I have more responsibilities with remembering all things related to my kid. As a developer and knowledge worker, I re-use code snippets or create new things. That's why a PKM system such as a [Second Brain](https://fortelabs.co/blog/basboverview/) to store all of it in a sustainable way is crucial to me. \n\nIt's stress-reducing and good for my mental health because I do not need to remember, I'll get more creative ideas when connecting them, and I plan and integrate my to-dos and futures plans organically‚Äîa [[deep life]] results additionally from reading and learning a lot over time.\n\n## How it started: [[Minimalism]]\nTo your surprise may be (at least to mine), it all started when I learnt¬†[[vim]]. After the steep learning curve, I used the¬†[vim-language](https://youtu.be/wlR5gYd6um0)¬†and used it everywhere I could. I downloaded the chrome extension¬†[[Vimium]], installed¬†[vsvim](https://marketplace.visualstudio.com/items?itemName=vscodevim.vim)¬†on vscode and started blogging and writing in vim with¬†[plain text](https://sive.rs/plaintext)¬†notes. After a while, I procrastinated and was distracted way more whenever I wasn‚Äôt in vim.¬†**Being in a¬†[terminal](https://en.wikipedia.org/wiki/Computer_terminal)¬†with no buttons and no fancy UI, my brain focused on the essentials**. It was mental [[clarity]] at its best, almost like meditation. What vim did as an editor, did¬† [[Markdown]]¬†as a format. It is plain text with added formatting. That way, own my notes fully and free of any proprietary format, which is liberating.\n\nVim, together with lots I‚Äôve read from¬†[[Derek Sivers]]¬†and many others from the¬†[Tim Ferriss Podcast](https://tim.blog/), were a big inspiration for me. Derek with his fantastic¬†[[‚öõÔ∏è Areas/‚úçüèª Writing/Writing]]¬†and¬†[podcasts](https://sive.rs/podcast)¬†taught me how to write, make it fun to find better wording and strip all sentences to a bare minimum. He practised¬†[[minimalism]]¬†to its best in all kinds of ways of living. He¬†[removes all unused HTML tags](https://sive.rs/2020-03-mw)¬†or¬†`\u003cdiv\u003e`-blocks from his websites in the same way he does in his digital life in his journaling or writing. This is important¬†**as minimalism with less stuff gives you clarity and more freedom. All of this and many more set the foundation for my PKM workflow.**\n\nWhat came later was a flow of methodologies I learned from books and podcasts, which I integrated into my workflow so that my brain could focus on the creative part of the equation, the thinking.\n## [[Personal Knowledge Management (PKM)]]\n\n## [[Deep Life]]\n\n## Other Factors\nAfter all I‚Äôve said already, I want to state that it‚Äôs clear that nothing will work without the fundamentals such as sleep, healthy food, hydration and general habits with sports and family.\n\nReading lots of the above probably overwhelms you more than anything else. Please understand that these systems and learnings have been assembled over the last 10+ years. They helped me in my daily work or gave me more mental clarity. The same I‚Äôm trying to provide for you here.\n\nBelow we go through other factors that I find necessary to round up the whole PKM system with the deeper life.\n### Family, Music and Environment\nSame as the physical elements, family and emotions are a big thing is seen in the¬†[[What Makes a Happy Life]]¬†chapter.\n\nSame as changing the tooling such as¬†[[vim]]¬†to a distraction-free editor. It‚Äôs also for the environment.¬†**If you switch to a coffee place or co-working space you have never been to, your brain will be inspired by the surroundings and get creative**. If you work in a dull place or feel reminded of something terrible, you will also perform as such.\n\nSame as the environment is also the music.¬†**Listening to¬†[distract free music](https://sspaeti.com/blog/tools-i-use-part-iii/#music-focused)¬†or your favourite song on repeat will boost your productivity**¬†by a lot compared to emotional music that sole purpose is to touch you emotionally, which is a terrible thing when you try to get things done.\n\n### [[Money]] and [[Emotions]]\nMost of us live in a first world country where money is everywhere. We want all to have more. We admire rich people and want to be like them, but do not work as hard. We can‚Äôt pay taxes or health insurance because we worry about not having enough. Even if we don‚Äôt admit it, worries about money are always there, especially as parents who want to provide for our families.\n\nWe need to know about¬†[[The Psychology of Money - Morgan Housel]]¬†to have an excellent mental workflow, which says that everyone should save for a future unknown. It‚Äôs okay to save for a house or a car. But it should be even more okay to save just for saving.¬†**Having spare money on the side is the best thing you can do for a deeper life**. It gives you possible freedom and a calm state. If you know at any time that you can leave a job can go to a deserted island for a while to reload your batteries, this will give you more mental clarity than any other. And¬†**how do you achieve that? Exactly, by saving for tomorrow**. To have that extra cash when you need it, on that unfortunate occasion, something terrible happens.\n\nAnother one is¬†**compounding**.¬†[[Waren Buffet]]¬†is only overly decadent than anyone else because he started to save at age 5. Derek Sivers got¬†[rich](https://sive.rs/richand)¬†when he was 22, reducing his spending to 1000$ while earning 1800$ a month for two years. That gave him 12k to leave his job and be a full-time musician.\n\nBesides the financial value of money, it‚Äôs a lot about¬†**emotions**. For example, nobody can judge another person‚Äôs decision to buy an expensive car or invest in the lottery. Everyone has a different perception. For the poor who spends on average 400$ for the lottery and at the same time average poor person misses exactly that money to buy food, it seems like a dumb decision. But if you try to understand that that person may be all year fights for getting enough food, buying a lottery ticket is the only moment he can dream of getting out of that hard work and providing a good life for his family. Although we can‚Äôt feel the person‚Äôs emotion, we can much better understand why poor people might buy lottery tickets they can‚Äôt afford.\n\nThink of it this way: we give up 40 hours a week to have cash. Time is the currency of life, and wasting time is wasting money. Invest your time wisely.\n## Conclusion\nWhile writing all this, I listened to the book¬†[[Four Thousand Weeks, Time Management for Mortals - Oliver Burkeman]], and I have to say it‚Äôs the best conclusion and much more in terms of time management and productivity hype, in a very grounding way.\n\nHe also gets lots of time philosophical, which I believe is a good thing. Today we need to be more mindful of it:¬†**Living more in the present, aware of minorities, other cultures, and other opinions**.\n\nThis article began with a simple PKM system in mind but ended with all facets of life. The more I wanted to keep it solely about PKM, the more it became clear that the very existence and involving my second brain is about life. What I like, how I do things, and what is meaningful to me.\n\nSo no matter what you think about the second brain and sophisticated PKM workflow (or what they will become in the¬†[future](https://youtu.be/nhAVXkm-kww)). In the end, it‚Äôs also about our life, what we want to learn, and how we want to be in this world.\n\nIf you read it that far, I have to congratulate you. People rarely read such long articles in today‚Äôs attention-driven and high dopamine searching economy. I thank you and wish you the same joy and excitement in building and optimizing your PKM system and, therefore, your second brain for a deeper life.\n\n---\nOrigin: [Personal Knowledge Management Workflow for a Deeper Life ‚Äî as a Computer Scientist |](https://www.sspaeti.com/blog/pkm-workflow-for-a-deeper-life/)\nReferences:  [[Record Blog Post as Audio]]\nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.567239486+02:00",
    "tags": null
  },
  "/photo-sharing": {
    "title": "Photo Sharing",
    "content": "Instead of [[Flickr]] which was used widely, an alternative is:\n\u003eI've been using [http://pixelfed.social](https://t.co/6cCh66Wev3) - it federates with mastodon but looks like Instagram\n\nSee also [[Free Images for Content]].\n\n---\nOrigin: [https://twitter.com/AnthonyBaker/status/1595233597707145216](https://twitter.com/AnthonyBaker/status/1595233597707145216)\nReferences: \nCreated [[2022-11-23]]\n",
    "lastmodified": "2023-06-23T10:05:17.721233767+02:00",
    "tags": null
  },
  "/plaintext-files": {
    "title": "Plaintext Files",
    "content": "Similar [[Markdown]], plaintext files are future-proof. \n\u003e **Every device, including ones long gone, and ones not invented yet, can read and edit plain text.**¬†Whether future virtual reality, or a chip you can implant in your earlobe, plain text will be there. Will Microsoft Word? Evernote? Notion? Maybe. Maybe not.\n\nPlaintext files are:\n1. Portable\n2. Un-Commercial\n3. Offline\n4. No Dependencies\n5. Easiest to convert \n\nRead more on [Write plain text files | Derek Sivers](https://sive.rs/plaintext).\n\n---\nOrigin: [[Markdown vs Rich Text]]\nReferences: \nCreated [[2023-05-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.717888997+02:00",
    "tags": null
  },
  "/plural": {
    "title": "Plural.sh",
    "content": "Plural.sh is a unified application [[deployment]] platform that makes it easy to run [[Open Source]] software on [[Kubernetes]]. Instead of using [[Terraform]] to deploy to Kubernetes, which starts to make it complicated (with all Kubernetes) involved.\n\nSimilar to other [[Managed Data Stacks]].\n\nMore on: [What is Plural? - Plural](https://docs.plural.sh/)\n\n---\nOrigin: [Learn How FarosAI integrated Airbyte into their data engineering platform - YouTube](https://www.youtube.com/watch?v=2jCWRwDGQYc\u0026ab_channel=Airbyte)\nReferences: [Plural.sh](https://www.plural.sh/)\nCreated [[2022-05-02]]\n",
    "lastmodified": "2023-06-23T10:05:17.684180373+02:00",
    "tags": null
  },
  "/poem-david-whyte-start-close-in": {
    "title": "Poem- David Whyte - Start close in",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article3.5c705a01b476.png)\n\n## Metadata\n- Author: [[Forgot account]]\n- Full Title: START CLOSE IN\n- Author: [[David Whyte]]\n- Category: #articles #publish \n- URL: https://www.facebook.com/PoetDavidWhyte/photos/a.213444315348246/1415185845174081/?type=3\n\n## Highlights\nStart close in,\ndon‚Äôt take the second step\nor the third,\nstart with the first\nthing\nclose in,\nthe step\nyou don‚Äôt want to take.\n\nStart with\nthe ground\nyou know,\nthe pale ground\nbeneath your feet,\nyour own\nway to begin\nthe conversation.\n\nStart with your own\nquestion,\ngive up on other\npeople‚Äôs questions,\ndon‚Äôt let them\nsmother something\nsimple.\n\nTo hear\nanother‚Äôs voice,\nfollow\nyour own voice,\nwait until\nthat voice\nbecomes an\nintimate\nprivate ear\nthat can\nthen\nreally listen\nto another.\n\nStart right now\ntake a small step\nyou can call your own\ndon‚Äôt follow\nsomeone else‚Äôs\nheroics, be humble\nand focused,\nstart close in,\ndon‚Äôt mistake\nthat other\nfor your own.\n\nStart close in,\ndon‚Äôt take\nthe second step\nor the third,\nstart with the first\nthing\nclose in,\nthe step\nyou don‚Äôt want to take.\n\n‚Ä¶\n\nSTART CLOSE IN\nin River Flow\nNew \u0026 Selected Poems\nMany Rivers Press ¬© David Whyte\n",
    "lastmodified": "2023-06-23T10:05:17.598994682+02:00",
    "tags": null
  },
  "/pregame-routine": {
    "title": "Pre-Game Routine",
    "content": "\nIn order to get into the habit, it can help to develop a habit before the habit. [[James Clear]] calls that the pre-game routine.\n\nThe routine allows me to perform well, regardless of whether I am motivated or not. From [How to Get Motivated When You Don't Feel Like It](https://jamesclear.com/how-to-get-motivated):\n\n\u003e With so many games, there will always be days when you don‚Äôt feel motivated, when your body is tired, or you're just not mentally ‚Äúup‚Äù for the game. In that way, I‚Äôd say that baseball is a lot like life. There will always be days when the things that are important to you feel like a grind.\n\u003e \n\u003e But the game is going to be played whether you feel like playing or not, so you better figure out a solution to overcoming your lackluster emotions. I did this by developing a pre-game routine that would automatically pull me out of a funk and push me over that threshold to perform well.\n\n---\nOrigin: Podcast with [[James Clear]] on [[Tim Ferriss]] show\nReferences: [How to Get Motivated When You Don't Feel Like It](https://jamesclear.com/how-to-get-motivated)\nCreated [[2023-01-11]]\n",
    "lastmodified": "2023-06-23T10:05:17.688034521+02:00",
    "tags": null
  },
  "/productivity": {
    "title": "Productivity",
    "content": "\n# Productivity\nUsing your time intentionally. It's efficient and minimizes waste.\n\nFor me has a lot to do with [[Personal Knowledge Management (PKM)]], but also goes deep into our life, that's why my article about [[Personal Knowledge Management Workflow for a Deeper Life]] summarises it probably best up until this point.\n\nRelates to [[Deep Work]], [[Deep Life]], [[Slow Productivity]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.561345116+02:00",
    "tags": null
  },
  "/public-second-brain-with-quartz": {
    "title": "Public Second Brain with Quartz",
    "content": "I built a [Public Second Brain](https://brain.sspaeti.com) with [[Quartz - Publish Obsidian Vault]].\n\nI added a python script [find-publish-notes.py](https://github.com/sspaeti/second-brain-public/blob/hugo/utils/find-publish-notes.py) to the [Makefile](https://github.com/sspaeti/second-brain-public/blob/hugo/Makefile) to copy all my SecondBrain notes from my [[Obsidian]] Vault with the hashtag `#publish` and copy it into the Quartz git-repo.\n\n\u003e [!note] Update [[2023-06-07]]\n\u003e \n\u003e  I switched from the Python-script to a [Rust-script](https://github.com/sspaeti/second-brain-public/blob/hugo/utils/obsidian-quartz/src/main.rs) that does the same but adds #hashtags properly as Hugo requests, and it is 30x faster. To get the Rust executable, you need to run `cargo build --release` from within the `utils/obsidian-quartz` folder.\n\nWith the command `make deploy` all these copied publish notes will be deployed on [brain.sspaeti.com](https://brain.sspaeti.com).\n\nI also put all my [[Zettel]]s in the root folder instead of adding `notes` sub-folder. This way I can use Wikilinks and do not need to change to absolute paths (which I do not want to activate in my Second Brain).\n\nMain page: [[_index]]\n\n## Uploading Example\n[How I upload to my Public Second Brain - asciinema](https://asciinema.org/a/APNjfEDdep4GMcTR1vd1T903W)\n\n## Deployment\nHere I describe how I deploy my second brain.\n\n### Self Hosting\nI self-host on my own server as I already have hosting for my website. The only thing I do I `rsync` the `public`-folder to my web hosting, that's all. The [script](https://github.com/sspaeti/second-brain-public/blob/6a2b157564aca5f6c576544433057134c91b00b5/Makefile#L38) shows how I do it. The actual line is `rsync -avz --delete public/ USER@DOMAIN.com:~/www/brain` (just replace with your user and domain).\n\n### GitHub\nIf you do want to use GitHub actions, you can check the Data Glossary (glossary.airbyte.com) which is the same setup as Quartz, but there we use GitHub. Checkout the required [deploy.yaml](https://github.com/airbytehq/glossary/blob/hugo/.github/workflows/deploy.yaml](https) that makes the magic work\n\nBasically, when someone changes the branch `hugo`, it will deploy changes to `master` branch and publish that. I think I wrote some more details [here](https://github.com/airbytehq/glossary/blob/hugo/deployment.md \"https://github.com/airbytehq/glossary/blob/hugo/deployment.md\"). \n\n## Known errors\n### Seperator `---`\nif there is `---` in the text, it needs an enter before and after, otherwise we get:\n```\nProcessExecutionError: Unexpected exit code: 64\nCommand line: | /opt/homebrew/bin/pandoc -t json -o /var/folders/5p/my46d4_n1jx149p\ny_dk9jzyc0000gn/T/tmpm8rn6gcx/output.js -f markdown /var/folders/5p/my46d4_n1jx149p\ny_dk9jzyc0000gn/T/tmpm8rn6gcx/input\nStderr:       | YAML parse exception at line 15, column 0,\n              | while scanning a simple key:\n              | could not find expected ':'\n```\n\nsee: ['pandoc exited with code 64' Solution | Finisky Garden](https://finisky.github.io/pandoccode64bug.en/)\n\n\n## Todo\n- [x] remove h1 markdown and add it as `title: \"Callouts\"`\n- [x] remove the link in Graph and on page with the beginning `/`\n- [x] create a page with all zettels\n- [x] add images that are related\n- [x] aliases like a thesaurus (synonyms)\n- [x] change CSS to sspaeti.com \n- [ ] callouts are not correctly shown: [Callout behavior inconsistent with Obsidian ¬∑ Issue #168 ¬∑ jackyzha0/quartz ¬∑ GitHub](https://github.com/jackyzha0/quartz/issues/168)\n- [ ] convert tags to real tags in frontmatter\n- [ ] adding **left panel folder?** Someone did it here: [Ignoring Notes](https://y1450.github.io/quartz/notes/ignore-notes/)\n\t- did it for glossary, here are all the changes: [adding sticky navigation bar on the right with backlinks ¬∑ airbytehq/glossary@0470a9c ¬∑ GitHub](https://github.com/airbytehq/glossary/commit/0470a9c928aaa516f705b971e05fa635d75c5ce5)\n- [x] make lower() all zettels\n\t- [ ] links work, but navigating through graph does not work anylonger\n\t- [ ] backlinks also do not work anylonger with this\n- [ ] removing origin, references, etc.\n- [x] last updated but content private (submodule?)\n\t- added the update date from the local file store instead of github\n- [x] wikilinks with . e.g. [[Plural]].sh doesn't work. See [Stackable Kubernetes Cluster (Lego Blocks)](https://brain.sspaeti.com/stackable-kubernetes-cluster-lego-blocks)\n\t- should be fixed but also I renamed all these names with `.` in it.\n- [ ] Adding side-notes (like foot notes): looks very nice. Jacky is planning to implement it to the Quart repo\n- [ ] create a pop up when clicking on tags like [About-EN - Dr. Mario's üß†](https://brain.drmario.tech/pages/About-EN)\n- [ ] popup of graph view like [About-EN - Dr. Mario's üß†](https://brain.drmario.tech/pages/About-EN)\n- [ ] Adding TOC to the right pannel and expanding like [‚úçÔ∏è Sin machirulos hay paraiso. Una charla heterofriendly sobre management - Dr. Mario's üß†](https://brain.drmario.tech/pages/%E2%9C%8D%EF%B8%8F+Sin+machirulos+hay+paraiso.+Una+charla+heterofriendly+sobre+management)\n\nwrite a blog on [[How to Create an Open-Source Second Brain]] .\n\n## See other good public brains \n[[Other Public Second Brains]]\n\n---\nOrigin: \nReferences: [[GoHugo]] [[Static Site Generators (SSG)]] [Shared on SH: Hackernews](https://news.ycombinator.com/item?id=36074512)\nCreated [[2022-08-20]]\n",
    "lastmodified": "2023-06-23T10:05:17.685464922+02:00",
    "tags": null
  },
  "/python": {
    "title": "Python",
    "content": "Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation. Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured, object-oriented, and [[Functional Programming]].\n\nPython is the de facto standard for [[Data Engineering]] next to [[SQL]]. \n\n## What aspects of Python should I learn that are most important for Data Engineering?\nI'd learn how to write¬†[[Functional Data Engineering]]¬†code within python. My favorite is dagster, which forces you to write functional blocks of code with superior features. [[Python and Functional Programming]]¬†is also an excellent read in that direction.\n\nPython is one of the most accessible programming l code within Python. My favorite is¬†[[Dagster]], which forces you to write functional blocks of code with superior features‚Äîcoming from a more SQL, T-SQL, and PL-SQL background. As a data engineer, I'd say you'd not expect to write perfect code; it's better to know the¬†[[Big-O]] annotation¬†to avoid long-running data pipelines, even if your code doesn't look the prettiest. Static types such as¬†[[mypy]] might be another good one to know, as it will detect errors pre-runtime, which is the biggest problem of Python.\n\n---\nReferences: [[The growth of major programming languages]]\n",
    "lastmodified": "2023-06-23T10:05:17.534814662+02:00",
    "tags": null
  },
  "/python-and-functional-programming": {
    "title": "Python and Functional programming",
    "content": "# Python and Functional programming\n- [How to make your Python code more functional | by Ari Joury | Towards Data Science](https://towardsdatascience.com/how-to-make-your-python-code-more-functional-b82dad274707)\n- [Bye-bye Python. Hello Julia!. As Python‚Äôs lifetime grinds to a halt‚Ä¶ | by Ari Joury | Towards Data Science](https://towardsdatascience.com/bye-bye-python-hello-julia-9230bff0df62)\n- maps with python [Python map() function - GeeksforGeeks](https://www.geeksforgeeks.org/python-map-function/)\n- [Why I Switched from Python to Clojure (2016) | Hacker News](https://news.ycombinator.com/item?id=19477990)\n- [[(Functional) Data Engineering - Summary of blog posts]]\n\n## map()\n**map()** function returns a map object(which is an iterator) of the results after applying the given function to each item of a given iterable (list, tuple etc.)\n\n**Syntax :**\n\nmap(fun, iter)\n\n**Parameters :**\n\n\u003e **fun :** It is a function to which map passes each element of given iterable.  \n\u003e **iter :** It is a iterable which is to be mapped.\n\n**NOTE :** You can pass one or more iterable to the map() function.\n**Returns :**\n\nReturns a list of the results after applying the given function  \nto each item of a given iterable (list, tuple etc.) \n\n¬†  \n\t**NOTE :** The returned value from map() (map object) then can be passed to functions like list() (to create a list), set() (to create a set) .  \n¬†  \n**CODE 1**\n\n```python\n# Python program to demonstrate working`\n# of map.`\n# Return double of n`\ndef` `addition(n):`\n return` `n` `+` `n`\n# We double all numbers using map()`\nnumbers` `=` `(``1``,` `2``,` `3``,` `4``)`\nresult` `=` `map``(addition, numbers)`\nprint``(``list``(result))`\n\nOutput :\n[2, 4, 6, 8]\n¬†  \n**CODE 2**  \nWe can also use [lambda expressions](https://www.geeksforgeeks.org/python-lambda-anonymous-functions-filter-map-reduce/) with map to achieve above result.\n\n`# Double all numbers using map and lambda`\n`numbers` `=` `(``1``,` `2``,` `3``,` `4``)`\n`result` `=` `map``(``lambda` `x: x` `+` `x, numbers)`\n`print``(``list``(result))`\n\nOutput :\n[2, 4, 6, 8]\n¬†  \n**CODE 3**\n\n`# Add two lists using map and lambda`\n`numbers1` `=` `[``1``,` `2``,` `3``]`\n`numbers2` `=` `[``4``,` `5``,` `6``]`\n`result` `=` `map``(``lambda` `x, y: x` `+` `y, numbers1, numbers2)`\n`print``(``list``(result))`\n\nOutput :\n[5, 7, 9]\n¬†  \n**CODE 4**\n`# List of strings`\n`l` `=` `[``'sat'``,` `'bat'``,` `'cat'``,` `'mat'``]`\n`# map() can listify the list of strings individually`\n`test` `=` `list``(``map``(``list``, l))`\n`print``(test)`\n\nOutput :\n\n[['s', 'a', 't'], ['b', 'a', 't'], ['c', 'a', 't'], ['m', 'a', 't']]\n```\n\nRelated [[Big-O]]\n\n---\nOrigin: \nReferences:  [[Python]] [[Pluralsight course - Functional Programming with Python]]\nCreated: [[2021-12-23]]\n",
    "lastmodified": "2023-06-23T10:05:17.572522727+02:00",
    "tags": null
  },
  "/python-args-and-kwargs": {
    "title": "Python `*args` and `**kwargs`",
    "content": "\n`*args` and `**kwargs` are special syntax in [[Python]] that allow you to pass a variable number of arguments to a function.\n\nYou would use `*args` and `**kwargs` **when you don't know how many arguments the function needs to accept at the time of writing the function**. This is useful when you are writing a function that can be used in many different contexts, where the number and type of arguments may vary.\n\n\u003e [!note] arg and kwargs are just names\n\u003e Note that¬†**`args`¬†is just a name.**¬†You‚Äôre not required to use the name¬†`args`. You can choose any name that you prefer.\n\n\n## How they work\n`*args` allows you to pass a variable number of positional arguments to a function. The `*` before `args` indicates that all the positional arguments are collected and packed into a tuple. Here is an example:\n\n```python\ndef my_func(*args):\n    for arg in args:\n        print(arg)\n\nmy_func(1, 2, 3)\n```\n\nIn this example, `my_func()` takes any number of positional arguments and prints them out. When the function is called with `my_func(1, 2, 3)`, the output would be:\n\n`1 2 3`\n\n`**kwargs` allows you to pass a variable number of keyword arguments to a function. The `**` before `kwargs` indicates that all the keyword arguments are collected and packed into a dictionary. Here is an example:\n\n```python\ndef my_func(**kwargs):\n    for key, value in kwargs.items():\n        print(key, value)\n\nmy_func(name='John', age=30, city='New York')\n```\n\nIn this example, `my_func()` takes any number of keyword arguments and prints out their keys and values. When the function is called with `my_func(name='John', age=30, city='New York')`, the output would be:\n\n```python\nname John\nage 30\ncity New York\n\n```\n\n## Using them together\nYou can also use `*args` and `**kwargs` together in the same function to accept any number of positional and keyword arguments. Here is an example:\n\n```python\ndef my_func(*args, **kwargs):\n    for arg in args:\n        print(arg)\n    for key, value in kwargs.items():\n        print(key, value)\n\nmy_func(1, 2, 3, name='John', age=30, city='New York')\n```\n\nIn this example, `my_func()` takes any number of positional and keyword arguments and prints them out. When the function is called with `my_func(1, 2, 3, name='John', age=30, city='New York')`, the output would be:\n\n```shell\n1\n2\n3\nname John\nage 30\ncity New York\n```\n\n\n## Cannot be defined implicit\nNo, `*args` and `**kwargs` cannot be used implicitly if they are not defined as parameters in the function signature.\n\nIf you try to pass arguments using `*args` or `**kwargs` to a function that doesn't explicitly define them as parameters, you will get a `TypeError`.\n\n## Using standard parameters\n\nIf you combine it with standard arguments, the order is important.\n\n1.  Standard arguments\n2.  `*args`¬†arguments\n3.  `**kwargs`¬†arguments\n\nFor example, this function definition is correct:\n\n```python\n# correct_function_definition.py\ndef my_function(a, b, *args, **kwargs):\n    pass\n```\n\nOtherwise, you get a runtime error: ```\n```\n$ python wrong_function_definition.py\n  File \"wrong_function_definition.py\", line 2\n    def my_function(a, b, **kwargs, *args):\n                                    ^\nSyntaxError: invalid syntax\n```\n\n\n## Unpacking With the Asterisk Operators: * \u0026 **\n\nThere is much more you can do with Asterisk operators,  see [Python args and kwargs: Demystified ‚Äì Real Python](https://realpython.com/python-kwargs-and-args/#unpacking-with-the-asterisk-operators).\n\n\n## Special case, using args and kwargs\n\nHowever, you can still access the additional arguments using the `args` and `kwargs` variables that are available inside the function. For example:\n\npythonCopy code\n\n```python\ndef my_func(a, b, *args, **kwargs):\n    print(a, b)\n    print(args)\n    print(kwargs)\n\nmy_func(1, 2, 3, name='John', age=30)\n```\n\nIn this updated function, `*args` and `**kwargs` are defined as parameters in the function signature. When the function is called with `my_func(1, 2, 3, name='John', age=30)`, the output would be:\n\npythonCopy code\n\n```\n1 2\n(3,)\n{'name': 'John', 'age': 30}\n```\n\nHere, `args` is a tuple containing any additional positional arguments beyond the first two, and `kwargs` is a dictionary containing any additional keyword arguments beyond the first two.\n\n\u003e [!note] Positional argument order\n\u003e Note again that the order of the parameters in the function signature matters. `*args` must come after all the positional arguments, and `**kwargs` must come after all the positional arguments and `*args`. \n\u003e \n\n---\nOrigin: [Tweet](https://twitter.com/_TylerHillery/status/1631473380628070400)\nReferences: \nCreated [[2023-03-03]]\n",
    "lastmodified": "2023-06-23T10:05:17.556107709+02:00",
    "tags": null
  },
  "/quartz-publish-obsidian-vault": {
    "title": "Quartz - Publish Obsidian Vault",
    "content": "## Features\n-  Extremely fast natural-language¬†[search](https://quartz.jzhao.xyz/notes/search)\n-  Customizable and hackable design based on¬†[[GoHugo]]\n-  Automatically generated backlinks, link previews, and local graph\n-  Built-in¬†[CJK + Latex Support](https://quartz.jzhao.xyz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95)¬†and¬†[Admonition-style callouts](https://quartz.jzhao.xyz/notes/callouts) ([[Admonition (Call-outs)]])\n-  Support for both Markdown Links and Wikilinks\n\n## Links\n- [GitHub Link](https://github.com/jackyzha0/quartz) - [ü™¥ Quartz Page](https://quartz.jzhao.xyz/) ([[Digital Garden]])\n\t- on Reddit:\n\t\t- [Quartz: Create and publish your Obsidian Vault for free! : ObsidianMD](https://www.reddit.com/r/ObsidianMD/comments/onflb9/quartz_create_and_publish_your_obsidian_vault_for/)\n\t\t- [Publish your Obsidian Vault Online for Free with Quartz : ObsidianMD](https://www.reddit.com/r/ObsidianMD/comments/tt3uiq/publish_your_obsidian_vault_online_for_free_with/)\n\nThis is a free alternative to [[Obsidian]] publish. Other once can be found in [[Open-Source Obsidian Publish Alternatives]].\n\n\n---\nOrigin: \nReferences: [[Digital Garden]]\nCreated [[2022-05-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.531567767+02:00",
    "tags": null
  },
  "/quickly-increment-column-of-numbers-in-vim": {
    "title": "Quickly increment column of numbers in vim",
    "content": "\nSee a video of it:\n[Quickly increment column of numbers with Vim](https://asciinema.org/a/538550)\n\n## step by step\nFirst, move the cursor to the top 0 (I use¬†`[]`¬†to signify cursor location).\n```html\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e0\u003c/div\u003e\n```\n\nUsing¬†`VISUAL BLOCK`¬†mode (`\u003cC-v\u003e`), go down 8 times (`\u003cC-v\u003e8j`) to visually select all 0's.\n```html\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e[0]\u003c/div\u003e\n```\n\nNow type¬†`g \u003cC-a\u003e`. Voila!\n```html\n\u003cdiv class=\"test\"\u003e1\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e2\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e3\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e4\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e5\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e6\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e7\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e8\u003c/div\u003e\n\u003cdiv class=\"test\"\u003e9\u003c/div\u003e\n```\n\n---\nOrigin: [Quick vim tips to generate and increment numbers](https://irian.to/blogs/quick-vim-tips-to-generate-and-increment-numbers/)\nReferences: [[vim]]\nCreated [[2022-11-18]]\n",
    "lastmodified": "2023-06-23T10:05:17.736664404+02:00",
    "tags": null
  },
  "/reading-books-for-a-happy-life": {
    "title": "Reading Books for a Happy Life",
    "content": "**Instead of reading depressing news what will make you happy, is reading books**. If you are not a bookworm or not reading generally, you won‚Äôt agree with this. But as someone who didn‚Äôt read at all or was slow for a long time, I can tell you it‚Äôs true. Because by reading, you enlarge your horizon, you learn something new, or if you read a fantasy book, you dive into another world in an undistracted calming way.\n\nI rarely read fantasy, though. I get quickly bored as I‚Äôm not learning anything new. That is fine for me on vacation, but other times, I do not want to ‚Äúwaste‚Äù my precious time on it. For sure, that is different for everyone.\n\nA game change was opening an account on¬†[Audible](https://audible.com/). I‚Äôm listening now to a book a month compared to before, maybe once a year. Additionally, I listen to many podcasts and try to produce besides only consuming. But reading, or in my case, listening to books, is a pleasure. If you are not reading or listening to books, I‚Äôd say you didn‚Äôt find the right book yet. Because there are¬†[129'864'880 Books](https://www.theatlantic.com/technology/archive/2010/08/google-there-are-exactly-129-864-880-books-in-the-world/61024/)¬†in the world, and if you find a good one, you do not want to stop reading it.\n\nWhat keeps me listening to more audiobooks is that these are downloaded offline to my phone. So when I‚Äôm on a plane or anywhere else, I can listen. It‚Äôs also handy to read ten minutes if I am standing in a line, waiting for a friend, doing the dishes or a couple of minutes before bedtime with the phone in flight mode. Listening to my favourite book instead of¬†_only_¬†waiting in line always gave me a sense of happiness.\n\nBy reading, you learn more. By learning, you are a happier person, I believe. Therefore¬†[Live as you die tomorrow, learn as you live forever](https://www.brainyquote.com/quotes/mahatma_gandhi_133995).\n\n\u003e [!hint] Finishing Books\n\u003e Don‚Äôt feel bad to not finish books. Sometimes authors write 300 pages about something which could be said in two sentences. So don‚Äôt feel shy if you got the gist after reading only part of the book and it does not get better. What I do is skip several chapters and see if it gets better. If not, I delete it from my audible and take the next one.\n\n\u003e [!note] Want to Read List\n\u003e As well keep a want to read list somewhere (I use¬†[Goodreads](https://goodreads.com/)). You always have interesting books in the pipeline that people suggested or heard on a podcast. Also, the ratings on Goodreads or Amazon are good indications if a book is worth a while or not. Also, please read the comments. Sometimes, some bad critics are something you like or enjoy.\n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]]\nReferences: [[My Favorite Quotes (Zitate)]]\nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.550223673+02:00",
    "tags": null
  },
  "/readwise": {
    "title": "ReadWise",
    "content": "[Readwise](https://readwise.io/) can import from all kind of sources such as:\n\n- also with Instapaper\n- kindle app\n- Medium\n- and and and ... etc.\n\nit's the app for all highlights in one place\n\n\nIntegrates with my [[Obsidian]] with a plugin to sync into my vault. \n\n## The Power Features\n![[Amazed by How @Readwisei...]]\n\n\n## Integration with [[Obsidian]]\n![[Pasted image 20230224194852.png]]\n![[Pasted image 20230224194845.png]]\n\n---\nOrigin: \nReferences: \nCreated [[2023-01-03]]\n",
    "lastmodified": "2023-06-23T10:05:17.526705445+02:00",
    "tags": null
  },
  "/restack": {
    "title": "Restack.io",
    "content": "The simplest way to manage stacks of open source products on a production-ready [[Kubernetes]] cluster. Kind of a store where you chose your artifacts and restack will deploy it. \n\nBased on [[Kubernetes]] and the same as other [[Managed Data Stacks]] tries to ease the [[deployment]] process, which is hard. \n\n---\nOrigin: \nReferences: [Restack.io](https://www.restack.io/)\nCreated [[2022-05-02]]\n",
    "lastmodified": "2023-06-23T10:05:17.528173412+02:00",
    "tags": null
  },
  "/rich-text": {
    "title": "Rich Text",
    "content": "The Rich Text Format is a proprietary document file format with published specifications developed by Microsoft Corporation from 1987 until 2008 for cross-platform document interchange with Microsoft products.\n\nIt's used in many WYSIWYG Editors such as [[Google Docs]], [[Webflow]] and others. It has many good features such as being easy to use, but the bad feature is that the formatting is not stored within the text such as in [[Markdown]]. See more differences in [[Markdown vs Rich Text]].\n\n---\nOrigin: [[Markdown vs Rich Text]]\nReferences: \nCreated [[2023-03-28]]\n",
    "lastmodified": "2023-06-23T10:05:17.560106692+02:00",
    "tags": null
  },
  "/routines-such-as-sports-or-meditation": {
    "title": "Routines such as Sports or Meditation",
    "content": "Many studies say that we should start a routine or it doesn't stick. I'm not too good at this, but I try to do it primarily for my weekly sports, meditation, or writing habits. But as with kids, it is not as easy as before. I do my best whenever possible and do not try to feel bad if I can't find the time. As it's important to me, as any parent knows, **there is no more important task in life than being a parent and spending undistracted time with your kids**. \n\nOn the other hand, I go more often for a walk with no audio and no distraction: just by myself and my mind. For me, it's another way of meditation and doing sports simultaneously. Also, walking inside a forest or nature grounds me typically to what matters and releases stress automatically.\n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]]\nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.724486829+02:00",
    "tags": null
  },
  "/rubiks-cube-how-to-solve-it": {
    "title": "Rubiks Cube: How to solve it",
    "content": "\nWhat challenged me to solve one myself: There are so many possible configurations (over 43 quintillions) that it would be impossible to solve it by randomly turning the faces until it's all done.\n\n## General\n![[Pasted image 20221122141153.png]]\n### Basic steps to solve it\nThese are the steps as an overview:\n![[Screenshot_20221120-140507.png]]\n\n## Variant 1 - step by step\n### 1. Try to solve the Tetris form \non top of the white cross. That middle edge fots \n\n![[Screenshot_20221120-140810~2.png]]\n\n![[Screenshot_20221120-140815~2.png]]\n\n![[Screenshot_20221120-140823.png]]\n\n#### wrong color the on side \nif middle white has the color on the side, you can use move 5 to 'swap colors', same as we do with the yellow \n\n### 2. White corners on top \n\n1. First, turn the white cross on the bottom\n2. To solve this, find the right corner pieces (a cube with white and the correct colors for right and left),\n3. Put that cube on top of where it belongs. \n\t1. If left use the move `U'L'UL`\n\t2. If it's right do `URU'R'`\n4. When whitish is turned wrong, repeat the move\n\nLearned from [in 10 Minutes (Beginner Tutorial) - YouTube](https://youtu.be/7Ron6MN45LY?t=500).\n\n### 3. Fix middle row\nLEFT and RIGHT approach to pop the middle top wither to right or left - see images\n\nBefore you decide left or right, check the too color, e.g. below red, which needs to go right as the middle of the right is red.\n\n\n![[Screenshot_20221119-212402~2.png]]\n\n\n![[Screenshot_20221119-212404~2 1.png]]\n\n#### Wrong orientation \n![[Screenshot_20221120-133911.png]]\n\nAt the end of this step, your cube should have the middle layer solved and an intact white face at¬†the¬†bottom \n\n### 4. Top yellow cross\n\n**We solve the yellow edges on the top of the Rubik's Cube in two steps:  \nFirst, we orient them to form a¬†[yellow cross on the top](https://cubesolve.com/#the-top-cross), then we¬†[swap the pieces](https://cubesolve.com/#swap-yellow-edges)¬†to match them with the side¬†colors**\n\nImportant: do the move from the side, not the top! \n![[Screenshot_20221120-134116.png]]\n\n![[Screenshot_20221120-134113~2.png]]\n\n\n### 5. Swap colors\nWhen the yellow cross is done, fix the top middle cube.\n\n![[Screenshot_20221120-154627.png]]\n\n### 6. Position Last Layer Corners\n\n![[Screenshot_20221120-155248.png]]\nOr\n![[Screenshot_20221121-214305~2.png]]\n\n### 7. Solve the Cube\n\nAll top yellow corners are in the right corner, but not necessarily oriented correctly \n\n1. Turn white face up \n2. Chose a corner where it's wrong. Repeat `RUR'U'` until that one is solved (it will mess up a little bit the upper, but don't worry)\n3. Once solved, turn them down to the next corner which is wrong. Repeat step 2. until that is solved as well. Repeat until all are solved \n4. Turm down until all is correct\n\nLearned from [Solve the Cube J Perm](https://youtu.be/7Ron6MN45LY?t=500).\n\n## Variant 2 - beginners guide\nThis are improvements I learned along the way, mostly from J Perm [in 10 Minutes (Beginner Tutorial) - YouTube](https://youtu.be/7Ron6MN45LY?t=500).\n \n### Basis\nRIGHT combination is `RUR'U'`\nLEFT combination is `L'U'LU`\n\n### 1. Try to solve the Tetris form including the White cross\n1. Find the edge white and pair with the center color (middle bottom and center)\n2. Turn them around `2F` so the white is on top and the two front color match\n\n4. If the colors are correct, but the white is against you (instead of top), do this: `FU'RU\n\n### 2. White corners on top \n\n1. First, turn the white cross on the bottom\n2. To solve this, find the right corner pieces (a cube with white and the correct colors for right and left),\n3. Put that cube on top of where it belongs. \n\t1. If left use the move `U'L'UL`\n\t2. If it's right do `URU'R'`\n4. When whitish is turned wrong, repeat the move\n\n### 3. Fix middle row\n#### RIGHT\n1. Find correct edge color and put in top middle \n2. Move color away with `U` \n3. Do the *RIGHT combination* (see above)\n4. Turn cube to the right (right face to the front)\n5. Apply left combinatation (see above)\n\n#### LEFT \nSame as above as other way around with turning the edge away to the right first (`U'`)\nThen LEFT combination, turn cube left and apply RIGHT combination\n\n### 4. Top yellow cross\n\n1. Turn front with `F` and \n2. do the RIGHT combination and \n3. Undo front with `F'` \n\nWhen you have a L shape, make sure its on the top left and do it again \nThen you should have a line, make sure that the line is horizontal, and do above algorith again which should leave a cross\n\n### 5. Match Cross Colors\n1. Make sure the two solved side are to the right and back and the run this combination\n\t1. `RUR'U`\n\t2. `R2U'R'`\n\nRun again when not solved. \n\n### 6. Position Last Layer Corners\nCheck if all corner are correct or have the right colors in the right corner, if so you are done with this step. \n\n1. If not, hold the right corner (colors or all) and apply this combibation once or twice:\n\t2. `URU'L'`\n\t3. `UR'U'L`\n\nNow all colors are done, or the whole cube. \n\n### 7. Solve the Cube\n\nAll top yellow corners are in the right corner, but not necessarily oriented correctly \n\n1. Turn white face up \n2. Chose a corner where it's wrong. Repeat RIGHT combinarion until that one is solved (it will mess up a little bit the upper, but don't worry)\n3. Once solved, turn them down to the next corner which is wrong. Repeat step 2. until that is solved as well. Repeat until all are solved \n4. Turm down until all is correct\n\n## My Solution üéâ\n![[Pasted image 20221122142700.png]]\n\n\n---\nOrigin: [How To Solve A Rubik's Cube Easily ü§ì ùêÇùêÆùêõùêûùêíùê®ùê•ùêØùêû.ùêúùê®ùê¶](https://cubesolve.com/) \nReferences: \nCreated [[2022-11-19]]\n",
    "lastmodified": "2023-06-23T10:05:17.709052234+02:00",
    "tags": null
  },
  "/run-docker-images-and-containers-in-interactice-it-mode": {
    "title": "Run Docker Images/Containers in interactice (`-it`) mode",
    "content": "\n## Images\nEither use:\n```sh\ndocker run -it \u003cimage\u003e /bin/bash\n```\n\nor, if this doesn't work (when image has a defined ENTRYPOINT). For these cases use:\n```sh\ndocker run -it --entrypoint /bin/bash \u003cimage\u003e\n```\n\n## Containers\nWhen container exists, they can be started with:\n```sh\ndocker exec -it airbyte/normalization-duckdb:dev bash\n```\n\n---\nOrigin: [Docker 'run' command to start an interactive BaSH session ¬∑ GitHub](https://gist.github.com/mitchwongho/11266726)\nReferences: \nCreated [[2023-03-09]]\n",
    "lastmodified": "2023-06-23T10:05:17.542239249+02:00",
    "tags": null
  },
  "/second-brain": {
    "title": "Second Brain",
    "content": "After mastering the process of [[Smart Note Taking]], the next step is to put it into a sustainable system. The best format I found was the [[Second Brain]]. Before I read all about it, I had already taken notes for [10+ years](https://www.sspaeti.com/blog/how-to-take-notes-in-2021/) and saved them in Microsoft OneNote in several notebooks. Hearing [[Tiago Forte]]'s [Podcast](https://open.spotify.com/show/40O0Lbp5ockSt0qSogo6q1) (short and concise) blew my mind. I took notes almost all my life but never thought of it as my second brain. On top of it, sometimes valuable information I didn't capture just because I didn't have that mental model of a second brain and nowhere to save, so I just skipped it. \n\nFor example, when I visit my doctor or the dentist today, I will write the condition of my health or my teeth in my second brain. I had COVID recently, and I found it necessary enough for my future self. Therefore added my symptoms and the details so that next time I have a check-up or want to assess my health, I can open my notes from my second brain and connect the dots. \n\nSo what is the second brain? In short, it is a **methodology for saving and systematically reminding** us of the ideas, inspirations, insights, and connections we've gained through our experience. It expands our memory and intellect using the modern tools of technology and networks. It is for **preserving those ideas but turning them into reality**. It provides a clear, actionable path to creating a \"second brain\" ‚Äì an external, centralised, digital repository for the things you learn and the resources from which they come. If you want to know all about it, read Tiagos's [complete article](https://fortelabs.co/blog/basboverview/) on it.\n\nAfter reading that, I transformed my folder-organised notes into an entire second brain. I started changing the **structure from my nested librarian folder to [[Folder Structure PARA]]**. **PARA stands for Project, Area, Resources, and Archive**. And that are the only four folders you have in this system. Regarding Tiago, our brain is not built to handle an infinite amount of nested folders. That's why PARA tries to keep **no more than four levels**.\n\nTo give you an idea of what the structure of my second brain can look like, below you find folders I created inside the PARA structure:\n\n\u003e [!example] Obsidian Folder Structure with PARA \n\u003e \n\u003e ![[Pasted image 20220819220022.png]]\n\nIf you want to build the same structure yourself, follow the step-by-step explanation by [Systematic Mastery from Zowie](https://youtu.be/uqVx22lo9_4)). There is no right or wrong, it's your second brain, and you need to find out what works best for your brain.\n\n\u003e [!important] Choosing the Right Tool\n\u003e It's important to find the right tool for what you are doing. I like the [differentiation](https://youtu.be/f3dDVtJ2sec) between 1. Librarian (mostly stage one when collecting info), 2. Architect (stage two with organizing knowledge), and 3. Gardener (stage three with digesting knowledge and making [connections](https://youtu.be/QgbLb6QCK88)) and choosing the tool accordingly. \n\nSome benefits you'll get from the Second Brain:\n- it **transforms your knowledge into your physical second brain** by acknowledging and being able to bring it everywhere you go\n- it **uncovers unexpected patterns and connections** between ideas while writing down and tinkering with your thoughts\n- it **reduces stress and \"information overload\"** by trusting in your system and growing your knowledge and connections\n- it **develops valuable expertise, specialised knowledge, and the skills** around your notes and thoughts which help your personal life, new job, career, or business\n- and it **cultivates and captivates valuable knowledge** and insights over time without having to follow rigid, time-consuming rules\n\n\u003e [!info] Only keep what resonates with you\n\u003e\n\u003e Important again to only keep in your second brain what resonates with you. Don't copy-paste from the internet. Add a link to the original article and write what it's all about in your own words.\n\n**Generally, when taking notes, remember to make them for your future self**. It does not hurt you to add a lot of copied text now, but within a couple of years, it will clutter your second brain and take away most of the [joy](https://youtu.be/q0Pf6ZePNGc). Instead, envision that all notes you linked are thoughts of yours. You'll be instantly reminded of what a particular thing was and can easily connect these thoughts to other ideas when you read. It starts to form a second brain with connections from one note to one or several others. And our (first) brain works the same, and because of it, it feels so natural to store it in such a way.\n\nIn the following chapter, we're going to cover the [[Zettelkasten]] method, which in some cases is used interchangeably with a second brain. They are not, and I will explain what it is and how I integrated it as a dedicated folder in mine.\n\n\u003e [!info]\n\u003e \n\u003e By the way: Your [contacts](https://contacts.google.com/) in google, your [password tool](https://www.lastpass.com/), [email](https://www.hey.com/), all of it are also second brains. So you do not need to have only one.\n\nMore on [[How to build a Second Brain]]. \n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]] \nReferences: [[Obsidian]] [[Notion]]\nCreated [[2022-03-26]]\n",
    "lastmodified": "2023-06-23T10:05:17.5235213+02:00",
    "tags": null
  },
  "/select-insights-bundling-with-microsoft-fabric-and-orchestration": {
    "title": "SELECT Insights - Bundling with Microsoft Fabric and Orchestration (#2)",
    "content": "\nHello friends,\n\n_A quick note before we start: I changed the name of this newsletter to \"SELECT Insights\" and changed the structure slightly. I plan to follow this structure for the upcoming editions. If you want to know more, I have more details on [newsletter.ssp.sh](https://newsletter.ssp.sh/). ‚Äî And on another exciting side note, I also move the domain from [sspaeti.com](https://sspaeti.com) to [ssp.sh](https://ssp.sh). I hope you like it; more on the history in this [Tweet](https://twitter.com/sspaeti/status/1661741201580769284). But now, let's get into this month's newsletter._\n\nThis week's SELECT Topic is [[Data Orchestrators]]. Data Orchestration is a topic we must recognize, given the recent events and trends in the data ecosystem. \n\n## SELECT Orchestration - Dead or Alive? [4 min read]\n*I kick things off with a thought-provoking topic, ranging from the intricacies of data engineering to the fascinating charm of everyday life experiences.*\n\nThis is interesting from two standpoints. On one side, Dagster, through their parent company Elementl, [raised $33 million in Series B funding](https://dagster.io/blog/elementl-series-b). And on the other hand, Microsoft announced its new product launch with a big bang, called [[Microsoft Fabric]].  Why is this interesting, you might as? Because on the one hand, Microsft is bundling the whole Azure data stack into a single SaaS service, essentially bundling it into PowerBI.\n\nOn the other hand, Dagster is bundling the [Open Data Stack](https://glossary.airbyte.com/term/open-data-stack) into a single **control pane**. \n\n### The Data Orchestration Challenge\nData orchestration is increasingly vital as the hub of the [Data Engineering Lifecycle](https://glossary.airbyte.com/term/data-engineering-lifecycle/). It combines the core aspects of data integration, transformation, and analytics in a cohesive, manageable workflow. The demand for more sophisticated orchestration tools is growing, as highlighted in the great [summary of data orchestration articles](https://www.finishslime.com/c/data-orchestrator-101) I recently read.\n\nHowever, I've observed a concerning trend - the unbundling of the orchestrator across various tools. Instead of allowing the orchestrator to do its job effectively, we are diverting away from this ideology, fragmenting the process across different devices and platforms. This is not the direction we should be heading.\n\nStill, there is a lot of hype for now, but the good news. Microsoft, for instance, offers excellent no-code and [[Closed-Source Solutions (All-In-One)]] solutions to kickstart data engineering tasks. They are betting strongly on open standards with open-source [Data Lake Table Formats](https://glossary.airbyte.com/term/data-lake-table-format) Delta.io and Spark for computation.\n\nWhat they still need to include, though, is an open-source orchestrator. They have some closed-source solutions, but they remind me more about the bad times of SSIS, with lots of missing efficiencies.\n\nOn the flip side, the Open Data Stack, which integrates the core needs of the data engineering lifecycle, could be our trustworthy, bundled solution.\n\n### Is the Orchestrator Dead or Alive?\n\nThis brings me to the [Symposium: Is the orchestrator dead or alive](https://stkbailey.substack.com/p/symposium-invitation-is-the-orchestrator)? This engaging series, initiated by Stephen Bailey, invites authors from different fields to discuss the role of the orchestrator in today's data ecosystem. Some takeaways:\n\n1. **The need for speed and simplicity:** The current data orchestrators should be more quick. They need to onboard use cases faster and justify displacing or running managed services through it.\n2. **Data ingestion:** This is a process that an orchestrator must own.\n3. **Actions, not meta-narratives:** GitHub Actions thrives by focusing on running things rather than what it should be.\n4. **Integration:** The most helpful orchestrator is one plugged into everything.\n5. **Control vs. chaos:** The orchestrator embraces chaos but of a certain kind: ordered chaos, not wasteful chaos.\n\nFinally, I want to address the [contention that Data Engineering is a transitional job](https://medium.pimpaudben.fr/data-engineer-is-a-transitional-job-ed0074c89646). Data engineering is not a job but a field. It's too broad to be confined to one role. Collaboration between BI engineers, DBAs, DevOps, data scientists, and more is necessary to leverage data effectively. After all, as we know, everyone needs data.\n\nFeel free to dive deeper into the data orchestration discussion at Stephen Bailey's [Symposium](https://stkbailey.substack.com/s/symposia). Also, check out the latest orchestration comparison by Christophe Blefari - [Airflow alternatives Mage and Kestra](https://www.linkedin.com/events/airflowalternativesonlinemeetup7041351388609576960/comments/), and[ Prefect and Dagster](https://www.linkedin.com/events/7044560795581526017/comments/). \n\n\n## UPDATE Engineering - Latest Updates in Data Engineering Tools and Techniques [5 min read]\n\n*In this bustling realm of data engineering, let's take a look at the recent updates that caught my attention:*\n\n- **State of the Modern Data Engineering and the Future**\n\t- LakeFS presented a comprehensive report, **The State of Data Engineering 2023**. I highly recommend it to stay on top of the current data engineering landscape. [Read more](https://lakefs.io/blog/the-state-of-data-engineering-2023/)\n\t- Andreessen Horowitz' overview of **The Modern Transactional Stack** is an excellent guide to understanding the evolution and potential of transactional systems. [Read more](https://a16z.com/2023/04/14/the-modern-transactional-stack/)\n\t- Airbyte announced the biggest data engineering survey in state-of-data. [Read more](https://state-of-data.com/)\n\t- Pedram Navid shares thoughts on **The Future of Data**. Also, consider checking out some Reddit thoughts on the evolution and trends of data engineering in 2022/23. [Read more](https://databased.pedramnavid.com/p/the-future-of-data), [Reddit discussion](https://www.reddit.com/r/dataengineering/comments/13lpd6v/evolution_and_trends_of_data_engineering_202223/)\n\t- Evolution and Trends of Data Engineering 2022/23. [Read more](https://www.reddit.com/r/dataengineering/comments/13lpd6v/evolution_and_trends_of_data_engineering_202223/?utm_source=share\u0026utm_medium=web2x\u0026context=3)\n- **Data Modeling**, the unsung hero of data engineering, got a spotlight in the recent piece by Airbyte. Don't miss this read if you want to appreciate the fine art of designing your database schema. [Read more](https://airbyte.com/blog/data-modeling-unsung-hero-data-engineering-architecture-pattern-tools/)\n- Curious about **\"Casual data engineering\"**? Tobi L√ºtke's take on building a \"poor man's Data Lake in the cloud\" using Delta Lake with DuckDB is an intriguing read. [Read more](https://tobilg.com/casual-data-engineering-or-a-poor-mans-data-lake-in-the-cloud-part-i)\n- A leaked Google document surfaced with some daring words: **\"We Have No Moat, And Neither Does OpenAI\"**. Simon Willison shared this treasure trove on Twitter, suggesting that it's worth every bit of our attention. [Read more](https://www.semianalysis.com/p/google-we-have-no-moat-and-neither)\n- The dbt Developer Blog showcased how to build a **Kimball dimensional model** with dbt. It's a fundamental tutorial for anyone looking to embrace the Kimball methodology. [Read more](https://docs.getdbt.com/blog/kimball-dimensional-model)\n- The tech community has been raving about **Microsoft Fabric**. To fully grasp the potential and implications of this release, here are some insightful articles:\n    - [What is Microsoft Fabric?](https://www.advancinganalytics.co.uk/blog/2023/5/17/what-is-microsoft-fabric)\n    - [First impression of Microsoft Fabric](https://datamonkeysite.com/2023/05/27/first-impression-of-microsoft-fabric/)\n    - [Killing me softly - Has Microsoft Fabric just \"overwritten\" Synapse Analytics?](https://data-mozart.com/killing-me-softly-has-microsoft-fabric-just-overwritten-synapse-analytics/)\n- ChatGPT just became a **data scientist's ally**. With support for Postgres and Supabase, it's taking another leap into our daily data routines. A must-try for data enthusiasts! [Read more](https://supabase.com/blog/chatgpt-plugins-support-postgres)\n- **Super Tables**: The road to building reliable and discoverable data products.  It's an older concept that competes with Materialized views, OBT, and even says enables data mesh. [Read More](https://engineering.linkedin.com/blog/2022/super-tables--the-road-to-building-reliable-and-discoverable-dat), [Discuss](https://www.linkedin.com/posts/cliffleungus_super-tables-the-road-to-building-reliable-activity-6980949608818499584-yns0?utm_source=share\u0026utm_medium=member_desktop)\n- Dive into the future of data analysis with **Pandas AI**, an innovative approach to data manipulation. Also, explore 'Sketch', an initiative to integrate an LLM into Pandas. [Read more](https://medium.com/@fareedkhandev/pandas-ai-the-future-of-data-analysis-8f0be9b5ab6f), [Sketch Github](https://github.com/approximatelabs/sketch)\n- Christopher White shares insights about scaling Postgres in his blog titled **More Memory, More Problems**. The blog gives a detailed look at memory-related issues that come with scaling Postgres. [Read more](https://medium.com/the-prefect-blog/more-memory-more-problems-b182d7807e3c)\n- Kai Waehner's take on why **Kappa Architecture** is becoming mainstream and replacing Lambda is worth a read. [Read more](https://www.kai-waehner.de/blog/2021/09/23/real-time-kappa-architecture-mainstream-replacing-batch-lambda/)\n- Are you interested in a cost-effective solution for **Change Data Capture** that provides near real-time data pipeline management? Check out how Kestra and Debezium are integrated to capture database changes without Kafka Connect. [Read more](https://kestra.io/blogs/2022-04-05-debezium-without-kafka-connect#the-impressive-real-time-data-delivery-of-debezium)\n\n## JOIN Perspectives [2 min read]\n\n_Where nerdy pursuits like blogging, neovim, dotfiles, and coding intersect with life's subtle nuances and diverse worldviews._\n\n- I am exploring the **[[Future of Blogging]]** and leaning heavily towards Markdown. With platforms like Substack and [[Plaintext Files]], the landscape of blogging is undoubtedly changing, bringing simplicity and control back to the writer. See the difference between [[Markdown vs Rich Text]]. In case you want to build your own blogging site, check out [[Public Second Brain with Quartz]].\n- A thought-provoking article from **Basecamp**, suggested that group chat might not be the most effective communication tool for teams. This got me pondering. Could this actually be the best way to totally stress out your team? Take a look and form your opinion: [Group Chat: The Best Way to Totally Stress Out Your Team](https://basecamp.com/guides/group-chat-problems).\n- Liking [[Markdown]]? Lucky you, there is a markdown solution that does business intelligence, called [[Evidence]].  [Hackernews](https://news.ycombinator.com/item?id=35645464),  [Read more](https://archiew.substack.com/p/weekly-business-reviews)\n- Cool features of [[Arc Browser]] called Zap, let's you remove annoying parts of the website. I showcased before and after for YouTube, Reddit, and Twitter.\n- I stumbled upon this enlightening perspective, **\"Write to Yourself and Yourself Alone\"**. There's something invigorating about the idea of writing for oneself, instead of a perceived audience. It‚Äôs like a breath of fresh air, reminding us to stay genuine and authentic in our writing. [Read more here](https://www.otherlife.co/sibi/).\n- Do you have a soft spot for Markdown too? If yes, there's something exciting to share! **Evidence** has brought together the best of both worlds ‚Äì **SQL with Markdown**. Business Intelligence is getting a markdown makeover! Follow the buzz on [Hackernews](https://news.ycombinator.com/item?id=35645464) or explore more in their [latest newsletter](https://archiew.substack.com/p/weekly-business-reviews).\n\n## FETCH Socials - Conversations Stirring Up The Digital World [1 min read]\n\n_This is the space where I share intriguing conversations, trending topics, and powerful ideas from around the social media landscape._\n\n- A fascinating discussion on LinkedIn about **Rust, Ballista, Ray SQL, and Data Fusion with Andy Grove** is a great place to gain insights about these trending technologies. [LinkedIn](https://www.linkedin.com/posts/deltalake_d3l2-discussing-rust-ballista-ray-sql-ugcPost-7069402089906429955-f6Hz)\n- Are you interested in reading and writing Delta without Spark? Here's how **Delta-RS and DuckDB** have made it possible. A significant advancement in data engineering, making data handling more efficient. [Read more](https://betterprogramming.pub/delta-rs-duckdb-read-and-write-delta-without-spark-c4d3db580b25), [Discuss on Twitter](https://twitter.com/DeltaLakeOSS/status/1661869253757214728)\n- Interesting Data Engineering Podcasts. [Reddit](https://www.reddit.com/r/dataengineering/comments/13lppxu/any_data_engineering_podcasts/?utm_source=share\u0026utm_medium=web2x\u0026context=3)\n- DBT lays off 15% of their staff. [Reddit](https://www.reddit.com/r/dataengineering/comments/13l9ur0/dbt_lays_off_15_of_their_staff/?utm_source=share\u0026utm_medium=web2x\u0026context=3)\n- So watched a few videos about Fabric, and started to cry a little... [Reddit](https://www.reddit.com/r/dataengineering/comments/13umeek/so_i_watched_a_few_videos_about_fabric_and/?utm_source=share\u0026utm_medium=web2x\u0026context=3)\n- Why I left Rust. Some drama in the Rust community. [Hacker News](https://news.ycombinator.com/item?id=36101501)\n\n## SCAN Books - Through The Lens of Written Papers [1 min read]\n\n_Every book opens up a new world of insights and perspectives. Here, I'll share some of my recent reads across a spectrum of topics. Let's explore these new horizons together!_\n\n- **[The Extended Mind](https://www.goodreads.com/book/show/42291479-the-extended-mind)** by Annie Murphy Paul ‚Äì An exploration of the intriguing ways our environment influences our thinking processes.\n\t- Discover the surprising ways in which experts think beyond their brains, how harder thinking often leads to fewer results and the controversy over brain-training games and smart pills.\n\t- Explore how we can use tools beyond the brain, such as the Body Scan technique and meditation, to tap into our intuition and sensations, and learn about the significance of the amygdala in our responses to stress.\n\t- Question the nature of intuition and its relationship to extensive training, all in the context of [[Thinking, Fast and Slow - Daniel Kahneman]]concepts of System 1 and System 2.\n- **[All the Wrong Moves](https://www.goodreads.com/book/show/43062156-all-the-wrong-moves)** by Sasha Chapin ‚Äì A captivating narrative where the world of chess serves as a backdrop for introspection and self-discovery.\n\t- A story that shows how the love of chess can fully dominates one's life. As it's the most beautiful and worst thing in life at the same time.\n\n\n## Thanks!\n\nIf you are still reading, thanks so much. I hope you enjoyed this update! It turned out longer than I expected (as always). Let me know what you want more or less; happy to take feedback to improve the topics and style to your liking.\n\nUntil next time, happy reading and exploring!\nSimon\n\n\u003c!-- Notes\nNotes: SELECT Orchestration - Dead or Alive? [4 min read]  - To bundle or not to bundle\n\n*I kick things off with a thought-provoking topic, ranging from the intricacies of data engineering to the fascinating charm of everyday life experiences.*\n\n(another topic could also be microsoft announcement with fabric, and the way back to bundling - very connected with orechestration) -  in fact, the very thing that Microsoft don't have, is a good orchestrator. They have [[No Code]] solutions, that are great to get started, but worse when you go deep. It's just another way of SSIS again.\n\nON the other hand we have Dagster, who just [raised 33$ Mio series B funding](https://dagster.io/blog/elementl-series-b).\n-  [Elementl Raises $33 Million in Series B Funding to Accelerate Data Orchestration and Unleash Advanced Data Use Cases | Dagster Blog](https://dagster.io/blog/elementl-series-b)\n- Orchestration\n\t- awesome summary of all data orchestration articles: [Data Orchestrators 101: Everything You Need To Know To Get Started | The Finish Slime](https://www.finishslime.com/c/data-orchestrator-101)  \n\n- I don't think so, that [Data Engineer is a Transitional Job](https://medium.pimpaudben.fr/data-engineer-is-a-transitional-job-ed0074c89646). It's more that data engineering is not a job, but a field. It's actually too big for one role. But as everyone needs data, BI engineer, DBAs, devops, data scientists and all people will collaborate on it.\n\t- Good pointers by [Dagster and the Decade of Data Engineering](https://dagster.io/blog/decade-of-data-engineering). And  how [MLOps is Mostly Data Engineering](https://www.cpard.xyz/posts/mlops_is_mostly_data_engineering/).\n\n- the discussion of orchestrator symposium\n\n\nThe next topic I'd like to highlight from last week and month is the [data orchestrator](https://glossary.airbyte.com/term/data-orchestrator/) and the [Symposium: Is the orchestrator dead or alive](https://stkbailey.substack.com/p/symposium-invitation-is-the-orchestrator)? Stephen started with a series of authors from different fields. \n\nWith the explosion of the data ecosystem, we started this newsletter because **orchestration will get more of a central piece** of the data stack. But unfortunately, we've started to unbundle the orchestrator in each tool, like \"the catalog-as-orchestrator, the warehouse-as-orchestrator, the sql-formatter-as-orchestrator.\" Instead of having the orchestrator do its job to orchestrate our data and tools, we divert from that ideology. \n\n\"Orchestrator to become one of the few services we trust.\" I'd go one more step and say the [Open Data Stack](https://glossary.airbyte.com/term/open-data-stack/) will be the bundled solution we trust, containing the real need of the [Data Engineering Lifecycle](https://glossary.airbyte.com/term/data-engineering-lifecycle/) with its core data integration, transformation, orchestration, and analytics.\n\nSome inspiring highlights from some of the articles of the Symposium series:\n\n* Simplicity and speed are where current data orchestrators fail. The orchestrator is losing today because it needs to be faster to onboard the use cases the engineers want, and it needs to be more complex to justify displacing or running managed services through it. It needs to do both.\n* Data ingestion: one process an orchestrator _must_ own.\n* GitHub Actions thrives because it eschews any meta-narrative around what it s_hould_ be used. It's just Actions. It runs things. GitHub Actions runs code; it's a primitive way of orchestrator.\n* The orchestrator that's useful is the one plugged into everything.\n* Existing tools are moving towards a less controlled model, but more is needed. Stephen says that Astronomer's push-button deployments, Dagster's declarative scheduling, Prefect's UI-driven flow registry, Datahub's stream-based metadata ingestion, Atlan's Zapier-like metadata actions.\n\nStephen asks the all-important question: \"**Chaos or control?**\" and says, \"It boils down to activity or graphs.\" The orchestrator embraces chaos, but only of a certain kind: ordered chaos, not wasteful chaos. It reminds me strongly of the monolith vs. microservices discussion; I don't know why :).\n\nRead many exciting pieces around Orchestration at Stephen Bailey's[ Symposium](https://stkbailey.substack.com/s/symposia) with two recent excellent reads (but all of them are): [28 Dags Later](https://stkbailey.substack.com/p/28-dags-later) and [Data Materialization is a Convergence Problem](https://stkbailey.substack.com/p/data-materialization-is-a-convergence). Also, check the latest orchestration comparison by Christophe Blefari, [Airflow alternatives Mage and Kestra](https://www.linkedin.com/events/airflowalternativesonlinemeetup7041351388609576960/comments/), and[ Prefect and Dagster](https://www.linkedin.com/events/7044560795581526017/comments/). These meetups provide an overview of the current state of data orchestration tools, giving you valuable insights into the pros and cons of each solution.\n\n---\nUPDATE Engineering - Latest Updates in Data Engineering Tools and Techniques [5 min read]\n\n*In this section, I'll share the latest in data engineering tools, techniques, and coding snippets, ensuring you stay abreast of the exciting shifts in this landscape.*\n\n\n- Last article on Data Modeling: [Data Modeling: The Unsung Hero of Data Engineering: Architecture Pattern, Tools and the Future (Part 3) | Airbyte](https://airbyte.com/blog/data-modeling-unsung-hero-data-engineering-architecture-pattern-tools/)\n- [Casual data engineering, or: A poor man's Data Lake in the cloud](https://tobilg.com/casual-data-engineering-or-a-poor-mans-data-lake-in-the-cloud-part-i): Delta Lake with DuckDB\n\t- added to #1\n- [The Modern Transactional Stack | Andreessen Horowitz](https://a16z.com/2023/04/14/the-modern-transactional-stack/)\n- leaked google docs: [Google \"We Have No Moat, And Neither Does OpenAI\"](https://www.semianalysis.com/p/google-we-have-no-moat-and-neither)\n\t- source: [Simon Willison on Twitter: \"Here's the full leaked document, absolutely worth reading it all https://t.co/QkueZZzNiL\" / Twitter](https://twitter.com/simonw/status/1654158744912003076)\n- [Building a Kimball dimensional model with dbt | dbt Developer Blog](https://docs.getdbt.com/blog/kimball-dimensional-model)\n- [How we evolved our query architecture with DuckDB](https://blog.count.co/how-we-evolved-our-query-architecture-with-duckdb/)\n- [New capabilities to manage data reliability at scale | Synq](https://www.synq.io/blog/data-reliability-platform)\n- [The dbt Semantic Layer: what‚Äôs next](https://www.getdbt.com/blog/dbt-semantic-layer-whats-next/)\n- Read more on [Super Tables: The road to building reliable and discoverable data products | LinkedIn Engineering](https://engineering.linkedin.com/blog/2022/super-tables--the-road-to-building-reliable-and-discoverable-dat)\n\t- an older concept that competes with Materialized views, OBT and even says enables data mesh (everyone says these these days)\n\t- discuss more on [Cliff Leung on LinkedIn: Super Tables: The road to building reliable and discoverable data products | 11 comments](https://www.linkedin.com/posts/cliffleungus_super-tables-the-road-to-building-reliable-activity-6980949608818499584-yns0?utm_source=share\u0026utm_medium=member_desktop)\n- 1,000+ AI new tools were released this month by generative AI: [Steve Nouri on LinkedIn: AI tools | 21 comments](https://www.linkedin.com/posts/stevenouri_ai-tools-ugcPost-7062699759483961344-5ii1?utm_source=share\u0026utm_medium=member_desktop)A\n- AI\n\t- ChatGPT can read databases now: [ChatGPT plugins now support Postgres \u0026 Supabase](https://supabase.com/blog/chatgpt-plugins-support-postgres)\n\t- Stack Overflow is ChatGPT Casualty: Traffic Down 14% in March. No more angry comments when the questions was asked wrongly, no more duplicated flag on question.\n\t\t- [Stack Overflow is ChatGPT Casualty: Traffic Down 14% in March : r/programming](https://www.reddit.com/r/programming/comments/13eqchn/stack_overflow_is_chatgpt_casualty_traffic_down/)\n\t\t- [Stack Overflow is ChatGPT Casualty: Traffic Down 14% in March | Similarweb](https://www.similarweb.com/blog/insights/ai-news/stack-overflow-chatgpt/)\n- Looking for a cost-effective and efficient solution for Change Data Capture (#cdc ) that offers near real-time data pipeline management?: [Integrating Kestra and Debezium to capture database changes without Kafka Connect | Kestra](https://kestra.io/blogs/2022-04-05-debezium-without-kafka-connect#the-impressive-real-time-data-delivery-of-debezium)\n- Interesting talk with Joe Reis: [Beyond Data Engineering ft. Joe Reis - YouTube](https://youtu.be/yPX2-XSpzdQ)\n- Hightouch partnered with Google: [Tweet / Twitter](https://twitter.com/kashgupta_/status/1658239950255534084?s=46\u0026t=rG7tN5XtkIkgD7eFsHar6g)\n- [Pandas AI ‚Äî The Future of Data Analysis | by Fareed Khan | May, 2023 | Medium](https://medium.com/@fareedkhandev/pandas-ai-the-future-of-data-analysis-8f0be9b5ab6f)\n\t- Sketch is another take on integrating an LLM into Pandas:\n\t\t- https://github.com/approximatelabs/sketch\n\t- more comments on [Pandas AI ‚Äì The Future of Data Analysis | Hacker News](https://news.ycombinator.com/item?id=35973265)\n- Scalling postgres: [More Memory, More Problems. The single Postgres setting that almost‚Ä¶ | by Christopher White | The Prefect Blog | May, 2023 | Medium](https://medium.com/the-prefect-blog/more-memory-more-problems-b182d7807e3c)\n- dbt layoffs [dbt Labs Update: a Message from CEO Tristan Handy](https://www.getdbt.com/blog/dbt-labs-update-a-message-from-ceo-tristan-handy/)\n- Pedram on [The Future of Data - by Pedram Navid - Pedram's Data Based](https://databased.pedramnavid.com/p/the-future-of-data)\n\t- on the same notes I wrote on reddit some thoughts: [Evolution and Trends of Data Engineering 2022/23 : r/dataengineering](https://www.reddit.com/r/dataengineering/comments/13lpd6v/evolution_and_trends_of_data_engineering_202223/) see [[Data Engineering- Trends and Predictions for 2023]]\n- [[Microsoft Fabric]] announcement (reference blog on my note from advancing analytics)\n\t- If you want to read more, there are fantastic blogs by [[Advancing Analytics]], first [What is Microsoft Fabric?](https://www.advancinganalytics.co.uk/blog/2023/5/17/what-is-microsoft-fabric) and then [10 Amazing Features](https://www.advancinganalytics.co.uk/blog/2023/5/22/-do-not-publish-me-10-amazing-features-of-microsoft-fabric)\n\t- Also [[James Serra]], Data \u0026 AI Solution Architect at Microsoft has a announcement blog [Build announcement: Microsoft Fabric | James Serra's Blog](https://www.jamesserra.com/archive/2023/05/build-announcement-microsoft-fabric/).\n\t - and a truly deep dive by [[Mimoune Djouallah]] on [First impression of Microsoft Fabric](https://datamonkeysite.com/2023/05/27/first-impression-of-microsoft-fabric/).\n\t- [Killing me softly - Has Microsoft Fabric just \"overwritten\" Synapse Analytics? - Data Mozart](https://data-mozart.com/killing-me-softly-has-microsoft-fabric-just-overwritten-synapse-analytics/)\n\t- The good and bad from Microsoft Fabric:  [Issue #14: Microsoft takes aim at the Modern Data Stack (Again)](https://thedataplatform.substack.com/p/issue-14-microsoft-takes-aim-at-the)\n- State of Data Engineering\n\t- LakeFS: [The State of Data Engineering 2023](https://lakefs.io/blog/the-state-of-data-engineering-2023/): It takes a lot of work to keep up with the latest data engineering. \n\t- Airbyte: [State of Data](https://state-of-data.com/) to keep up with yearly trends. Check out the exciting results from 886 participants, concluding the largest data engineering survey.\n- [Kappa Architecture is Mainstream Replacing Lambda - Kai Waehner](https://www.kai-waehner.de/blog/2021/09/23/real-time-kappa-architecture-mainstream-replacing-batch-lambda/)\n- [Delta-RS and DuckDB ‚Äî Read and Write Delta Without Spark](https://betterprogramming.pub/delta-rs-duckdb-read-and-write-delta-without-spark-c4d3db580b25)\n\t- [Tweet / Twitter](https://twitter.com/DeltaLakeOSS/status/1661869253757214728)\n- ballista, datafusion, rust: all the goodies [Delta Lake on LinkedIn: D3L2: Discussing Rust, Ballista, Ray SQL, Data Fusion with Andy Grove](https://www.linkedin.com/posts/deltalake_d3l2-discussing-rust-ballista-ray-sql-ugcPost-7069402089906429955-f6Hz)\n--\u003e\n\n\n---\nReferences: \nCreated [[2023-05-25]]\n",
    "lastmodified": "2023-06-23T10:05:17.68729085+02:00",
    "tags": null
  },
  "/smart-note-taking": {
    "title": "Smart Note Taking",
    "content": "Why is this important? Because without the¬†_smart_, you‚Äôll add more clutter to your system, leading to minor organization and more stress.\n\nFor your mind to relax, you need to let go of things in your head. Best to release them in an external system. I usually let off my thoughts by dumping them all into a blank file in my text editor of choice. Doing this is more the¬†[[Journaling]]¬†approach to the note-taking journey. The other is general note-taking.\n\nOne principle I strongly agree with from the book¬†[[Smart Note Taking (S√∂nke Ahrens)]]¬†by¬†[[S√∂nke Ahrens]]¬†is that¬†**writing is not the outcome of thinking; it is the medium in which thought occurs**.\n\nWhen you write about an idea or a blog post, the goal is not to start from a blank paper or a file, which leads to more procrastination. So what‚Äôs the alternative? With¬†**Smart Note Taking, you write smaller notes and start connecting them in your Secon Brain**. Instead of brainstorming, you connect thoughts and naturally generate new ideas.\n\nIn life, no projects arrive in sequence.¬†**It‚Äôs easier to work on multiple projects and ideas simultaneously because you write the current state of thought**. Next time you can continue at the exact spot you left. No dread to forget the latest. You have personal responsibilities you need to take care of, work, family related. All of which have their project and thoughts.\n\n**Another important aspect is that your brain will not rest until a task is finished**. As we can‚Äôt complete all tasks on the spot, it helps that it does not distinguish between¬†_finished_¬†or¬†_written down_. Therefore writing things down lets your mind and yourself rest, which is what¬†[[Getting Things Done (GTD)]] focuses on.\n\nWhen taking notes, it‚Äôs essential to¬†**stay open and even seek opposing opinions and challenge what you already know**. Through that curiosity, you will get better at writing and, therefore, thinking.\n\nRecall seven random numbers is hard. It‚Äôs much easier if¬†**numbers are connected by years, such as all football world cup events. That‚Äôs why we connect the notes when we take smart notes**¬†and bring them to the next level with the¬†[[Zettelkasten]]¬†Method.\n\n[[Nick Milo]]¬†calls it¬†**note-_making_¬†instead of taking**¬†to emphasize the thinking part of just capturing notes.\n\nThere is so much more to smart note-taking. I suggest, either read the¬†[book](https://www.amazon.com/How-Take-Smart-Notes-Nonfiction/dp/1542866502)¬†by S√∂nke or if in a hurry, the summary by¬†[[Tiago Forte]]¬†[here](https://fortelabs.co/blog/how-to-take-smart-notes/).\n\n\u003e [!hint] Writing is Thinking\n\u003e  Remember: Writing is¬†_thinking_. Without writing, there is no thinking, no progress. The more you write, the more notes you take, and the better of a thinker you become. You‚Äôll read better with better questions in your mind.\n\nA nice example of how to continuously taking notes with [[Obsidian]] by [[Nicole van der Hoeven]] on [YouTube](https://youtu.be/0g38K_DtxFI) and using it as a [[Second Brain]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.77439897+02:00",
    "tags": null
  },
  "/so%CC%88nke-ahrens": {
    "title": "S√∂nke Ahrens",
    "content": "- Author or [[Smart Note Taking (S√∂nke Ahrens)]]\n- first to lumens [[Zettelkasten]] system and the benefit of not collecting notes, but using them interlinked\n\n---\nOrigin: [[Smart Note Taking (S√∂nke Ahrens)]]\nReferences: [[Zettelkasten]] [[Smart Note Taking]]\nCreated: [[2021-10-10]]\n",
    "lastmodified": "2023-06-23T10:05:17.633791937+02:00",
    "tags": null
  },
  "/speed-reading": {
    "title": "Speed Reading",
    "content": "\nKey points from [How to Speed Read](https://youtu.be/ZwEquW_Yij0) by [[Tim Ferriss]]:\n1. **Establish a baseline**: Determine your words per minute (WPM) reading rate by counting the average number of words per line and lines per page in a standardized book. Read for one minute and calculate your WPM.\n2. **Use peripheral vision**: Instead of reading from the far left to the far right, use your peripheral vision to focus on a narrower portion of the page. Draw lines on either side of the page, indent one word from each edge, and read between the lines.\n3. **Minimize fixation points**: The eye doesn't move smoothly across the page but jumps between fixation points. To minimize these points and reduce reading time, focus on fewer points per line.\n4. **Use a pacer**: Use your finger or a pen to trace underneath the lines as you read, keeping your eye on the pacer to prevent back-skipping and maintain forward momentum.\n5. **Read slightly faster than comprehension allows**: For five minutes, practice reading at a speed that causes a slight loss in comprehension. This helps reset your comfort set point for reading at full comprehension.\n6. **Retest your WPM**: After implementing these techniques, retest your WPM and check for comprehension. Many people will see significant improvements in their reading speed.\n\nThese techniques are based on understanding the mechanics of the eye and optimizing optical perception for reading. They can help improve reading speed for various types of texts, from non-fiction to fiction and poetry.\n\n---\nOrigin: [[Tim Ferriss]]\nReferences: [[How to Read Books]]\nCreated [[2023-03-31]] (Heard way before with Tim Ferriss)\n",
    "lastmodified": "2023-06-23T10:05:17.559100519+02:00",
    "tags": null
  },
  "/sql-is-declarative": {
    "title": "SQL is declarative",
    "content": "\u003e [!question]\n\u003e\n\u003e Is SQL declarative? And why not imperative as you specify the from and every detail in the WHERE?\n\nThe key is the SQL optimizer that does everything in the background such as (looking at statistics, deciding if an index is useful, going for a nested, merged or hash join, etc.), see [[Is SQL declarative]].\n\n---\n\nAnd yes, SQL (Structured Query Language) is considered a [[declarative]] language. This means that it focuses on describing the \"what\" ‚Äî what the end result should be, rather than the \"how\" ‚Äî how to achieve that result.\n\nWhen you write a SQL query, you declare what data you're interested in. For example:\n\nSQLCopy code\n```sql\n`SELECT * FROM Employees WHERE salary \u003e 50000;`\n```\n\nIn this query, you're declaring your intention to get all columns of data from the \"Employees\" table where the \"salary\" is greater than 50,000. You're not instructing the database on how to retrieve that data, i.e., you're not outlining the step-by-step process the database should use to fetch this data.\n\nThis contrasts with [[imperative]] programming languages, which require that the developer specify exactly how to achieve a result. For instance, in a language like Python, to get a similar result, you might have to iterate over a list of dictionaries, checking each dictionary to see if it meets your criteria. In other words, you're telling the program exactly what steps to take to get to the final result.\n\nWhy SQL still seems somewhat imperative (like specifying FROM and WHERE clauses) because SQL gives you the ability to specify conditions for your data retrieval. However, **even though you're providing detailed instructions, you're still not directing the database on how to execute those instructions**. The database management system is responsible for figuring out the most efficient way to execute your query.\n\n---\nOrigin: [LinkedIn Comment](https://www.linkedin.com/feed/update/urn:li:activity:7044294859238567936?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7044294859238567936%2C7044303654291419137%29)\nReferences: \nCreated [[2023-05-25]]\n",
    "lastmodified": "2023-06-23T10:05:17.546304732+02:00",
    "tags": null
  },
  "/stackable": {
    "title": "Stackable",
    "content": "The modular open source data platform: Popular data apps. K8s-native. Easy to deploy and run.\n\nOpen source data stack as of [[2022-09-09]]: \n![[Pasted image 20220909093753.png]]\n\nSee other such solutions [[Managed Data Stacks]].\n\n---\nOrigin: [[Caspar von Stuelpnagel]]\nReferences: [Stackable.tech](https://stackable.tech/en/)\nCreated [[2022-09-09]]\n",
    "lastmodified": "2023-06-23T10:05:17.718806378+02:00",
    "tags": null
  },
  "/static-site-generators-ssg": {
    "title": "Static Site Generators (SSG)",
    "content": "Related also to [[Headless CMS]]. \n\n- [[GoHugo]]\n- [[Astro]] \n- [[Gatsby]]\n- [[Jekyll]]\n- [[Docusaurus]]\n- [WaylonWalker/markata](https://github.com/WaylonWalker/markata): Very minimal one with Python by [[Waylon Walker]]\n\nhosted all in one solutions people use are [[Ghost]].\n\n---\nOrigin: \nReferences: \nCreated [[2022-09-28]]\n",
    "lastmodified": "2023-06-23T10:05:17.712712382+02:00",
    "tags": null
  },
  "/stoic": {
    "title": "Stoic",
    "content": "# Stoic\nit‚Äôs a¬†**philosophy**¬†designed to make us¬†**more resilient, happier, more virtuous and wiser‚Äìand as a result, better people, better parents and better professionals.**¬†Sounds a bit utopic? Maybe it is, but it helped me early in my personal life and career. I first heard of it by, again, Tim Ferriss and all his guests reading it. Famous leaders have been practising and shaping it, such as¬†[[Marcus Aurelius]], the emperor of Rome,¬†[[Theodore Roosevelt]],¬†[[Epictetus]],¬†[[Seneca]], to name a few.\n\nI got hooked when I read my all-time favourite book¬†[[The Daily Stoic (366 Meditations) - Ryan Holidays]], which makes it easier for people new to it. Quotes such as focusing on what‚Äôs in your control are stayed strong until today:\n\n\u003e The chief task in life is simply this: to [[Identify and separate matters so that I can say clearly to myself which are externals not under my control, and which have to do with the choices I control‚Ä¶]] ‚Äî Epictetus\n\nI practise this every day. For example, with [[COVID-19]],¬†[we can‚Äôt control it](https://dailystoic.com/remember-you-dont-control-what-happens-you-control-how-you-respond/), no cursing, no ignoring will ever make it away. So the only way is to control ourselves and decide how we want to react to it. It‚Äôs another classic one, but many people face it twice a day and¬†**valuable waste energy in traffic when they get angry at other drivers**. Why? Does it make any of it go away? Not really.\n\nInstead, I try to think for myself that these people we get angry at just having an emergency, maybe they are on the way to the hospital. If thinking it in that way, at least to me, I‚Äôm not even mad at them anymore. The same goes for the weather. How many people are in a bad mood if the weather is not as the weather forecast proclaimed, or if it‚Äôs just bad? Next time, try not to think you can control the outcome; instead, maintain your reaction towards it by not getting angry or just staying calm.\n\nThis book is so powerful that I always have it on my phone, and at least once a week, I listen to two or three chapters. As the title says¬†[366 Meditations on Wisdom, Perseverance, and the Art of Living](https://www.amazon.com/Daily-Stoic-Meditations-Wisdom-Perseverance/dp/0735211736), is applied meditation to me. By doing so, I‚Äôm always more calm and more understanding of my outside world and things I can‚Äôt control.\n\nRead all and more about it in the book or on¬†[Daily Stoic Blogs](https://dailystoic.com/what-is-stoicism-a-definition-3-stoic-exercises-to-get-you-started/).\n\n## 4 Virtues of Stoicism\n- Courage.\n- Temperance. \n- Justice.\n- Wisdom.\n\n## Favorite quotes\n[[My Favorite Stoic Quotes]]\n\n---\nOrigin: [[The Daily Stoic (366 Meditations) - Ryan Holidays]]\nReferences: [What Is Stoicism? A Definition \u0026 9 Stoic Exercises To Get You Started](https://dailystoic.com/what-is-stoicism-a-definition-3-stoic-exercises-to-get-you-started/)\nCreated [[2022-03-29]]\n",
    "lastmodified": "2023-06-23T10:05:17.554334907+02:00",
    "tags": null
  },
  "/stop-reading-news": {
    "title": "Stop reading News",
    "content": "A long time ago, I stopped reading the news. Not reading the news doesn‚Äôt mean that I‚Äôm uninformed. But I stopped reading the newest, most attention-driven headline updated 100 times a day. As everyone probably knows,¬†**the news makes us depressed if we read it every day**. They are rather focused on the negative or radical things instead of things that would make fun to read.\n\nI usually read once a while in my¬†[RSS](https://en.wikipedia.org/wiki/RSS)¬†feed, where I have subscribed to all blog posts, and specific categories of news I‚Äôm interested in and read through it. The significant benefit: I can quickly glance over 100 posts without distraction. On top of these tools, for example, I‚Äôm using¬†[Feedly](https://feedly.com/), they have some ratings and marks on how many others have read it. These ratings give me a sense of urgency if I only have a short time, and I want to know what‚Äôs happening. I can just read the high-rated once.\n\nReading negative headlines and depressing news will, over time, make you think wrong and depressed. With COVID, where most probably all of us read the news hourly, we know how this feels. Another aspect is that news typically reports from the whole world. In contrast to a couple of years back, when you primarily were informed about the place you lived in, now you know every detail of everything in the world. Famously¬†[A Sack of Rice fell over](http://silmor.de/sackrice.php#:~:text=Asian%20News,negative%20effect%20on%20chinese%20economy.%22)¬†üòÉ.\n\nSince doing that for a long time, I have had exciting conversations with co-workers or friends and family because I am not up-to-date on the latest and can ask genuine questions about what has happened. Compared to everyone knows from reading the news all day which usually stops any conversation from starting at all.\n\nAnother exciting aspect is¬†[Positive News](https://www.positive.news/), which try a different approach to all news portal we know. Some other articles worth reading for that matter are¬†[After Reading This, You‚Äôll Never Watch the News Again](https://www.huffpost.com/entry/after-reading-this-youll-_b_7665270)¬†and¬†[The Low Information Diet](https://www.mrmoneymustache.com/2013/10/01/the-low-information-diet/).\n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]] \nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.559845649+02:00",
    "tags": null
  },
  "/taxonomy-of-note-types": {
    "title": "Taxonomy of note types",
    "content": "\n-   **üö¶ My Statuses**\n    -   üì¨ Start any note, idea, something I read, or anything that comes to mind. Just some fleeting notes. This can also be deleted after a while\n    -   üóÉ/üåª I worked on it a bit. I added many fleeting notes, brainstormed, elaborated a bit, and made some references.\n    -   üóÉ/üìñ literature notes written. Not yet ready for the [[Permanent Notes]] / [[Evergreen Notes]], but [[Literature Notes]] are formulated in whole sentences and worked already a bit, or I'm just happy with the content.\n    -   üóÉ/üå≥ Evergreen / Permanent Notes. These are my long-running notes that will end up in [[Zettelkasten]] core with my own words. Here I separated the literature notes into different ideas to follow the zettelkasten principle and link them together.\n\n- **Type of Notes**\n\t- üó∫ - map of content - index or entry pages to my zettelkasten note (üóÉ/üå≥ above). E.g., Data Engineering to group that into ankasten where üëâüèª is just an index along the way in my wiki or elsewhere\n\t- üëâüèª for the ability of content or map of content documents, e.g., Data Engineering (see what older it is in) - this is always a folder that is the first folder and not as a note below all folders. Plus, I could also add pictures to the TOC if needed.\n\t\t- Others also call it Map of Content, but I like TOC better.\n\t- üåç/üìù - means this is a wiki/reference and not part of my üóÉ- [[Zettelkasten]] or Projects\n\t- üåç/üì∞ - This is part of my wiki where I copy an article, blog post, and interesting piece. This is when it's in its raw form when I didn't edit or add my notes (except some fleeting comments, maybe). These are used for references or later when searching for material to flesh out my literature notes or Permanent.\n\t- üåç/üéß - Notes about podcasts\n\t- üåç/üìÇ if it's just a slide, pdf, or other files (probably not used often as these files do not contain markdown and are just added to the wiki)\n\t- üìö these are notes about a book I'm reading\n\n- Follow up\n\t- ‚è∞ - Reminder for later\n\t- ‚ùóÔ∏è - Important\n\t- üêù - Todo pages\n- Template\n\t- ‚ôªÔ∏è Might be used for later\n\n- Tags\n\t- #RW stands for ReadWise, #RWH for ReadWise Highlight\n\n---\nReferences: [[Obsidian]] [[Organsising and Writing My Notes]]\n",
    "lastmodified": "2023-06-23T10:05:17.538669894+02:00",
    "tags": null
  },
  "/test": {
    "title": "This is my test",
    "content": "\nLet's write a test note that I'm going to upload quickly.\n\nThis test was made to showcase [[Record Shell Prompts]] with [asciinema](https://asciinema.org/). I made this video [How I upload to my Public Second Brain](https://asciinema.org/a/APNjfEDdep4GMcTR1vd1T903W).\n\n---\nOrigin: \nReferences: #publish\nCreated [[2022-11-14]]\n",
    "lastmodified": "2023-06-23T10:05:17.740512303+02:00",
    "tags": null
  },
  "/the-more-you-share-the-more-you-get": {
    "title": "The more you share the more you get",
    "content": "\n\u003e The more you share the more you get. [[Leonard Nimoy]]\n\nI‚Äôve experienced the truth of this a long time ago during my apprenticeship, without being aware of it. You probably remember those days when you had to prepare for an exam, but due to time constraints, you couldn‚Äôt look up everything in the books. So my friend and I compiled summaries of the most important things. Not surprisingly, these summaries quickly became very popular in class, and more people asked us if we could share it with them. I remember that back then I was skeptical about this and was asking myself ‚ÄúWhy should I give it to them? We put a lot of work into it and they just want to copy that? No way!‚Äù At the end of the day, they got it anyway either through my friend or some other way. Eventually, I just said to myself ‚ÄúOooookaay, give it to everyone who asks,‚Äù and even without being asked, I would tell them that I have a summary for the next exam and sent it to whoever wanted it.\n\nThe funny thing that happened next, which I‚Äôve only realized recently, is that after I took that step, I received a lot more input for our summaries. Everyone knew we were working on them, so everyone sent us helpful information and content for the document.\n\nAlso outside of school, I could feel the appreciation, which lead to better personal relations and better friendships. People will appreciate that you share something they can use without asking for something in return. AND, later on, they will remember you when they find something that might be of interest to you! Maybe even more valuable than this, are the discussions that arise from sharing, which will inevitably lead to many new ideas.\n\nI truly agree with Nimoy and will apply his wisdom in my life every day. It‚Äôs no surprise that open source software or open source, in general, is more popular than ever before as it is all about sharing and learning from each other.\n\nSo if you‚Äôre reading this right now, remember Nimoy next time someone asks you to share something with them. Start now, and share this blog post with someone and experience the power of sharing!\n\nRelates also to [[10 Years of Professional Blogging ‚Äì What I‚Äôve Learned at Andrewchen]]: \n\u003e But it‚Äôs just one potential method of creating and putting content out there. Maybe your version of this is through videos, photography, or podcasts. Or maybe you‚Äôre a developer and want to keep shipping open source projects. All of it can work. The important part is just to start giving out your knowledge and ideas ‚Äì and over time, to build that into a platform for other activities.\n\n---\nOrigin: [The more you share the more you get.. |](https://www.sspaeti.com/blog/the-more-you-share-the-more-you-get/)\nReferences: \nCreated [[2017-05-10]]\n",
    "lastmodified": "2023-06-23T10:05:17.534565577+02:00",
    "tags": null
  },
  "/the-most-important-skill...": {
    "title": "The Most Important Skill...",
    "content": "\n![rw-book-cover](https://pbs.twimg.com/profile_images/1565090761166802953/U3s2Ipf_.jpg)\n\n## Metadata\n- Author: [[@nathanbaugh27 on Twitter]]\n- Full Title: The Most Important Skill...\n- Category: #tweets #publish \n- URL: https://twitter.com/nathanbaugh27/status/1550822914823491584\n\n## Highlights\n- The most important skill you‚Äôve never been taught:\n  Storytelling\n  10 dead-simple tips to make you a better storyteller: ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822914823491584))\n- Cut the fluff\n  Most people amble on in backstory for 10 minutes or write an intro paragraph.\n  This is a waste of time.\n  Find the interesting parts of your story, jump right to it, and provide as little backstory as possible. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822917541400577))\n- Start with the end in mind\n  What do you want the outcome of your story to be?\n  ‚Ä¢ Customer buying a product\n  ‚Ä¢ Friend laughing his ass off\n  ‚Ä¢ Investor giving you money\n  If you start with the end in mind, the intro and middle naturally funnel to that target. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822919835631616))\n- Make it emotional\n  People make decisions based on emotion.\n  But it‚Äôs impossible to make your audience feel everything.\n  Nail down 1-2 emotions and direct the entire story to amplify those.\n  I regularly refer to this chart from @ShaanVP: \n  ![](https://pbs.twimg.com/media/FYWhO_cXEAELoSP.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822929360986116))\n- Raise the stakes\n  Apple realized the iPhone was competing on the same few features each release.\n  So it raised the stakes: privacy.\n  This tells two stories:\n  ‚Ä¢ Apple protects your privacy\n  ‚Ä¢ Competitors exploit your privacy\n  The story became a feature with iOS 14.5. \n  ![](https://pbs.twimg.com/media/FYWhPUGWAAA1gbb.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822935568748544))\n- Use data intentionally\n  Numbers tell, stories sell.\n  But if used well, data backs up the story you‚Äôre telling.\n  I aim to use 1-3 high-impact data points to support my stories. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822939007778827))\n- Keep a story log\n  You have story-worthy moments every day but forget almost all of them. Simple fix:\n  ‚Ä¢ Create a two column spreadsheet (date and story)\n  ‚Ä¢ Before bed, take two minutes to write the best story from that day\n  You‚Äôll start seeing stories everywhere. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822941163769856))\n- Structure your story\n  Humans gravitate to structure. Luckily there are tons to wrap around your story:\n  ‚Ä¢ Hero‚Äôs Journey\n  ‚Ä¢ StoryBrand\n  ‚Ä¢ Three Act\n  Here‚Äôs the structure JK Rowling used for the 5th Harry Potter: \n  ![](https://pbs.twimg.com/media/FYWhP_IX0AETR6F.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822946544943106))\n- Talk to a niche\n  Great stories aren‚Äôt told to everyone.\n  They‚Äôre told to the specific group of people who will resonate most with them.\n  The idea of ‚Äú1000 true fans.‚Äù ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822948969250816))\n- Nail the hook\n  It doesn‚Äôt matter how incredible the rest of your story is if nobody sticks around for it.\n  A few guidelines:\n  ‚Ä¢ Punchy\n  ‚Ä¢ Short\n  ‚Ä¢ ‚ÄúBig if true‚Äù\n  Here‚Äôs the hook Steve Jobs used for the iPhone product launch: https://t.co/0OiNWor5CB ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822951095877632))\n- Sell the transformation\n  Great storytelling boils down to the transformation the Hero goes through.\n  Nike never sells its clothing ‚Äî it sells what the clothing can do for you.\n  ‚ÄúIf you wear our stuff, you‚Äôll jump like LeBron, run like Ronaldo, and hit like Serena.‚Äù \n  ![](https://pbs.twimg.com/media/FYWhQkJWIAMPutt.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822955776720899))\n- Hope you enjoyed that!\n  I write about storytelling 1-2x times per week. Follow @nathanbaugh27 so you don‚Äôt miss those.\n  Here‚Äôs another one you may enjoy: https://t.co/11cLyJrjMX ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822957546704897))\n- Storytelling is the most important skill you can learn.\n  Try my free weekly newsletter to improve yours: https://t.co/hr8eQKUMaD ([View Tweet](https://twitter.com/nathanbaugh27/status/1550829379894272000))\n- The story log concept seems to be resonating\n  here's mine (started it july 1)\n  the key for me has been keeping it short and informal. it provides just enough context to jog my memory\n  idea came from the book storyworthy: https://t.co/Fg6xTB95Pt \n  ![](https://pbs.twimg.com/media/FYW2zFMXwAQXMtL.png) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550847095359283200))\n# The Most Important Skill...\n\n![rw-book-cover](https://pbs.twimg.com/profile_images/1565090761166802953/U3s2Ipf_.jpg)\n\n## Metadata\n- Author: [[@nathanbaugh27 on Twitter]]\n- Full Title: The Most Important Skill...\n- Category: #tweets\n- URL: https://twitter.com/nathanbaugh27/status/1550822914823491584\n\n## Highlights\n- The most important skill you‚Äôve never been taught:\n  Storytelling\n  10 dead-simple tips to make you a better storyteller: ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822914823491584))\n- Cut the fluff\n  Most people amble on in backstory for 10 minutes or write an intro paragraph.\n  This is a waste of time.\n  Find the interesting parts of your story, jump right to it, and provide as little backstory as possible. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822917541400577))\n- Start with the end in mind\n  What do you want the outcome of your story to be?\n  ‚Ä¢ Customer buying a product\n  ‚Ä¢ Friend laughing his ass off\n  ‚Ä¢ Investor giving you money\n  If you start with the end in mind, the intro and middle naturally funnel to that target. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822919835631616))\n- Make it emotional\n  People make decisions based on emotion.\n  But it‚Äôs impossible to make your audience feel everything.\n  Nail down 1-2 emotions and direct the entire story to amplify those.\n  I regularly refer to this chart from @ShaanVP: \n  ![](https://pbs.twimg.com/media/FYWhO_cXEAELoSP.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822929360986116))\n- Raise the stakes\n  Apple realized the iPhone was competing on the same few features each release.\n  So it raised the stakes: privacy.\n  This tells two stories:\n  ‚Ä¢ Apple protects your privacy\n  ‚Ä¢ Competitors exploit your privacy\n  The story became a feature with iOS 14.5. \n  ![](https://pbs.twimg.com/media/FYWhPUGWAAA1gbb.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822935568748544))\n- Use data intentionally\n  Numbers tell, stories sell.\n  But if used well, data backs up the story you‚Äôre telling.\n  I aim to use 1-3 high-impact data points to support my stories. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822939007778827))\n- Keep a story log\n  You have story-worthy moments every day but forget almost all of them. Simple fix:\n  ‚Ä¢ Create a two column spreadsheet (date and story)\n  ‚Ä¢ Before bed, take two minutes to write the best story from that day\n  You‚Äôll start seeing stories everywhere. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822941163769856))\n- Structure your story\n  Humans gravitate to structure. Luckily there are tons to wrap around your story:\n  ‚Ä¢ Hero‚Äôs Journey\n  ‚Ä¢ StoryBrand\n  ‚Ä¢ Three Act\n  Here‚Äôs the structure JK Rowling used for the 5th Harry Potter: \n  ![](https://pbs.twimg.com/media/FYWhP_IX0AETR6F.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822946544943106))\n- Talk to a niche\n  Great stories aren‚Äôt told to everyone.\n  They‚Äôre told to the specific group of people who will resonate most with them.\n  The idea of ‚Äú1000 true fans.‚Äù ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822948969250816))\n- Nail the hook\n  It doesn‚Äôt matter how incredible the rest of your story is if nobody sticks around for it.\n  A few guidelines:\n  ‚Ä¢ Punchy\n  ‚Ä¢ Short\n  ‚Ä¢ ‚ÄúBig if true‚Äù\n  Here‚Äôs the hook Steve Jobs used for the iPhone product launch: https://t.co/0OiNWor5CB ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822951095877632))\n- Sell the transformation\n  Great storytelling boils down to the transformation the Hero goes through.\n  Nike never sells its clothing ‚Äî it sells what the clothing can do for you.\n  ‚ÄúIf you wear our stuff, you‚Äôll jump like LeBron, run like Ronaldo, and hit like Serena.‚Äù \n  ![](https://pbs.twimg.com/media/FYWhQkJWIAMPutt.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822955776720899))\n- Hope you enjoyed that!\n  I write about storytelling 1-2x times per week. Follow @nathanbaugh27 so you don‚Äôt miss those.\n  Here‚Äôs another one you may enjoy: https://t.co/11cLyJrjMX ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822957546704897))\n- Storytelling is the most important skill you can learn.\n  Try my free weekly newsletter to improve yours: https://t.co/hr8eQKUMaD ([View Tweet](https://twitter.com/nathanbaugh27/status/1550829379894272000))\n- The story log concept seems to be resonating\n  here's mine (started it july 1)\n  the key for me has been keeping it short and informal. it provides just enough context to jog my memory\n  idea came from the book storyworthy: https://t.co/Fg6xTB95Pt \n  ![](https://pbs.twimg.com/media/FYW2zFMXwAQXMtL.png) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550847095359283200))\n# The Most Important Skill...\n\n![rw-book-cover](https://pbs.twimg.com/profile_images/1601085315845955584/dANLgWY3.jpg)\n\n## Metadata\n- Author: [[@nathanbaugh27 on Twitter]]\n- Full Title: The Most Important Skill...\n- Category: #tweets\n- URL: https://twitter.com/nathanbaugh27/status/1550822914823491584\n\n## Highlights\n- The most important skill you‚Äôve never been taught:\n  Storytelling\n  10 dead-simple tips to make you a better storyteller: ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822914823491584))\n- Cut the fluff\n  Most people amble on in backstory for 10 minutes or write an intro paragraph.\n  This is a waste of time.\n  Find the interesting parts of your story, jump right to it, and provide as little backstory as possible. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822917541400577))\n- Start with the end in mind\n  What do you want the outcome of your story to be?\n  ‚Ä¢ Customer buying a product\n  ‚Ä¢ Friend laughing his ass off\n  ‚Ä¢ Investor giving you money\n  If you start with the end in mind, the intro and middle naturally funnel to that target. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822919835631616))\n- Make it emotional\n  People make decisions based on emotion.\n  But it‚Äôs impossible to make your audience feel everything.\n  Nail down 1-2 emotions and direct the entire story to amplify those.\n  I regularly refer to this chart from @ShaanVP: \n  ![](https://pbs.twimg.com/media/FYWhO_cXEAELoSP.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822929360986116))\n- Raise the stakes\n  Apple realized the iPhone was competing on the same few features each release.\n  So it raised the stakes: privacy.\n  This tells two stories:\n  ‚Ä¢ Apple protects your privacy\n  ‚Ä¢ Competitors exploit your privacy\n  The story became a feature with iOS 14.5. \n  ![](https://pbs.twimg.com/media/FYWhPUGWAAA1gbb.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822935568748544))\n- Use data intentionally\n  Numbers tell, stories sell.\n  But if used well, data backs up the story you‚Äôre telling.\n  I aim to use 1-3 high-impact data points to support my stories. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822939007778827))\n- Keep a story log\n  You have story-worthy moments every day but forget almost all of them. Simple fix:\n  ‚Ä¢ Create a two column spreadsheet (date and story)\n  ‚Ä¢ Before bed, take two minutes to write the best story from that day\n  You‚Äôll start seeing stories everywhere. ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822941163769856))\n- Structure your story\n  Humans gravitate to structure. Luckily there are tons to wrap around your story:\n  ‚Ä¢ Hero‚Äôs Journey\n  ‚Ä¢ StoryBrand\n  ‚Ä¢ Three Act\n  Here‚Äôs the structure JK Rowling used for the 5th Harry Potter: \n  ![](https://pbs.twimg.com/media/FYWhP_IX0AETR6F.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822946544943106))\n- Talk to a niche\n  Great stories aren‚Äôt told to everyone.\n  They‚Äôre told to the specific group of people who will resonate most with them.\n  The idea of ‚Äú1000 true fans.‚Äù ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822948969250816))\n- Nail the hook\n  It doesn‚Äôt matter how incredible the rest of your story is if nobody sticks around for it.\n  A few guidelines:\n  ‚Ä¢ Punchy\n  ‚Ä¢ Short\n  ‚Ä¢ ‚ÄúBig if true‚Äù\n  Here‚Äôs the hook Steve Jobs used for the iPhone product launch: https://t.co/0OiNWor5CB ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822951095877632))\n- Sell the transformation\n  Great storytelling boils down to the transformation the Hero goes through.\n  Nike never sells its clothing ‚Äî it sells what the clothing can do for you.\n  ‚ÄúIf you wear our stuff, you‚Äôll jump like LeBron, run like Ronaldo, and hit like Serena.‚Äù \n  ![](https://pbs.twimg.com/media/FYWhQkJWIAMPutt.jpg) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822955776720899))\n- Hope you enjoyed that!\n  I write about storytelling 1-2x times per week. Follow @nathanbaugh27 so you don‚Äôt miss those.\n  Here‚Äôs another one you may enjoy: https://t.co/11cLyJrjMX ([View Tweet](https://twitter.com/nathanbaugh27/status/1550822957546704897))\n- Storytelling is the most important skill you can learn.\n  Try my free weekly newsletter to improve yours: https://t.co/hr8eQKUMaD ([View Tweet](https://twitter.com/nathanbaugh27/status/1550829379894272000))\n- The story log concept seems to be resonating\n  here's mine (started it july 1)\n  the key for me has been keeping it short and informal. it provides just enough context to jog my memory\n  idea came from the book storyworthy: https://t.co/Fg6xTB95Pt \n  ![](https://pbs.twimg.com/media/FYW2zFMXwAQXMtL.png) ([View Tweet](https://twitter.com/nathanbaugh27/status/1550847095359283200))\n",
    "lastmodified": "2023-06-23T10:05:17.626871853+02:00",
    "tags": null
  },
  "/the-role-of-a-data-engineer": {
    "title": "The role of a data engineer",
    "content": "In order to get high-quality and **frequently updated data sets**, it is important to distinguish between data pipelines that are **done and cleaned** by data engineers and all the others that are mostly exploratory. We at Airbus use a folder that is called ‚Äúcleaned‚Äù and all data sets produced there are constantly updated, documented, and of the highest quality. Based on these data sets you create your own. We use the data lake solution [Palantir Foundry](https://en.wikipedia.org/wiki/Palantir_Technologies) (brand name of Airbus: [Skywise](http://www.airbus.com/newsroom/press-releases/en/2017/06/airbus-launches-new-open-aviation-data-platform--skywise--to-sup.html)) which provides you with a map where you see the [data lineage](https://en.wikipedia.org/wiki/Data_lineage) easily. **Documentation and metadata to each data set are crucial** as otherwise, you lose the overview of your data, which is also one main task of a data engineer.\n\n### Services that a data engineer provides\n\nAnother important task or **service that a data engineer provides is automation** which data scientists or data analysts do manually. A good overview of what task this includes are provided by \u003ca href=\"https://medium.com/@maximebeauchemin\" target=\"_blank\" rel=\"noopener\"\u003eMaxime Beauchemin\u003c/a\u003e, the founder of \u003ca href=\"https://airflow.apache.org/\" target=\"_blank\" rel=\"noopener\"\u003eApache Airflow\u003c/a\u003e, a tool that helps a data engineer to lift the majority of tasks mentioned:\n\n  * **data ingestion**: services and tooling around ‚Äúscraping‚Äù databases, **loading logs, fetching data from external stores or APIs**,¬†‚Ä¶\n  * **metric computation**: frameworks to compute and summarise engagement, **growth or segmentation-related metrics**\n  * **anomaly detection**: automating data consumption to **alert people anomalous events occur** or when trends are changing significantly\n  * **metadata management**: tooling around allowing generation and consumption of metadata, making it easy to find information in and around the data warehouse\n  * **experimentation: [[A-B Testing]]** and experimentation frameworks is often a critical piece of ca ompany‚Äôs analytics with a significant data engineering component to it\n  * **instrumentation**: **analytics starts with logging events** and attributes related to those events, data engineers have vested interests in making sure that high-quality data is captured upstream\n  * **dependencies**: **pipelines that are specialized in understanding series of actions** in time, allowing analysts to understand user behaviors\"\n\n\u003e While the nature of the workflows that can be automated differs depending on the environment, the need to automate them is common across the board. By [[Maxime Beauchemin]]\n\n---\nReferences: [[Data Engineering]] [[The role of a data engineer]] [[When is a data engineer needed]]\n",
    "lastmodified": "2023-06-23T10:05:17.53531204+02:00",
    "tags": null
  },
  "/the-writing-is-the-thinking": {
    "title": "The writing is the thinking",
    "content": "From [[Smart Note Taking]]:\n\u003e Writing is not the outcome of thinking; it is the medium in which thought occurs.\n\nOn the note of [[Writing Effectively]], [[Larry McEnerney]] is saying similar things about *bringing value to the readers*. As well as [[Nick Milo]] with [[Linking Your Thinking (LYT)]].\n\nAnother that says similar things are [[Tim Ferriss]] with [How to Use Writing to Sharpen Your Thinking](https://www.youtube.com/watch?v=65U5byDZ55M\u0026ab_channel=TimFerriss). See the transcript [[Transcript of Tim Ferriss on How to Use Writing to Sharpen Your Thinking]]\n\n---\nOrigin: [[Smart Note Taking]] \nReferences: \nCreated [[2022-11-08]]\n",
    "lastmodified": "2023-06-23T10:05:17.693777807+02:00",
    "tags": null
  },
  "/transcript-of-tim-ferriss-on-how-to-use-writing-to-sharpen-your-thinking": {
    "title": "Transcript of Tim Ferriss on How to Use Writing to Sharpen Your Thinking",
    "content": "\nI'm gonna talk a little bit about how to\nuse writing and why you should use\nwriting to improve your thinking so I\nwould credit much of the success I've\nhad to whatever extent I've had success\nto learning how to write and to\npracticing writing and the reason for\nthat is that without writing it's very\nhard to freeze your thinking on paper so\nthat you can sharpen it so that you can\nsee where for instance using words that\naren't well-defined where you're saying\nthings that don't need to be said all of\nthis will help everything else I\nremember in college for instance when I\ntook a class with John McPhee an\nincredibly gifted writer and teacher all\nof my grades and every other class went\nup because every extraneous bit of\ninformation that was hurting instead of\nhelping me was taken out so to sharpen\nthe salt a couple of different\napproaches\n\nnumber one is write anything anything\nwhatsoever stream-of-consciousness essay\ndoesn't really matter let's just call it\none two three pages something along the\nlines of morning pages and Julia camera\nand the artists way popularized this and\nthere are a number of folks like Brian\nKoppelman very well-known writer\nscreenwriter co-creator of the show\nbillions swears by morning pages so that\nis an easy way to ease into the practice\nof just moving a pen I recommend\nfreehand so that you can see your\nthinking on paper that accomplishes two\nthings number one it takes the anxieties\nand nebulous worries in your head puts\nthem down in a freeze frame so that you\ncan kind of trap them in the printed\nform so you can get on with the rest of\nyour day the second thing it does is it\nallows you to see where you are sharp\nand where you were dull in your thinking\nnow if you are drafting as I do for\ninstance right now once a week writing\nif you are looking for a proofreader and\nyou do need a proofreader if you can't\nfind a professional writer because we\ncan't all find professional writers talk\nto friends who have any type of legal\ntraining or you could even hire a lawyer\nto do this or a paralegal someone with a\nlaw degree they are trained to look at\nlanguage very very carefully because in\na dispute in a negotiation and a\ndisagreement arbitration it's going to\ncome down to the\nwording of contracts and I have found\nthat when I do not have access to\nprofessional writers it is oftentimes\njust as good or even better to get\nlawyers or people with legal training to\nread my writing so that would be a\nworkaround that I accidentally\ndiscovered this is very powerful\nfew things to keep in mind when you are\nthen doing revisions because writing is\nin fact rewriting your gonna vomit out\nyour first one or two pages and my\nmantra of sorts which I borrowed from\nsomeone else who is a career ghost\nwriter is to crappy pages to crappy\npages per day and very often you're\ngoing to exceed that and then write more\nbut so that you set the game up in a way\nthat is winnable to copy pages is your\nminimum and it can be just rain vomit it\ncan be worthless but got to get two\npages all right once you have those two\npages you can approach revision in a few\ndifferent ways and you can revise\nyourself say in three rounds like my\nfriend Neil Strauss who I think has\nseven or eight New York Times\nbestselling books at this point when he\ndoes his first edit he edits for himself\nalright so he's editing just for his\npleasure for his enjoyment for what he\nthinks is good then the second round of\nedits he will edit for his fans the\npeople he thinks will really love this\nmaterial the third round is for the\ncritics the people who try to tear it\napart to find little niggly points that\nthey could twist and so on and that can\nbe a helpful framework for revising what\nI do with proof readers and you can do\nthis also with people who are not\ntrained writers at all and in fact you\nshould have some lay people so to speak\npeople who are not writers as a craft\nvery simply what I will ask people to do\nis read and highlight anything this\ncould be in a Google Doc a word doc on\npaper that is confusing people can like\nwhat you write they can dislike it they\ncan love it they can hate it but it\nshould not confuse anybody that's the\nfirst thing I will do is I'll ask people\njust highlight anything that is\nconfusing or unclear alright that's that\nstep one anyone can do that\nthe next is if you notice your mind\nwandering while you're reading this\nplease note that alright so if something\nis slow\nmaybe it can be taken out note where\nyour mind starts wandering alright the\ndictum there is when in doubt take it\nout just be like I don't know if I\nshould take I don't know if I should\nkeep this or not take it out at least as\nan experiment the other question that I\nposed to proofreaders because you can\ntrain people to be very good\nproofreaders is the 10% rule and it's\nnot really a rule but a guideline that I\nlike to use so I'll say please indicate\nthe 10% I should keep no matter what if\nthere is 10% that I should keep no\nmatter well what is the strongest 10%\nlike there's 10% I have to keep please\nindicate that and if I had to cut 10% or\neven 20% in some cases all ask people\nplease indicate what you would cut if\nyou had to cut something even if this is\nan essay or a blog post that is a page\nor two long and what you'll find if you\napproach writing systematically in this\nway and revision systematically in this\nway is your cognition your analysis your\nawareness of how you use words how you\nuse explanation how you use questions\nwill become so much sharper that it will\ntranscend this type of exercise and\nbegin to positively affect just about\neverything in your life so for\nfulfillment for excitement for\nprofessional success for personal\nsuccess \n\n**I find writing to be arguably the most important practice.** \ngood luck\n\n---\nOrigin: \nReferences: \nCreated [[2022-11-09]]\n",
    "lastmodified": "2023-06-23T10:05:17.692451882+02:00",
    "tags": null
  },
  "/travelling-for-work-with-kids-at-home": {
    "title": "Travelling for Work, With Kids at Home",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article1.be68295a7e40.png)\n\n## Metadata\n- Author: [[Robin Moffatt]]\n- Full Title: Travelling for Work, With Kids at Home\n- Category: #articles #publish \n- URL: https://rmoff.net/2019/02/09/travelling-for-work-with-kids-at-home/\n\n## Highlights\n- **Just Say No**  ^e89bf2\n\t- Say No when you need to. Be stingy about your travel time‚Äîdon‚Äôt commit to the first ask, but make sure that it is the best and most appropriate use of your time. Saying no is hard at first, and it feels like you‚Äôre being unhelpful‚Äîbut it gets easier. I‚Äôve been fortunate to have great bosses who respect my desire to limit travel because of family, and so ultimately if someone takes issue with me refusing to travel they can take it up with them. The second part of saying no is, in fact, saying no to yourself. I find it‚Äôs my impulses to travel more than being asked to do more that I really have to fight against. Like, \"just one more trip here won‚Äôt matter\", but they all add up and they do matter. Each day at home is precious and to be valued. In ten years your kids will have grown up and won‚Äôt want to spend any time with you. In ten years who will give two monkeys if you presented at SuperKool Konference 2008? Conferences come and go. Kids just go. Even now with them at seven and five, my wife and I are remarking how we miss [some of] when they were younger. Blink, and you‚Äôll miss it. Sign-out, and you‚Äôll miss it. Take that extra trip, and you‚Äôll miss it. To make it easier to say no, think about how you can prove and maximise your value whilst not travelling. In my current field of DevRel, there‚Äôs a ton of stuff you can do that doesn‚Äôt need to be on the road. Blogs, online talks, community support, and more. All super-valuable, all quantifiable, all from the comfort of your home.\n- All those random days a kid comes home from school with exciting news about something totally inconsequential that they learnt. All those evenings your partner‚Äôs left after a tough day with the kids, just needing a shoulder to rest on. Each of those totally mundane, boring, days at home is what makes family life. Each one of those that you miss, you‚Äôre absent. You‚Äôre a gap in their lives at home. And each of those days you‚Äôre out earning a living, for sure. But you‚Äôre not there. And that‚Äôs what will aggregate over time and compound.\n- Keeping in touch FaceTime. Is. Awesome. It‚Äôs also kinda crap. When I phone home, generally the kids will hold the phone pointed at the ceiling, and want to know when they can go back to playing Minecraft or watching TV. But hey, as my wise wife pointed out to me, it‚Äôs more about them seeing me, than me seeing them. So I try to call every day that I‚Äôm away. Timezone differences can make that hard, but it‚Äôs worth doing.\n# Travelling for Work, With Kids at Home\n\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article1.be68295a7e40.png)\n\n## Metadata\n- Author: [[in]]\n- Full Title: Travelling for Work, With Kids at Home\n- Category: #articles\n- URL: https://rmoff.net/2019/02/09/travelling-for-work-with-kids-at-home/\n\n## Highlights\n- Just Say No Say No when you need to. Be stingy about your travel time‚Äîdon‚Äôt commit to the first ask, but make sure that it is the best and most appropriate use of your time. Saying no is hard at first, and it feels like you‚Äôre being unhelpful‚Äîbut it gets easier. I‚Äôve been fortunate to have great bosses who respect my desire to limit travel because of family, and so ultimately if someone takes issue with me refusing to travel they can take it up with them. The second part of saying no is, in fact, saying no to yourself. I find it‚Äôs my impulses to travel more than being asked to do more that I really have to fight against. Like, \"just one more trip here won‚Äôt matter\", but they all add up and they do matter. Each day at home is precious and to be valued. In ten years your kids will have grown up and won‚Äôt want to spend any time with you. In ten years who will give two monkeys if you presented at SuperKool Konference 2008? Conferences come and go. Kids just go. Even now with them at seven and five, my wife and I are remarking how we miss [some of] when they were younger. Blink, and you‚Äôll miss it. Sign-out, and you‚Äôll miss it. Take that extra trip, and you‚Äôll miss it. To make it easier to say no, think about how you can prove and maximise your value whilst not travelling. In my current field of DevRel, there‚Äôs a ton of stuff you can do that doesn‚Äôt need to be on the road. Blogs, online talks, community support, and more. All super-valuable, all quantifiable, all from the comfort of your home.\n- All those random days a kid comes home from school with exciting news about something totally inconsequential that they learnt. All those evenings your partner‚Äôs left after a tough day with the kids, just needing a shoulder to rest on. Each of those totally mundane, boring, days at home is what makes family life. Each one of those that you miss, you‚Äôre absent. You‚Äôre a gap in their lives at home. And each of those days you‚Äôre out earning a living, for sure. But you‚Äôre not there. And that‚Äôs what will aggregate over time and compound.\n- Keeping in touch FaceTime. Is. Awesome. It‚Äôs also kinda crap. When I phone home, generally the kids will hold the phone pointed at the ceiling, and want to know when they can go back to playing Minecraft or watching TV. But hey, as my wise wife pointed out to me, it‚Äôs more about them seeing me, than me seeing them. So I try to call every day that I‚Äôm away. Timezone differences can make that hard, but it‚Äôs worth doing.\n",
    "lastmodified": "2023-06-23T10:05:17.592284849+02:00",
    "tags": null
  },
  "/two-minutes-rules": {
    "title": "Two Minutes Rules",
    "content": "Introduced in the [[Atomic Habits - James Clear]] book. \n\nIt says that:\n1. Make the habit for at longest 2 minutes! You might do some more. \n\t1. if it really doesn't stick, stop after two minutes of the gym, for example.\n2. The hard part is starting a habit. e.g., changing clothes before going to run. Running is the easy part; if you have changed, you will go no matter what\n\nMore on [How to Stop Procrastinating by Using the \"2-Minute Rule\"](https://jamesclear.com/how-to-stop-procrastinating).\n\n---\nOrigin: [[Atomic Habits - James Clear]]\nReferences: \nCreated [[2022-08-28]]\n",
    "lastmodified": "2023-06-23T10:05:17.735070436+02:00",
    "tags": null
  },
  "/ultradian-rhythm": {
    "title": "Ultradian Rhythm",
    "content": "In chronobiology, an ultradian rhythm is a recurrent period or cycle repeated throughout a 24-hour day. In contrast, circadian rhythms complete one cycle daily, while infradian rhythms such as the human menstrual cycle have periods longer than a day. \n\n![[For Real Productivity, Less Is Truly More#Highlights]]\n\n---\nOrigin: [[üîÉ  Reflection Template]]\nReferences: \nCreated [[2022-09-14]]\n",
    "lastmodified": "2023-06-23T10:05:17.716452571+02:00",
    "tags": null
  },
  "/vim": {
    "title": "vim",
    "content": "Vim is a text-based editor that is running in the terminal.\n\nUnlike other editors, Vim's power is its [[Vim Language (and Motions)]]. Although this can be added as an extension in other editors, vim has much more to offer.\n\nSee more on [Why Vim Is More than Just an Editor ‚Äì Vim Language, Motions, and Modes Explained](https://www.sspaeti.com/blog/why-using-neovim-data-engineer-and-writer-2023/), a love letter to Vim.\n\n---\nOrigin: \nReferences: \nCreated [[2023-02-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.439404282+02:00",
    "tags": null
  },
  "/website-analytics": {
    "title": "Website Analytics",
    "content": "\nThere are a bunch of tools nowadays. Some come for free and some are open-source, some respect [[GDPR]] regulations, and some do not.\n\n## Tools\n- [[Google Analytics]]\n- [[GoatCounter]] (used by me)\n- [[Umami]] (used by [[Karim Jedda]] on his [Data With Rust](https://datawithrust.com/) website)\n- [[Matomo]] \n- [Simple Analytics](https://www.simpleanalytics.com/) (used by [[levelsio]])\n\n---\nOrigin: \nReferences: \nCreated [[2023-06-21]]\n",
    "lastmodified": "2023-06-23T10:05:17.704961626+02:00",
    "tags": null
  },
  "/what-has-rust-in-common-with-duckdb": {
    "title": "What has Rust in common with DuckDB?",
    "content": "I'm constantly thinking about what [[Rust]] and [[DuckDB]] have in common. I'm constantly interchanging them when thinking about one or the other, but why? ü§î\n\nDuckDB is doing a zero-copy on top of Parquet, CSV, and Excel files. At the same time, Rust is doing a zero-cost abstraction (see [Rust for Data Engineers](https://www.sspaeti.com/blog/rust-for-data-engineering/)) on top of C, Python, and Ruby. \n\nSo they are very similar, which gives Rust a huge plus, as it's a full-blown programming language. Anything else?\n\n---\nOrigin: \nReferences: \nCreated [[2022-10-17]]\n",
    "lastmodified": "2023-06-23T10:05:17.703895161+02:00",
    "tags": null
  },
  "/what-i-have-learned-abroad": {
    "title": "What I have learned Abroad",
    "content": "Maybe you think to start 1-2 years abroad or traveling the world as well. Therefore I want to share what I learned from my recent experience.\n\nThinking out of the box, discovered the power of books and especially¬†[audiobooks](http://www.audible.co.uk/), work-life balance (specific for Danes or Nordic countries).\n\nMaybe most important, getting to know so many different cultures and realizing that we are all the same, just with a different backgrounds.\n\nMeeting people from, and all over the world.\n\nValue the time, and spend it right, you can‚Äôt buy it back!\n\nLive like a [[Stoic]]. If you don‚Äôt know where to begin, start with¬†[[The Daily Stoic (366 Meditations) - Ryan Holidays]].\n\nYou don‚Äôt have to travel all the time. It‚Äôs okay to have a base somewhere in the world, where you can enjoy old friends, family, and loved ones and prepare for the next trip.\n\nLast but not least, be [[happy]], with a smile.\n\n---\nOrigin: [[Location Independent Lifestyle]]\nReferences: \nCreated [[2023-02-15]]\n",
    "lastmodified": "2023-06-23T10:05:17.727241929+02:00",
    "tags": null
  },
  "/what-makes-a-happy-life": {
    "title": "What Makes a Happy Life",
    "content": "Besides [[Stoic|Stoicism]] and [[Journaling]], it‚Äôs relationships. According to the¬†[most comprehensive study in happiness](https://www.ted.com/talks/robert_waldinger_what_makes_a_good_life_lessons_from_the_longest_study_on_happiness?language=en), the¬†**happiest people are the ones having genuine relationships**.\n\n\u003cdiv style=\"max-width:854px\"\u003e\u003cdiv style=\"position:relative;height:0;padding-bottom:56.25%\"\u003e\u003ciframe src=\"https://embed.ted.com/talks/lang/en/robert_waldinger_what_makes_a_good_life_lessons_from_the_longest_study_on_happiness\" width=\"854\" height=\"480\" style=\"position:absolute;left:0;top:0;width:100%;height:100%\" frameborder=\"0\" scrolling=\"no\" allowfullscreen\u003e\u003c/iframe\u003e\u003c/div\u003e\u003c/div\u003e\n\nI always keep this in the back of my mind and add the value of time to it. It keeps me grounded in the things most valuable to me. With meditation on death, for example, called¬†[[Memento Mori]], where you always be aware that you could die tomorrow or have an irreparable sickness.\n\n\u003e A pessimist sees the difficulty in every opportunity; an optimist sees the opportunity in every difficulty.\n\nIt also shows the factor of time as the most valuable thing we have on this earth. Being mindful about it and sharing it with friends and family also makes good relationships, which again was shown to be the best indication of happiness. I also believe in¬†[The More You Share the More You Get](https://sspaeti.com/blog/the-more-you-share-the-more-you-get/)¬†and generally being somewhat positive than rather negative also helps a lot in going through my life.\n\n\u003e [!info] How to Life\n\u003e Another book full of wisdom to find your own happy life is¬†[How to Live](https://sive.rs/h). It provides 27 conflicting answers on how to live your life.\n\n---\nOrigin: [[Personal Knowledge Management Workflow for a Deeper Life]]\nReferences: \nCreated [[2022-08-27]]\n",
    "lastmodified": "2023-06-23T10:05:17.55890181+02:00",
    "tags": null
  },
  "/when-is-a-data-engineer-needed": {
    "title": "When is a data engineer needed?",
    "content": "I believe, that **not every company is in need of data engineers**. His skills are mostly required if the company either:\n\n  * has already a product that is fully web-based and therefore data-driven \n  * the need or desire to analyze lots of data (Volume) from any kind of sources (Variety) and fast (Velocity) to get the insights (Value and Veracity) (see more about the \u003ca href=\"https://miuc.org/vs-big-data/\" target=\"_blank\" rel=\"noopener\"\u003efive V's of Big Data\u003c/a\u003e)\n\n---\nReferences: [[Data Engineering]]\n",
    "lastmodified": "2023-06-23T10:05:17.569359791+02:00",
    "tags": null
  },
  "/writers-block": {
    "title": "Writer's Block",
    "content": "\nAs with [[Creativity vs Productivity]], I try to embrace the block and do some creative work instead. Writing is supposed to be hard. If you go on and get over the first 10 minutes ([[Ultradian Rhythm]]), you will get into the flow and [[Deep Work]] again.\n\nWhat else can we learn from writer's block? Have clear [[Strategy and Goals]] which brings you [[clarity]] and instead of adding, subtract ([[Subtract  Derek Sivers]]) first.\n\n## Strategies to unblock\n\n\u003e There is no talking block, only writer's block. [[Jonny Miller]]\n\nInterestingly as if we change Medium, we can unblock it:\n\n- Talk a walk in nature\n- Listen to the same playlist over and over again, or use [[Focus@Will]]\n- Change between Visual (draw a MindMap, [Obsidian Canvas](https://obsidian.md/canvas), Draw [[ExaliDraw]], Talk)\n- Go forth and back the pendulum with [[Creativity vs Productivity]]\n- Try to get into the same habit when writing (same place, same music, etc.), your brain will know its need to write before you even start. The [[Pre‚ÄìGame Routine]] can help as well.\n- [[Journaling]] for a while (see [[üìì Daily Note Template]])\n- These are also similar to [[Deep Work]] and How I get into Deep Work ([[Deep Work#How I get into Deep Work (*Flow*)]])\n\nGreat read on the very topic: [[If You Have Writer's Block, Maybe You Should Stop Lying]].\n\n## Other resources I found helpful\n\nLots to learn also on [[Four Thousand Weeks, Time Management for Mortals - Oliver Burkeman]] and discussion in the podcast with [[Four Thousand Weeks, Time Management for Mortals - Oliver Burkeman#From the Podcast discussion with Ali Abdaal]].\n\n---\n\n\u003e Acknowledge that writing is hard. Writing is like [[programming]], it's problem solving. That's why it's hard to code and after that write in the evenings, as both are trying to solve problems. Said by [[Brandon Sanderson]] in [Bonus Episode: Originality, Writing and Career Fulfilment with Brandon Sanderson - Deep Dive with Ali Abdaal | Podcast on Spotify](https://open.spotify.com/episode/6Wd4FlMApXe2Y4QXp2hh4x?si=ZfyLcZOVSQy4ogaVBH5pBw)\n\n\n---\nOrigin: [[What is Time]] \nReferences: \nCreated [[2022-08-18]]\n",
    "lastmodified": "2023-06-23T10:05:17.780151588+02:00",
    "tags": null
  },
  "/writing": {
    "title": "Writing",
    "content": "Writing has been my new job, at least part-time, since I joined [[Airbyte]]. So how to get better, and what about writing makes it so hard?\n\n## Approaches\nApproaches to how I write are in my [[Second Brain]]. I will write [[Fleeting Notes]], collect [[Literature Notes]] mostly Readwise synced directly into [[Obsidian]], write them out as [[Permanent Notes]], and tag them as `#publish` to move them to my public brain.\n\nI was having this all accessible in one place, connecting and [[Linking Your Thinking (LYT)]] notes and ideas with each other, sparking many new ideas and inspirations I didn't have before.\n\nI like the quote from [[Writing Handbook by Julian Shapiro]]:\n\u003e Writing is one of the most radical things you can do without money. Skilled writers change the world from their couches. \n\nWriting is \"scalable teaching\":\n\u003e \"**Writing is the most scalable professional networking activity**¬†- stay home, don't go to events/conferences, and just put ideas down.\"\n\n## Process \n\u003e [!note] I always need to remind myself:\n\u003e Writing is hard! It's easy to start, hard to finish. You get stuck, you have a blockage, your creativity is low, you get interrupted, and you lose confidence in your writing. Reminding myself that the first 10 minutes are the hardest and envisioning the end product keeps me motivated.\n\n\u003e [!hint] [[Public Narrative, Collective Action, and Power (now, us and self)]]\n\u003e 1. A story of now\n\u003e 2. A story of us\n\u003e 3. A story of self\n\nThis is what brought me to writing. To release my thoughts (brain dump), make my brain accessible for more, for being creative. I like to brainstorm, change, delete, add, research, and do the thinking while writing. When writing on a computer, I can do it almost at the speed of my thinking; I do not lose thoughts as I would when writing on paper ([[Journaling#Digital vs Paper]]). I can stop at any given time and come back, as all the thinking is written down. As well, I love the editing part. Making it better, finding correlations, and things I wouldn't have expected before. \n\nBut before getting into the editing phase, during the initial phase, when drafting or coming up with the content itself, I try to get into distraction-free [[Deep Work|Flow]]. Long chunks of uninterrupted time, [[Cal Newport]] talks about [[Deep Work]] in his book.\n\nUsually, editing is when I learn the most, but at the same time, it's also the most challenging step. I will get into a [[Writers Block]] and want to start a new thing instead. But by switching between [[Creativity vs Productivity]] or just going into nature with my thoughts and nothing else, usually one of them helps. Or if not, I leave it for a couple of days, weeks, months, and come back when another time. Keeping the [[Ultradian Rhythm]] in mind also helps overcome the initial hardest ten minutes. \n\nWhen I let the writing stay for a while, that typically leads to better quality because when I come back, I have new insight and might delete or change existing thoughts. The longer the wait, the more insightful that note will get. Therefore I like keeping it slow. In the end, the reader will not mind if you spend one day or three months on an article; he appreciates it if the [[reader flow]] is good and he can learn. At least that is my goal as a writer, to give some learnings to the readers.\n\nWriting doesn't always need to be about an article. You can just put some thought, [[Journaling]], or something you learned or find interesting, into a note. Save it for later. You mostly don't need the thing you just knew at that moment. Something you find interesting today is doubtful to be of value right now. But maybe in two years from now.\n\nOther things I'm pondering are [[Writing a good intro]], [[How to Write (Titles, Heading, Bolding, etc.)]], [[Long vs Short Form Posts]], [[Writing One Sentence Per Line  Derek Sivers]], [[Writing- Copy Work]], [[How to Write Well]], [[Learn in Public]], or [[1000 True Fans]]. As well as having found my writing voice was important. In short, I need to write from experience and cannot create a free story‚Äîmore in [[My Writing Process]] and [[My Writing Voice]].\n\nMore on [[Writing Effectively]] and [[How to Write Well]].\n\n## Goals\nOn the other hand, as I write more, I also want to learn more and get better at it. That's why one of my [[‚öΩÔ∏è  My Three to Five Year Vision]] is just that. \n\nI started a long time ago with a blog back in 2005, and it was probably one of the best decisions for my writing portfolio or career. Besides loving to design and create websites for a long, it's also felt that I could keep my content over time. Imagine only lately with platforms such as Medium and Substack; they come and go. Simon Willson says the same in his Tweets ([[Tweets From Simon Willison]]):\n\u003e Start a blog! The best time to start one was twenty years ago. The second best time is today.\n\n[[Write Simply, with Clarity and the Audience in mind]].\n\nRelated [[The Most Important Skill...]] for writing is storytelling, Nathan says. And [Writing well by Julian Shapiro](https://www.julian.com/guide/write/intro). \n\n## Distribution of the Writing\n- [[How to distribute on Social Media]]\n- [[Self Publish a Book]]\n- [[Create a Book on Markdown]]\n\n---\nOrigin: [[Writing a good intro]]\nReferences: #publish \nCreated [[2022-08-19]]\n",
    "lastmodified": "2023-06-23T10:05:17.779620168+02:00",
    "tags": null
  },
  "/writing-advice-from-a16zs-andrew-chen": {
    "title": "Writing Advice From A16z's Andrew Chen",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article3.5c705a01b476.png)\n\n## Metadata\n- Author: [[Andrew Chen]]\n- Full Title: Writing Advice From A16z's Andrew Chen\n- Category: #articles #publish \n- URL: https://blog.foster.co/writing-advice-from-a16zs-andrew-chin/\n- Tweet: [https://twitter.com/andrewchen/status/890076892698750976](https://twitter.com/andrewchen/status/890076892698750976)\n\n## Highlights\n- \"Writing is the most scalable professional networking activity - stay home, don't go to events/conferences, and just put ideas down.\"\n- \"People are often obsessed with needing to write original ideas. Forget it. You're a journalist with a day job in the tech industry.\"\n- \"Publishing ideas, learnings, opinions, for years \u0026 years is a great way to give. And you'll figure out how to capture value later.\"\n- \"Think of your writing on the same timescale as your career. Write on a multi-decade timeframe. This means, don't just pub on Quora/Medium.\"\n",
    "lastmodified": "2023-06-23T10:05:17.606080309+02:00",
    "tags": null
  },
  "/writing-effectively": {
    "title": "Writing Effectively (with Value)",
    "content": "Write *valuable* things to your readers! Don't explain as in school. Don't create new/original knowledge (if it's not valuable, who cares?). \n\nAlso focus on [[clarity]], your audience and writing simple see [[Write Simply, with Clarity and the Audience in mind]]. Make sure readers learn something new.\n\nOn why writing an essay: the writer writes because he wants to think. Couple of thoughts here:\n- The readers don't owe you an appreciation of your thinking. you should not publish that just yet.\n- I think here lies an important point where the [[Second Brain]] and [[Journaling]] come in. In a second brain, we write for ourselves, writing for the thinking. But then when we publish, we must make the switch and think about the readers first and create **value**.\n\t\n**We are moving forward from instability (which is the interesting one), not from stability (when we say chronologically what happened)**. The interesting one is the first one when you challenge each opinion and ask questions, challenge and comment on points they made.\n\n\u003e [!note] Interesting comment from YouTube\n\u003e \"Writing is not about communicating your ideas, it is about changing readers' ideas\". You can also do this by entering your dreams at a deep level, I saw it in a movie! Thomas Fagerli\n\n## Interesting connections\nI found captivating connections when digging into writing effectively such as #smartnotetaking #secondbrain #journaling and #personalknowledgemanagement.\n\nManifesting in the differentiation between writing for myself (thinking) and publishing articles (bringing value to readers).\n![[Pasted image 20221109094220.png]]\n\n---\nOrigin: [The Craft of Writing Effectively - YouTube](https://youtu.be/vtIzMaLkCaM), [[The Craft of Writing Effectively a Summary Robin Writes Code Prose  Maths]]\nReferences: [[Writing]]\nCreated [[2022-11-09]]\n",
    "lastmodified": "2023-06-23T10:05:17.743659905+02:00",
    "tags": null
  },
  "/writing-handbook-by-julian-shapiro": {
    "title": "Writing Handbook by Julian Shapiro",
    "content": "\n![rw-book-cover](https://readwise-assets.s3.amazonaws.com/static/images/article4.6bc1851654a0.png)\n\n## Metadata\n- Author: [[julian.com]]\n- Full Title: Writing Handbook by Julian Shapiro\n- Category: #articles #publish \n- URL: https://www.julian.com/guide/write/intro\n\n## Highlights\n- Why write nonfiction? This handbook helps you write nonfiction books and blogs for three reasons: 1 Gain leverage\n- Writing is one of the most radical things you can do without money. Skilled writers change the world from their couch.\n- [[Clarity]] of thought\n- When you write, your brain can't stop itself from drawing connections between ideas‚Äîand exploring their implications. This shines a light on broken logic, which helps you gain clarity of thought. Writing is the act of thinking clearly with the help of paper. Writing slows down your thinking so you can play with your ideas. 3 Human connection The most efficient way to meet interesting people is to become someone they already want to meet. If you do interesting things then write about them publicly with an authentic voice, like-minded people want to meet the person behind that voice. Writing is a bat signal for your people.\n",
    "lastmodified": "2023-06-23T10:05:17.590506046+02:00",
    "tags": null
  },
  "/y42": {
    "title": "Y42",
    "content": "Mission Control for Your Data Pipelines.\n\nY42 is the first fully managed Modern DataOps Cloud ‚Äî purpose-built for production-ready data pipelines on BigQuery and Snowflake.\n\nCEO and Founder is [[Hung Dang]].\n\n---\nOrigin: \nReferences: [Y42 | Mission control for your data pipelines](https://www.y42.com/)\nCreated [[2023-01-10]]\n",
    "lastmodified": "2023-06-23T10:05:17.731182495+02:00",
    "tags": null
  },
  "/zettel": {
    "title": "Zettel",
    "content": "It's the small individual idea in the [[Zettelkasten]] system. [[Niklas Luhmann]] started this and he wrote each idea on an index card organized inside the Zettelkasten. These were thematically unlimited and extendable to infinity in any direction. Especially now with [[Obsidian]] and the [[Second Brain]], even more.\n\nOne idea per slip card. Luhman linked them if they are on the same topic or branch if it's new ideas. As he read books or whatever, he would create new notes, update or add comments to existing cards or create new branches/links along the way. Each new note had a unique id.\n\n---\nOrigin: [[Zettelkasten]]\nReferences: \nCreated [[2022-08-26]]\n",
    "lastmodified": "2023-06-23T10:05:17.551241263+02:00",
    "tags": null
  },
  "/zettelkasten": {
    "title": "Zettelkasten",
    "content": "# Zettelkasten\nStarted by [[Niklas Luhmann]], also called \"Slip Box\". This **approach will further dilute the idea of a librarian who organizes books in main categories and sub-folder and focuses only on the thought at hand as an individual note**. Instead of spending lots of your brainpower on which folder to put a specific note in, you start creating it in one folder for all and linking them together. Usually, you wouldn't have any structure in these concepts, but I combined the two methods into my Second Brain. You also see in the above design under `üí° Resources/üóÉ Zettelkasten` I have its folder.\n\nThe Zettelkasten method is a **personal strategy process for thinking and writing. Similar to the [[Second Brain]], It helps the daily consumed overload of data**. It does not only help to store and organize knowledge but also improves your memory and knowledge retention. The Zettelkasten method is suitable for when you want to systematically organize vital information, find the information again, even years later, and develop your ideas.\n\nIn a Zettelkasten, we talk about three main types of notes. Firstly you start with **[[Fleeting Notes]], which are quick, informal notes on any thought or idea that pops into your mind.** They don't need to be highly organized, and in fact, shouldn't be. They are not meant to capture an idea in full detail but serve as reminders of what is in your head.\n\nThe second is [[Literature Notes]]. [[Niklas Luhmann]] would write them down on index cards with the bibliographic details on the back. Each contains the main point he didn't want to forget or thought he could use in his writing. \n\nS√∂nke Ahrens offers four guidelines for creating literature notes:\n- Be **highly selective** in what you decide to keep\n- Keep the **overall note as short** as possible\n- **Use your own words** instead of copying quotes verbatim\n- **Write down the bibliographic details** on the source.\n\nThis third step starts with looking through the first two kinds of notes that you've created: [[Fleeting Notes]] and [[Literature Notes]].**[[Permanent Notes]]** are the last and most important ones. **They make up the long-term knowledge** that gives the Zettelkasten its value. As you go through them, think about how they relate to your research, current thinking, or interests. **The goal is not just to collect ideas but also to develop arguments and discussions over time.** If you need help jogging your memory, look at the existing topics in your Zettelkasten since it already contains only things that interest you. Ask yourself open questions to deepen your thinking and bring you outside your comfort zone thinking.\n\n\u003e [!danger] Delete fleeting notes after rewriting\n\u003e Once this step of rewriting in your own words is done: **Throw away (or delete) the fleeting notes** from step one and file the literature notes from step two into your bibliographic Zettelkasten.\n\nThis approach needs time to get used to, and I'm still in its progress. But I can already feel considerable power, and I'm starting to put all my notes in my Zettelkasten folder, except for the `‚öõÔ∏è Areas` folder where repeated things come in, such as family, health, work, etc. and `üì¨ Inbox` where any notes get put into as first before being moved to Zettelkasten or Areas. \n\nIt saves me a lot of time, while as a Swiss, I'm very organised and want to structure. The Zettelkasten helps me to focus on the content instead. It also gives me a relaxed state if I write something down quickly without too much thought, that I will organically find it later when needed or when I go through my open loops in my Inbox. Which most often sparks new ideas and starts my connected thinking yet again from another angle.\n\n\u003e [!tip] Tool of Choice\n\u003e I use Obsidian for [linking my thoughts](https://youtu.be/q0Pf6ZePNGc) in a full Zettelkasten manner. More on that read [How to take notes in 2022](https://www.sspaeti.com/blog/how-to-take-notes-in-2021/).\n\n---\n\nMore:\n\nThe method is a personal strategy process for thinking and writing. It helps the daily consumed overload of data. Does not only help to store and organize knowledge but also improves your memory and knowledge retention. The Zettelkasten method is good for when you want to:\n-   Systematically organize important information\n-   Find information again, even years later\n-   Develop your own ideas\n\nZettelkasten method comprises three main types of notes:\n- [[Fleeting Notes]]\n- [[Literature Notes]]\n- [[Permanent Notes]]\n\n[[Niklas Luhmann]] started with the Zettelkasten or also called Slip-Box because he rejected the way of storing his thoughts and notes in an alphabetical categorization way. Therefore he started a research \"database\" made of index cards ([[Zettel]]) that were thematically unlimited and extended to infinity in any direction.\n\nThe system work as he writes down potentially useful ideas he encountered while reading on a small slip card. One idea per slip card. He links them if they are on the same topic or branch if it's new ideas. As he read books or whatever, he would create new notes, update or add comments to existing cards or create new branches/links along the way. Each new note has a unique id.\n\nHow I use my Zettelkasten I described in [[My Zettelkasten Workflow]].\n\nGood overview:\n![[Pasted image 20220410173804.png]]\n\nTools to create Zettelkasten or Digital Gardens in [[Open-Source Obsidian Publish Alternatives]], and [[Zettelkasten with Obsidian]].\n\n---\nOrigin: [[Smart Note Taking (S√∂nke Ahrens)]]\nReferences: \nCreated: [[2021-10-05]]\n",
    "lastmodified": "2023-06-23T10:05:17.539957318+02:00",
    "tags": null
  }
}